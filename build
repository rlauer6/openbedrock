#!/bin/bash
# -*- mode: sh; -*-

function verify_or_exit() {
    verify_message="$1"

    test -n "$1" && echo -e "\033[1m${verify_message}\033[0m"
    echo -e "\033[1mContinue (y/n)?\033[0m"
    
    read -n 1 -s ans
    if ! test "$ans" = "y"; then
	exit 1
    fi
}

function help() {
    less  <<EOF
    $0 [OPTIONS [COMMAND]

Build the Bedrock project.  Optionally deploy the rpms to the Bedrock
repo website.

OPTIONS
-------
-h, --help                   - help
-x, --no-sign                - do not sign the RPM
-r, --rpm-mode               - do not compile Perl during build
-b, --basedir                - base directory (default: \$HOME)
    
COMMANDS
--------
build                        - build and sign RPM (unless -x)
bump                         - bump minor revision
bump release|minor|major     - bump minor release
createrepo                   - stage a repo to \$basdedir/yum-repo
deploy                       - createrepo & deploy RPM

Recipes:
-------
To release (publish to public repository) the Bedrock RPMs perform all
of these steps.  You need to bump, build AND deploy!  Steps have been
separated to support delayed deployment pending testing and
documentation update.

Note: 'deploy' means to create a repo for previously built RPMs and
then update the Bedrock repo site.

* build the RPMs
    
  ./build build

* build but don't sign RPMs

  ./build -x build

* build and deply a new repo

  ./build deploy

* bump the package release (M.m.n-release, see Versions)

  ./build bump

Versions:
---------

Bedrock loosely uses a semantic versioning scheme for its version
numbers. Versioning consists of three dot separated integers
indicating a major, minor, and release version.

* Major versions are typically compatibility breaking releases or
significant technology changes.

* Minor versions may create new features within the same major release
  but typically do not break compatibility.

* Release versions contain bug fixes and patches.


The official version base (M.m.r) of Bedrock is contained in
'configure.ac'. A suffix ('-n') may be used to indicate a development
version of a specific version prior to release of a new stable
version.

* To release a new version of Bedrock, bump the version, update the
  NEWS, commit changes and push to the master branch.

  * to indicate a new development version

    ./build bump             -> M.m.r-n+1

  * release an update to an existing release - updates package release

    ./build bump release    -> M.m.r+1

  * release a MINOR update

    ./build bump minor      -> M.m+1.0-0

  * release a MAJOR update

    ./build bump major      -> M+1.0.0-0

Hints:
------
* Use the --rpm-mode (-r) option when you want to build the project
  without checking the syntax of the Perl modules.  Without this
  option your environment will need to have dependent Perl modules
  installed.  -r is used primarily with an automated build process that
  builds the project in a "pristine" environment.

* Use the --no-sign (-x) option if you're not interested in signing
  the rpms.  You may not have access to Bedrock's private key or may
  not want to deal with the question.

  ./build -x build

* Use --basedir (-b) with the 'createrepo' or 'deploy' commands to
  stage the yum repository website to a directory named 'yum-repo'
  below the directory specifed with this option.  The default is to
  create a directory named 'yum-repo' in your \$HOME directory.

EOF

    return 0
}

function bedrock_full_version() {
    bedrock_version=$(cat VERSION)
    echo "$bedrock_version-$(cat bedrock-build)"
}

# create the files that will define the http://repo.openbedrock.net
# website.  Files are staged to $1
#
# - index.html
# - bedrock-startup.sh
# - bedrock.repo

create_website_files() {
    if ! test -d "$1"; then
	return
    fi
    
    # export public key, relies on ~./gnupg configuration (s3://openbedrock/gnupg.tar.gz)
    gpg -a --export $PASSPHRASE > $1/RPM-GPG-KEY-openbedrock.org

    cp src/main/bedrock/img/bedrock.png $1/bedrock.png

    cat <<EOF >$1/index.html
<html>
<body>
<a href="http://twiki.openbedrock.net"><img src="bedrock.png"></a>
<h1>Bedrock yum Repository</h1>
  <ul>
   <li>The latest version of Bedrock is <i>$bedrock_version</i></li>
   <li><a href="http://twiki.openbedrock.net">See the Bedrock wiki for more information</a></li>
   <li><a href="https://github.com/rlauer6/openbedrock">GitHub source repository</li>
   <li><a href="http://repo.openbedrock.net/RPM-GPG-KEY-openbedrock.org">GPG key</li>
   <li><a href="http://repo.openbedrock.net/bedrock.repo">bedrock.repo</a></li>
  </ul>
<pre>
[bedrock]
name=bedrock
enabled=1
gpgcheck=1
gpgkey=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com/RPM-GPG-KEY-openbedrock.org
baseurl=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com
</pre>
</body>
</html>
EOF


    cat <<EOF  >$1/bedrock.repo
[bedrock]
name=bedrock
enabled=1
gpgcheck=1
gpgkey=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com/RPM-GPG-KEY-openbedrock.org
baseurl=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com
EOF

    cat <<EOF >$1/bedrock-startup.sh
#!/bin/bash

yum update -y
wget -q http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com/bedrock.repo -O /etc/yum.repos.d/bedrock.repo
yum install -y bedrock-openbedrock
service httpd restart
chkconfig httpd on
EOF

}


# +-------------------------+
# | MAIN SCRIPT STARTS HERE |
# +-------------------------+

REPO_BUCKET=repo.openbedrock.net

CREATEREPO=$(command -v create_repo)

if test -z "$CREATEREPO"; then
    CREATEREPO=$(command -v createrepo_c)
fi

if test -z "$CREATEREPO"; then
    >&2 echo "no createrepo found...you won't be able to create a yum repo"
fi

SIGN='--sign'

# -a => allow short optins (-), -o {options} -l {long options}
OPTS=$(getopt -a -o hb:xr -l help,no-sign,rpm-mode,basedir -- "$@")

if [[ $? -ne 0 ]]; then
    help;
    exit $?
fi

eval set -- "$OPTS"

while [ $# -gt 0 ]; do

    case "$1" in

	-h | --help)
	    shift;
	    help;
	    exit -1;
	    ;;
	
	-x | --no-sign)
	    shift;
	    SIGN=''
	    ;;

	-r | --rpm-mode)
	    RPM_MODE='--enable-rpm-build-mode'
	    shift;
	    ;;

	-b | --basedir)
	    shift;
	    basedir="$1"
	    shift;
	    ;;
 
	* )
	    shift;
	    break;
	    ;;
    esac
done

if test -z "$basedir"; then
    basedir="$HOME"
    
    if test -s "$HOME/.rpmmacros"; then

        topdir=$(perl -n -e '/^%_topdir/ && print ((split / /)[1]);' $basedir/.rpmmacros)

        if test -z "$topdir"; then
	    echo "no %_topdir in .rpmmacros defined!"
	    exit -1;
        fi

        if ! test -d "$topdir"; then
	    echo "%_topdir ($topdir) does not exist!"
	    exit -1;
        fi
    else
       >&2  echo "no .rpmacros found - you won't be able to build an rpm here!"
    fi
fi

case "$1" in 

    '?')
	help;
	exit 0;
	;;

    # bump patch version
    bump)
	shift;
	PROJECT_RELEASE=$(cat bedrock-build)
        if test -z "$1"; then
	    PROJECT_RELEASE=$(printf %d $(echo "$PROJECT_RELEASE 1+n" | dc -))
	    mv bedrock-build bedrock-build~
	    echo $PROJECT_RELEASE > bedrock-build
	else
 	    ./bootstrap bump $1 >/dev/null
	    echo 0 > bedrock-build
	    rm -f bedrock-build~
	fi
	
	bedrock_full_version;
	;;

    # build from latest tag
    build)
  
        STAGED=$(git -c color.status=false status --short | grep  '^\(M\|D\|A\|R\)'|wc -l)
        UNCOMMITTED=$(git -c color.status=false status --short | grep  '^ M'|wc -l)

        if [ "$UNCOMMITTED" -gt 0 ] || [ "$STAGED" -gt 0 ]; then
            verify_or_exit "WARNING: staged($STAGED)/uncommited ($UNCOMMITTED) changes. Build anyway?"
        fi
        
	test -e configure && make maintainer-clean || true
	./bootstrap
	./configure --prefix=/usr $RPM_MODE
	make && make dist
	tarball=$(ls -1rt *.tar.gz | tail -1)
	[ -e "$tarball" ] && rpmbuild -tb $tarball
	;;

    createrepo | deploy)
        if test -z "$CREATEREPO"; then
            >&2 echo "told ya' no createrepo found!"
            exit 1;
        fi

	repo=$(mktemp -d)
	mkdir ${repo}/noarch
	
	bedrock_rpm=$(ls -1rt ${topdir}/RPMS/noarch/bedrock-website-*.rpm | tail -1)
	if test -z "$bedrock_rpm"; then
	    echo "no rpms found!"
	    exit -1;
	fi

	bedrock_version=$(echo $bedrock_rpm | perl -np -e 's/.*?\-(\d+\..*)\.noarch.rpm/$1/;') 
	    
	for a in ${topdir}/RPMS/noarch/*$bedrock_version*rpm; do
	    test -n "$SIGN" && ~/bin/rpm-sign OpenBedrock OpenBedrock $a
	    cp $a ${repo}/noarch
	done
	
        if ! $CREATEREPO $repo; then
	  echo "could not create repo"
	  exit;
	fi

	create_website_files $repo

	test -d $basedir/yum-repo || mkdir $basedir/yum-repo

	cp -r $repo/* $basedir/yum-repo

	if [ "$1" = "createrepo" ]; then
	    exit 0;
	fi

	set -x
	
        # sync local repo with S3 bucket, make it PUBLIC
        PERMISSION="--grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers"
	aws s3 sync  --include="*" ${repo} s3://$REPO_BUCKET/ $PERMISSION

        # cleanup local copy of repo
	test -n "$repo" && rm -rf $repo
	;;

    *)
	help
	exit 0;
	;;
esac
