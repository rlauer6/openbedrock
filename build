#!/bin/bash

# NOTES:

# To release the Bedrock RPMs
# 
# 1) build the RPMs
#     
#     ./build bump
#     ./build build
# 
# 2) build and deply a new repo
# 
#     ./build deploy
#
# 3) edit the wiki and declare a new version

#
# help()
#
# help!
#
help() {
    echo "$0 [options] [command]"
    echo ""
    echo "  Options"
    echo "  -------"
    echo "    -h, --help                   - help"
    echo ""
    echo "  Commands"
    echo "  --------"
    echo "    build                        - build RPM"
    echo "    bump                         - bump minor revision"
    echo "    bump release                 - bump minor release"
    echo "    deploy                       - deploy RPM"
    echo "    unbump                       - restore last version number"
    echo ""

    return 0
}

# +-------------------------+
# | MAIN SCRIPT STARTS HERE |
# +-------------------------+

test -z "$NOSIGN" && SIGN='--sign'

# -a => allow short optins (-), -o {options} -l {long options}
OPTS=$(getopt -a -o h -l help -- "$@")

if [[ $? -ne 0 ]]; then
    help;
    exit $?
fi

eval set -- "$OPTS"

while [ $# -gt 0 ]; do

    case "$1" in

	-h | --help)
	    shift;
	    help;
	    exit 0;
	    ;;

	* )
	    shift;
	    break;
	    ;;
    esac
done

case "$1" in 

    '?')
	help;
	exit 0;
	;;

    unbump)
	if test -e "bedrock-build~"; then
	    mv bedrock-build~ bedrock-build
	fi
	cat bedrock-build
	;;

    # bump release number (not version, just release)
    bump)
	shift;
	PROJECT_RELEASE=$(cat bedrock-build)
        if test -z "$1"; then
 	    PROJECT_RELEASE=$(echo "$PROJECT_RELEASE 0.01+n" | dc -)
	else
	    if [ "$1" = "release" ]; then
 		PROJECT_RELEASE=$(echo "$PROJECT_RELEASE 1+n" | dc -)
	    else
		echo "huh?"
		exit;
	    fi
	fi
	mv bedrock-build bedrock-build~
	echo "$PROJECT_RELEASE" > bedrock-build
	echo "$PROJECT_RELEASE"
	;;

    # build from latest tag
    build)
	make maintainer-clean
	./bootstrap
	./configure --prefix=/usr --enable-rpm-build-mode
	make && make dist
	tarball=$(ls -1rt *.tar.gz | tail -1)
	[ -e "$tarball" ] && rpmbuild -tb $tarball $SIGN
	;;

    deploy)
	topdir=$(perl -n -e '/^%_topdir/ && print ((split / /)[1]);' ~/.rpmmacros)
	set -x

	if test -d "$topdir"; then
       bedrock_rpm=$(ls -1rt ${topdir}/RPMS/noarch/bedrock-website-*.rpm | tail -1)
	    bedrock_version=$(echo $bedrock_rpm | perl -np -e 's/.*?\-(\d+\..*)\.noarch.rpm/$1/;') 

	    if test -n "$bedrock_rpm"; then

		repo=$(mktemp -d)
		mkdir ${repo}/noarch

		BUCKET=repo.openbedrock.net
		
                # if we successfully built some RPM, create a
                # temporary repo and sync with AWS S3 repo
		for a in ${topdir}/RPMS/noarch/*$bedrock_version*rpm; do
		    cp $a ${repo}/noarch
		done
		
		bedrock_ide=$(ls -1t ${topdir}/RPMS/noarch/bedrock-ide-* | head -1)
		
		if test -n "$bedrock_ide"; then
		    echo "Sign bedrock-ide package..."
		    rpm --resign $bedrock_ide
		    cp $bedrock_ide ${repo}/noarch
		else
		    echo "$bedrock_ide does not exist?"
		fi
		
                # get all the .rpm files from the S3 bucket and
                # recreate the repo
		createrepo $repo
		    
                # sync local repo with S3 bucket, make it PUBLIC
                PERMISSION="--grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers"
		aws s3 sync --recursive --include="*" ${repo} s3://$BUCKET/ $PERMISSION
		aws s3 ls s3://$BUCKET/

		# export the GPG key to make sure it always stays in sync
		gpg -a --export OpenBedrock > RPM-GPG-KEY-openbedrock.org
		aws s3 cp RPM-GPG-KEY-openbedrock.org s3://${BUCKET}/ $PERMISSION

		aws s3 cp src/main/bedrock/img/bedrock.png s3://${BUCKET}/ $PERMISSION

		cat <<EOF >/tmp/index.html
<html>
<body>
<a href="http://twiki.openbedrock.net"><img src="bedrock.png"></a>
<h1>Bedrock yum Repository</h1>
  <ul>
   <li>The latest version of Bedrock is <i>$bedrock_version</i></li>
   <li><a href="http://twiki.openbedrock.net">See the Bedrock wiki for more information</a></li>
   <li><a href="https://github.com/rlauer6/openbedrock">GitHub source repository</li>
   <li><a href="http://repo.openbedrock.net/RPM-GPG-KEY-openbedrock.org">GPG key</li>
   <li><a href="http://repo.openbedrock.net/bedrock.repo">bedrock.repo</a></li>
  </ul>
<pre>
[bedrock]
name=bedrock
enabled=1
gpgcheck=1
gpgkey=http://${BUCKET}.s3-website-us-east-1.amazonaws.com/RPM-GPG-KEY-openbedrock.org
baseurl=http://${BUCKET}.s3-website-us-east-1.amazonaws.com
</pre>
</body>
</html>
EOF
		aws s3 cp /tmp/index.html s3://$BUCKET/ $PERMISSION
		
		# bedrock.repo
		cat <<EOF  >/tmp/bedrock.repo
[bedrock]
name=bedrock
enabled=1
gpgcheck=1
gpgkey=http://${BUCKET}.s3-website-us-east-1.amazonaws.com/RPM-GPG-KEY-openbedrock.org
baseurl=http://${BUCKET}.s3-website-us-east-1.amazonaws.com
EOF
		aws s3 cp /tmp/bedrock.repo s3://$BUCKET/ $PERMISSION

		cat <<EOF >/tmp/bedrock-startup.sh
#!/bin/bash

yum update -y
wget -q http://${BUCKET}.s3-website-us-east-1.amazonaws.com/bedrock.repo -O /etc/yum.repos.d/bedrock.repo
yum install -y bedrock-openbedrock
service httpd restart
chkconfig httpd on
EOF
		aws s3 cp /tmp/bedrock-startup.sh s3://$BUCKET/ $PERMISSION

                # cleanup local copy of repo
		test -n "$repo" && rm -rf $repo
	    fi
	fi
	;;

    *)
	exit 0;
	;;
esac
