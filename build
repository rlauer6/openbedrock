#!/bin/bash

# NOTES:
#
# To release the Bedrock RPMs perform all of these steps.  You need to
# bump, build AND deploy!  They are separate steps because you may not
# want to deploy until you are have tested and updated documentation.
#
# 'deploy' means create a repo and update the Bedrock repo site.
# 
# 1) build the RPMs
#     
#     ./build bump
#     ./build build
# 
# 2) build and deply a new repo
# 
#     ./build deploy
#
# 3) edit the wiki and declare a new version

#
# help()
#
# help!
#
help() {
    cat <<EOF
    $0 [options] [command]
    
Build the rpm files for the Bedock project.  Optionally deploy the
rpms to the Bedrock repo website.
    
      Options
      -------
        -h, --help                   - help
        -x, --no-sign                - do not sign the RPM
        -r, --rpm-mode               - do not compile Perl during build
        -b, --basedir                - base directory (default: \$HOME)
    
      Commands
      --------
        build                        - build and sign RPM (unless -x)
        bump                         - bump minor revision
        bump release                 - bump minor release
        createrepo                   - stage a repo to \$basdedir/yum-repo
        deploy                       - createrepo & deploy RPM
        unbump                       - restore last version number

Hints:

1) Use the --rpm-mode (-r) option when you want to build the project
   without checking the syntax of the Perl modules.  Without this
   option your environment will need to have dependent Perl modules
   installed.  -r is used primarily with an automated build process that
   builds the project in a "pristine" environment.

2) Use the --no-sign (-x) option if you're not interested in signing
   the rpms.  You may not have access to Bedrock's private key.

3) Use --basedir (-b) with the 'createrepo' or 'deploy' commands to
   stage a the yum repository website to a directory named 'yum-repo'
   below the directory specifed with this option.  The default is to
   create a directory named 'yum-repo' in your \$HOME directory.

4) To release a new version of Bedrock, bump the version, update the
   NEWS, commit changes and push to the master branch.

EOF

    return 0
}


# create the files that will define the http://repo.openbedrock.net
# website.  Files are staged to $1
#
# - index.html
# - bedrock-startup.sh
# - bedrock.repo

create_website_files() {
    if ! test -d "$1"; then
	return
    fi
    
    # export public key, relies on ~./gnupg configuration (s3://openbedrock/gnupg.tar.gz)
    gpg -a --export $PASSPHRASE > $1/RPM-GPG-KEY-openbedrock.org

    cp src/main/bedrock/img/bedrock.png $1/bedrock.png

    cat <<EOF >$1/index.html
<html>
<body>
<a href="http://twiki.openbedrock.net"><img src="bedrock.png"></a>
<h1>Bedrock yum Repository</h1>
  <ul>
   <li>The latest version of Bedrock is <i>$bedrock_version</i></li>
   <li><a href="http://twiki.openbedrock.net">See the Bedrock wiki for more information</a></li>
   <li><a href="https://github.com/rlauer6/openbedrock">GitHub source repository</li>
   <li><a href="http://repo.openbedrock.net/RPM-GPG-KEY-openbedrock.org">GPG key</li>
   <li><a href="http://repo.openbedrock.net/bedrock.repo">bedrock.repo</a></li>
  </ul>
<pre>
[bedrock]
name=bedrock
enabled=1
gpgcheck=1
gpgkey=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com/RPM-GPG-KEY-openbedrock.org
baseurl=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com
</pre>
</body>
</html>
EOF


    cat <<EOF  >$1/bedrock.repo
[bedrock]
name=bedrock
enabled=1
gpgcheck=1
gpgkey=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com/RPM-GPG-KEY-openbedrock.org
baseurl=http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com
EOF

    cat <<EOF >$1/bedrock-startup.sh
#!/bin/bash

yum update -y
wget -q http://${REPO_BUCKET}.s3-website-us-east-1.amazonaws.com/bedrock.repo -O /etc/yum.repos.d/bedrock.repo
yum install -y bedrock-openbedrock
service httpd restart
chkconfig httpd on
EOF

}


# +-------------------------+
# | MAIN SCRIPT STARTS HERE |
# +-------------------------+

REPO_BUCKET=repo.openbedrock.net

SIGN='--sign'

# -a => allow short optins (-), -o {options} -l {long options}
OPTS=$(getopt -a -o hb:xr -l help,no-sign,rpm-mode,basedir -- "$@")

if [[ $? -ne 0 ]]; then
    help;
    exit $?
fi

eval set -- "$OPTS"

while [ $# -gt 0 ]; do

    case "$1" in

	-h | --help)
	    shift;
	    help;
	    exit -1;
	    ;;
	
	-x | --no-sign)
	    shift;
	    SIGN=''
	    ;;

	-r | --rpm-mode)
	    RPM_MODE='--enable-rpm-build-mode'
	    shift;
	    ;;

	-b | --basedir)
	    shift;
	    basedir="$1"
	    shift;
	    ;;
 
	* )
	    shift;
	    break;
	    ;;
    esac
done

if test -z "$basedir"; then
    basedir="$HOME"
    if ! test -s "$HOME/.rpmmacros"; then
	echo "error: no .rpmmacros found!"
	exit -1;
    fi

    topdir=$(perl -n -e '/^%_topdir/ && print ((split / /)[1]);' $basedir/.rpmmacros)

    if test -z "$topdir"; then
	echo "no %_topdir in .rpmmacros defined!"
	exit -1;
    fi

    if ! test -d "$topdir"; then
	echo "%_topdir ($topdir) does not exist!"
	exit -1;
    fi
fi

case "$1" in 

    '?')
	help;
	exit 0;
	;;

    unbump)
	if test -e "bedrock-build~"; then
	    mv bedrock-build~ bedrock-build
	fi
	cat bedrock-build
	;;

    # bump release number (not version, just release)
    bump)
	shift;
	PROJECT_RELEASE=$(cat bedrock-build)
        if test -z "$1"; then
 	    PROJECT_RELEASE=$(printf %0.2f $(echo "$PROJECT_RELEASE 0.01+n" | dc -))
	else
	    if [ "$1" = "release" ]; then
 		PROJECT_RELEASE=$(echo "$PROJECT_RELEASE 1+n" | dc -)
	    else
		echo "huh?"
		exit;
	    fi
	fi
	mv bedrock-build bedrock-build~
	echo "$PROJECT_RELEASE" > bedrock-build
	echo "$PROJECT_RELEASE"
	;;

    # build from latest tag
    build)
	make maintainer-clean
	./bootstrap
	./configure --prefix=/usr $RPM_MODE
	make && make dist
	tarball=$(ls -1rt *.tar.gz | tail -1)
	[ -e "$tarball" ] && rpmbuild -tb $tarball $SIGN
	;;

    createrepo | deploy)
	repo=$(mktemp -d)
	mkdir ${repo}/noarch
	
	bedrock_rpm=$(ls -1rt ${topdir}/RPMS/noarch/bedrock-website-*.rpm | tail -1)
	if test -z "$bedrock_rpm"; then
	    echo "no rpms found!"
	    exit -1;
	fi

	bedrock_version=$(echo $bedrock_rpm | perl -np -e 's/.*?\-(\d+\..*)\.noarch.rpm/$1/;') 
	    
	for a in ${topdir}/RPMS/noarch/*$bedrock_version*rpm; do
	    ~/bin/rpm-sign OpenBedrock OpenBedrock $a
	    cp $a ${repo}/noarch
	done
	
	createrepo $repo
	
	create_website_files $repo

	test -d $basedir/yum-repo || mkdir $basedir/yum-repo

	cp -r $repo/* $basedir/yum-repo

	if [ "$1" = "createrepo" ]; then
	    exit 0;
	fi

	set -x
	
        # sync local repo with S3 bucket, make it PUBLIC
        PERMISSION="--grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers"
	aws s3 sync  --include="*" ${repo} s3://$REPO_BUCKET/ $PERMISSION

        # cleanup local copy of repo
	test -n "$repo" && rm -rf $repo
	;;

    *)
	help
	exit 0;
	;;
esac
