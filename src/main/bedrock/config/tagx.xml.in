<object >
  <!--
      
   Reference Implmentation of `tagx.xml'
   ------------------------------------

   This is an example of a Bedrock configuration file that might work
   for your site.  It has been autogenerated during the build process
   for you as a reference.

   Since we really don't know where your Apache site is located, you
   should probably substitute the path to your Apache host where you
   see '/var/www' in the XML tags below.

   You'll also want to use the reference Apache configuration file
   'bedrock.conf' found in this directory as well as a starting point
   for Bedrock enabling your Apache server or a specific virtual host.

   To do that, you should either:

     - copy the contents of the 'bedrock.conf' file to your Apache
       configuration file (apache2.conf or httpd.conf) or
  
     - copy the file to the Apache configuration directory and include
       the file using the Include directive as shown below.

       Include bedrock.conf

   A `startup.pl' can be found in @libdir@/bedrock/config that will be
   invoked by Apache if mod_perl is enabled.  This is the default
   mod_perl startup file for Bedrock. It's chief responsibility is to
   let perl know where to find Bedrock modules.  If you want Bedrock
   to find additional modules, you may need to modify this file.

   Once you've done all that, you'll want to restart your web server
   in the usual way:

   On Red Hat based systems:

      $ service httpd restart

   On Debian based systems:

      $ /etc/init.d/apache2 restart

  -->

  <!-- Log options -->
  <scalar name="LOG4PERL">@libdir@/bedrock/config/log4perl.conf</scalar>
    
  <!-- Directories -->
  <scalar name="PEBBLE_DIR">/var/www/pebbles</scalar>
  <scalar name="SESSION_DIR">/var/www/session</scalar>
  <scalar name="INCLUDE_DIR">/var/www/include</scalar>

  <!-- Configuration file path -->
  <scalar name="BEDROCK_CONFIG_PATH">@libdir@/bedrock/config</scalar>
  <scalar name="APP_CONFIG">tagx_apps.xml</scalar>

  <!-- Resources -->
  <scalar name="BEDROCK_INCLUDE_DIR">@datadir@/bedrock/include</scalar>
  <scalar name="BEDROCK_IMAGE_DIR">@datadir@/bedrock/img/</scalar>
  <scalar name="BEDROCK_PEBBLE_DIR">@datadir@/bedrock/pebbles</scalar>
  <scalar name="BEDROCK_ERROR_LOCATION">@datadir@/bedrock/htdocs/error.roc</scalar>
  <scalar name="BEDROCK_LOGO">bedrock.gif</scalar>
  <scalar name="BEDROCK_ERROR_LOGO">bedbug.jpg</scalar>

  <!-- URLS -->
  <scalar name="BEDROCK_POD_CSS_URL">/bedrock/css/pod.css</scalar>
  <scalar name="BEDROCK_SOURCE_CSS_URL">/bedrock/css/source.css</scalar>
  <scalar name="BEDROCK_IMAGE_URL">/bedrock/img</scalar>
  
  <object name="BEDROCK_DOCUMENTATION">
    <object name="MARKDOWN">
      <scalar name="enabled">yes</scalar>
      <scalar name="css">/bedrock/css/pod.css</scalar>
      <scalar name="engine">text_markdown</scalar>
      <array name="extension">
        <scalar>md</scalar>
        <scalar>md.in</scalar>
      </array>
      <array name="path">
        <scalar></scalar>
      </array>
    </object>
    
    <object name="POD">
      <scalar name="enabled">yes</scalar>
      <scalar name="css">/bedrock/css/pod.css</scalar>
      <array name="extension">
        <scalar>pm</scalar>
        <scalar>pl</scalar>
      </array>
      <scalar name="use_pod_path"></scalar>
      <array name="path">
        <scalar></scalar>
      </array>
    </object>
  </object>
  
  <!-- Options -->
  <scalar name="RELOAD">yes</scalar>
  <scalar name="ALLOW_BEDROCK_INFO">yes</scalar>
  <scalar name="ALLOW_BEDROCK_CONFIG_INFO">no</scalar>
  <scalar name="ALLOW_BEDROCK_ENV_INFO">no</scalar>
  <scalar name="ALLOW_SNIPPET_TAG">no</scalar>
  <scalar name="REPLACE_CONFIG">no</scalar>

  <!-- XML Options -->
  <object name="XML">
    <scalar name="handler">Bedrock::Serializer::XML</scalar>
    <object name="out">
      <scalar name="NoAttr">1</scalar>
      <scalar name="KeepRoot">0</scalar>
      <scalar name="RootName">response</scalar>
      <scalar name="NoSort">1</scalar>
      <array name="KeyAttr"></array>
      <scalar name="XMLDecl">1</scalar>
      <scalar name="NoEscape">1</scalar>
    </object>
    <object name="in">
      <scalar name="NoAttr">0</scalar>
      <scalar name="KeepRoot">1</scalar>
      <array name="KeyAttr"></array>
    </object>
  </object>

  <!-- Modules -->
  <!--
      Startup module details: This should have the following structure.
      The startup modules item `MODULES' should be an array with one item
      for each startup module. The item for each module should be an object
      with the following properties defined.

      1. `binding' [ required ]
      Name of the variable which is available to Bedrock pages.

      2. `module' [ required ]
      Perl module implementing the class

      3. `type' [ optional, defaults to `object', allowed types are
      `object', `array' and `handle' ]
      The type of the binding, determines what type of object is
      created. 

      4. `header' [ required to be defined in at least one module ]
      Indicate that the current module is a header module. One of the
      startup modules MUST have this defined.

      5. `config' [ required if the module requires it ]
      Object containing the configuration for this module. Passed to
      the class constructor if this is defined.
    -->

  <array name="MODULES">

    <!-- Expose configuration, both bedrock and application -->
    <object>
      <scalar name="binding">config</scalar>
      <scalar name="module">BLM::Startup::Config</scalar>
    </object>

    <!-- Cookies access -->
    <object>
      <scalar name="binding">cookie</scalar>
      <scalar name="module">BLM::Startup::Cookie</scalar>
    </object>

    <!-- Expose the application environment -->
    <object>
      <scalar name="binding">env</scalar>
      <scalar name="module">BLM::Startup::Env</scalar>
    </object>

    <!-- HTTP Header access and manipulation -->
    <object>
      <scalar name="binding">header</scalar>
      <scalar name="module">BLM::Startup::Header</scalar>
      <scalar name="header">yes</scalar>
    </object>

    <!-- Form input access -->
    <object>
      <scalar name="binding">input</scalar>
      <scalar name="module">BLM::Startup::Input</scalar>
    </object>
    
    <!-- Commonly used methods -->
    <object>
      <scalar name="binding">bedrock</scalar>
      <scalar name="module">BLM::Startup::Bedrock</scalar>
    </object>

    <!-- End of object MODULES -->
  </array>
</object>
