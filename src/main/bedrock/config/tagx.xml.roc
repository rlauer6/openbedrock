<sink><include --file=site-config --dir-prefix=($config.DIST_DIR + "/config")></sink>
<object>
  <!--
      
   Reference Implmentation of `tagx.xml'
   ------------------------------------

   This is an example of a Bedrock configuration file that might work
   for your site.  It has been autogenerated during the build process
   for you as a reference.

   Since we really don't know where your Apache site is located, you
   should edit your site's environment file reinstall the Bedrock
   website. See 'bedrock-site-install.pl --help' for more details on
   configuring your Bedrock site.

   If you generated your Bedrock site using the 'bedrock-site-install.pl'
   utility this file will reflect your selections.

   You'll also want to use the reference Apache configuration file
   'bedrock.conf' generated by the 'bedrock-site-install' utility as a
   starting point for Bedrock enabling your Apache server or a
   specific virtual host.

   To do that, you should copy the file to the Apache configuration
   directory.

   Debian:

     cp bedrock.conf /etc/apache2/sites-available
     a2ensite bedrock

   Redhat

      cp bedrock.conf /etc/httpd/conf.d

      ...and add this to httpd.conf

       Include bedrock.conf

   A 'startup.pl' script can be found in <var
   $config.BEDROCK_CONFIG_PATH> which will be invoked by Apache if
   mod_perl is enabled.  This is the default mod_perl startup file for
   Bedrock. It's chief responsibility is to let Perl know where to
   find Bedrock modules.  If you want Bedrock to find additional
   modules in non-standard locations, you may need to modify this
   file.

   Once you've done all that, you'll want to restart your web server
   in the usual way:

   On older Red Hat based systems:

      $ service httpd restart

   On newer Red Hat and Debian based systems:

      $ systemctl start httpd

   On Debian based systems:

      $ apachectl start

  -->

  <!-- Log options -->
  <scalar name="LOG4PERL"><var $config.BEDROCK_CONFIG_PATH>/log4perl.conf</scalar>
    
  <!-- Directories -->
  <scalar name="PEBBLE_DIR"><var $site_root>/pebbles</scalar>
  <scalar name="SESSION_DIR"><var $site_root>/session</scalar>
  <scalar name="INCLUDE_DIR"><var $site_root>/include</scalar>

  <!-- Configuration file path -->
  <scalar name="BEDROCK_CONFIG_PATH"><var $config.BEDROCK_CONFIG_PATH></scalar>
  <scalar name="APP_CONFIG">tagx_apps.xml</scalar>

  <!-- Resources -->
  <scalar name="BEDROCK_INCLUDE_DIR"><var $config.DIST_DIR>/include</scalar>
  <scalar name="BEDROCK_IMAGE_DIR"><var $config.DIST_DIR>/img/</scalar>
  <scalar name="BEDROCK_PEBBLE_DIR"><var $config.DIST_DIR>/pebbles</scalar>
  <scalar name="BEDROCK_ERROR_LOCATION"><var $config.DIST_DIR>/htdocs/error.roc</scalar>
  <scalar name="BEDROCK_LOGO">bedrock.gif</scalar>
  <scalar name="BEDROCK_ERROR_LOGO">bedbug.jpg</scalar>

  <!-- URLS -->
  <scalar name="BEDROCK_POD_CSS_URL">/bedrock/css/pod.css</scalar>
  <scalar name="BEDROCK_SOURCE_CSS_URL">/bedrock/css/source.css</scalar>
  <scalar name="BEDROCK_IMAGE_URL">/bedrock/img</scalar>
  
  <object name="BEDROCK_DOCUMENTATION">
    <object name="file_list">
      <object name="bedrock-shell">
        <scalar name="path"><var $site.bedrock_shell></scalar>
      </object>
      <object name="welcome">
        <scalar name="path"><var ($config.DIST_DIR + '/include/welcome.md')></scalar>
      </object>
      <object name="examples">
        <scalar name="path"><var ($config.DIST_DIR + '/include/examples.md')></scalar>
      </object>
      <object name="tutorials">
        <scalar name="path"><var ($config.DIST_DIR + '/include/tutorials.md')></scalar>
      </object>
      <object name="contributing">
        <scalar name="path"><var ($config.DIST_DIR + '/include/contributing.md')></scalar>
      </object>
      <object name="bugs">
        <scalar name="path"><var ($config.DIST_DIR + '/include/bugs.md')></scalar>
      </object>
    </object>
  </object>
  
  <!-- Options -->
  <scalar name="RELOAD">yes</scalar>
  <scalar name="ALLOW_BEDROCK_INFO">yes</scalar>
  <scalar name="ALLOW_BEDROCK_CONFIG_INFO">yes</scalar>
  <scalar name="ALLOW_BEDROCK_ENV_INFO">yes</scalar>
  <scalar name="ALLOW_SNIPPET_TAG">no</scalar>
  <scalar name="REPLACE_CONFIG">no</scalar>

  <!-- XML Options -->
  <object name="XML">
    <scalar name="handler">Bedrock::Serializer::XML</scalar>
    <object name="out">
      <scalar name="NoAttr">1</scalar>
      <scalar name="KeepRoot">0</scalar>
      <scalar name="RootName">response</scalar>
      <scalar name="NoSort">1</scalar>
      <array name="KeyAttr"></array>
      <scalar name="XMLDecl">1</scalar>
      <scalar name="NoEscape">1</scalar>
    </object>
    <object name="in">
      <scalar name="NoAttr">0</scalar>
      <scalar name="KeepRoot">1</scalar>
      <array name="KeyAttr"></array>
    </object>
  </object>
  
  <!-- Modules -->
  <!--
      Startup module details: This should have the following structure.
      The startup modules item `MODULES' should be an array with one item
      for each startup module. The item for each module should be an object
      with the following properties defined.

      1. `binding' [ required ]
      Name of the variable which is available to Bedrock pages.

      2. `module' [ required ]
      Perl module implementing the class

      3. `type' [ optional, defaults to `object', allowed types are
      `object', `array' and `handle' ]
      The type of the binding, determines what type of object is
      created. 

      4. `header' [ required to be defined in at least one module ]
      Indicate that the current module is a header module. One of the
      startup modules MUST have this defined.

      5. `config' [ required if the module requires it ]
      Object containing the configuration for this module. Passed to
      the class constructor if this is defined.
    -->

  <array name="MODULES">

    <!-- Expose configuration, both bedrock and application -->
    <object>
      <scalar name="binding">config</scalar>
      <scalar name="module">BLM::Startup::Config</scalar>
    </object>

    <!-- Cookies access -->
    <object>
      <scalar name="binding">cookie</scalar>
      <scalar name="module">BLM::Startup::Cookie</scalar>
    </object>

    <!-- Expose the application environment -->
    <object>
      <scalar name="binding">env</scalar>
      <scalar name="module">BLM::Startup::Env</scalar>
    </object>

    <!-- HTTP Header access and manipulation -->
    <object>
      <scalar name="binding">header</scalar>
      <scalar name="module">BLM::Startup::Header</scalar>
      <scalar name="header">yes</scalar>
    </object>

    <!-- Form input access -->
    <object>
      <scalar name="binding">input</scalar>
      <scalar name="module">BLM::Startup::Input</scalar>
      <object name="config">
        <object name="scrubber">
          <scalar name="deny">link a img script style</scalar>
        </object>
      </object>
    </object>
    
    <!-- Commonly used methods -->
    <object>
      <scalar name="binding">bedrock</scalar>
      <scalar name="module">BLM::Startup::Bedrock</scalar>
    </object>

    <!-- End of object MODULES -->
  </array>
</object>
