#
# ---------------------------------------------------------------------------
# To create a new RESTful API follow these steps:
# ---------------------------------------------------------------------------
#
# 1. Add a RewriteRule in your document root directory for the API you
#    are defining, e.g. the 'foo' API...
#
#      <Directory /var/www/vhosts/mysite/htdocs/>
#        RewriteEngine On
#        RewriteRule  ^foo(/.*)?$ api/bedrock-rest-framework.jroc/$1
#      </Directory>
#
# 2. Add the Apache configuration snippet down below to the same Apache
#    config file you altered above (or include this file)
#
#      Include /usr/lib/bedrock/config/bedrock-rest-framework.conf
#
# 3. Restart the webserver
#
#      $ sudo /sbin/service httpd graceful
#
# 4. Add implementation files to your REST directory under Bedrock's
#    include directory.  These are optional, but you should probably
#    have at least 1 method file defined.
#
#      GET.inc      => GET method API for /foo
#      PUT.inc      => PUT method API for /foo
#      POST.inc     => POST method API for /foo
#      PATCH.inc    => PATCH method API for /foo
#      DELETE.inc   => DELETE.inc method API for /foo
#
#      init.inc     => included prior to any other processing
#      finalize.inc => included prior to output of the result
#      pod.inc      => perl style pod
#
#      $data        => POST/PUT/PATCH request body
#      $path_info   => extra path info
#      $result      => hash containing response body
#      $api_name    => name of the API
#
# 5. Implementation files should set "status" and "result" members of
#    the $rest object to communicate application status and a result.
#    "status" is defaulted "ok".  Send a message in the "msg" member.
#
#      <null $result.set('status', 'ok', 'result', $customers, 'msg', $customers.length())>
#
# 6. Implement application errors using HTTP status and an error message
#
#      <raise "400|no id">
#
# 7. Use regexps to parse $path_info
#
#      /foo/123   => <if $path_info --re '^/(?<id\>\\d+)$' > 
#      /foo/bar   => <if $path_info --re '^/bar/?$'>
#
# ---------------------------------------------------------------------------
#           FOR MORE INFORMATION - twiki.openbedrock.net
# ---------------------------------------------------------------------------

# you may already have these defined in your Apache configuration file
# to enable Bedrock parsing

AddType text/html        .roc
AddType application/json .jroc
Action  bedrock-cgi      /cgi-bin/bedrock.cgi virtual

# alias the installed Bedrock htdocs directory simply to get
# bedrock-rest-framework.jroc - TIMTOWTDI

Alias /api /usr/share/bedrock/htdocs

<Directory /usr/share/bedrock/htdocs/>

  <IfModule mod_perl.c>
    AddHandler    perl-script .roc .jroc
    PerlHandler   Apache::Bedrock
  </IfModule>

  <IfModule !mod_perl.c>
    AddHandler  bedrock-cgi .roc .jroc
  </IfModule>

  Options -Indexes FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all
  Satisfy any

</Directory>
