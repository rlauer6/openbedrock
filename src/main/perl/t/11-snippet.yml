--- 
name: <snippet>
test: |
  <snippet --verbose --verbose "this is a test">
  use Digest::MD5 qw/md5/;
  use MIME::Base64;
  
  return encode_base64(md5(shift));
  </snippet>
  <var $_>
result: /^\s*VLDF/
op: like
--- 
name: <snippet --define-snippet="foo">
test: |
  <snippet --define-snippet="foo">
  use Digest::MD5 qw(md5);
  use MIME::Base64;

  sub encode_md5 {
    my ($self, $text) = @_;
    return encode_base64(md5($text));
  }
  </snippet>
  
  <var $foo.encode_md5("this is a test")_>
result: /^\s*VLDF/
op: like
--- 
name: <snippet:foo >
test: |
  <snippet:foo>
  use Digest::MD5 qw(md5);
  use MIME::Base64;

  sub encode_md5 {
    my ($self, $text) = @_;
    return encode_base64(md5($text));
  }
  </snippet>
  
  <var $foo.encode_md5("this is a test")_>
result: /^\s*VLDF/
op: like
--- 
name: <snippet:foo:bar >
test: |
  <snippet:foo:bar "this is a test">
  use Digest::MD5 qw(md5);
  use MIME::Base64;

  sub encode_md5 {
    my ($self, $text) = @_;
    return encode_base64(md5($text));
  }

  return $self->encode_md5(@_);
  </snippet>
  
  <var $bar>
result: /^\s*VLDF/
op: like
--- 
name: <snippet --export=baz --export=buz >
test: |
  <sink><snippet --export=baz --export=buz>
  our $buz = "buz";
  our $baz = "baz";
  </snippet></sink><var $baz><var $buz>
result: "bazbuz\n"
