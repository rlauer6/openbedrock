---
name: open
comment: create a file, write contents, close file, read contents
test: |-
  <open:fd --mode="w" "foo.txt">
  <sink $fd>Hello World!</sink>
  <null $fd.close()>
  <open:fd --mode="r" "foo.txt">
  <null:foo $fd.getline()><flush><var $foo>
result: "Hello World!"
---
name: open w/filter
comment: create a file, write contents, close file, read contents
test: |-
  <open:fd --filter=crypt --mode="w" "foo.txt" "passkey">
  <sink $fd>Hello World!</sink>
  <null $fd.close()>
  
  <open:fd --filter=crypt --mode="r" "foo.txt" "passkey">
  <null:foo $fd.getline()><flush><var $foo>
result: "Hello World!"
---
name: open w/csv filter
comment: create a file, write contents, close file, read contents
test: |-
  <sink>
    # open foo.csv and write 1 CSV record
    <array:foo a b c >
    <open:fd --filter=csv --mode="w" "foo.csv">
    <null $fd.print($foo)>
    <null $fd.close()>

    # open foo.csv and read each record into an array
    <array:boo>
    <open:fd --filter=csv --mode="r" "foo.csv">
    <while $fd><null $boo.push($_)></while>
  </sink>

  <if $boo.length() --eq 1>ok<else>length of array not 1</if><null:boo $boo.pop()>
  <if $boo.[0] --eq 'a'>ok<else>not an "a"</if>
  <if $boo.[1] --eq 'b'>ok<else>not a "b"</if>
  <if $boo.[2] --eq 'c'>ok<else>not a "c"</if>
result: /ok\nok\nok\nok/
op: like
