---
name: <sql>
test: |
  <try>
    <null:dsn dbi:mysql:bedrock:%s>

    <null:host --default=localhost $env.DBI_HOST>

    <array:args $dsn.sprintf($host)>
    
    <if $env.DBI_SOCKET>
       <null $args.push('mysql_socket', $env.DBI_SOCKET)>
    </if>
    
    <sqlconnect:dbi --username=fred --password=flintstone $args>

    <sink:drop_table>
    drop table if exists foo
    </sink>
    
    <sql --verbose --verbose --db="dbi" $drop_table>

    <sink:create_table>
    create table foo (
      id int auto_increment primary key,
      name varchar(32)
    )
    </sink> 

    <sql --verbose --verbose --db="dbi" $create_table>

    <sql --verbose --verbose --db="dbi" --bind="test" 
    "insert into foo (id,name) values ( 0, ?)">

    <iif $dbi success 'no dbi'>
  <catch>
    <var $@>
  </try>
result: /success/s
op: like
---
name: <sqlselect>
test: |
  <try>
    <null:dsn dbi:mysql:bedrock:%s>

    <null:host --default=localhost $env.DBI_HOST>

    <array:args $dsn.sprintf($host)>
    
    <if $env.DBI_SOCKET>
       <null $args.push('mysql_socket', $env.DBI_SOCKET)>
    </if>
    
    <sqlconnect:dbi --username=fred --password=flintstone $args>

    <sqlselect --db="dbi" "describe foo">
    <var $Field>,<var $Type>,<var $Null>,<var $Key>,<var $Extra></sqlselect>
  <catch>
    <var $@>
  </try>
result: /id,int/s
op: like
