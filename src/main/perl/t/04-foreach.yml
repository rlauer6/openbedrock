--- 
name: <foreach>
result: /123/
op: like
test: |
  <foreach 1 2 3><var $_></foreach>
---
name: <foreach --define-var>
test: |
  <foreach --define-var="foo" a b c><var $foo></foreach>
result: /abc/
op: like
---
name: <foreach> using <var $_>
test: |
  <foreach  a b c><var $_></foreach>
result: /abc/
op: like
---
name: <foreach> iterate over hash
test: |
  <hash:foo foo 1 bar 2 biz 3>
  <foreach  $foo><var $_.key>=<var $_.value>,<var $_.index>,</foreach>
result: /foo=1,0,bar=2,1,biz=3,2/
op: like
---
name: <foreach> --max-items
test: |
  <hash:foo foo 1 bar 2 biz 3>
  <foreach --max-items=2  $foo><var $_.key>=<var $_.value>,</foreach>
result: /foo=1,bar=2/
op: like
---
name: <foreach> --start-index --end-index
test: |
  <foreach --start-index=7 --end-index=9 1 2 3 4 5 6 7 8 9 10><var $_></foreach>
result: /8910/
op: like
---
name: <foreach> --start-index --end-index (expression, 1 + 1)
test: |
  <foreach --start-index=(1 + 1) --end-index=3 1 2 3 4 5 6 7 8 9 10><var $_></foreach>
result: /34/
op: like
---
name: <foreach> --start-index --end-index (expression, vars)
test: |
  <null:start 2>
  <null:end 9>
  <foreach --start-index=$start --end-index=$end 1 2 3 4 5 6 7 8 9 10><var $_></foreach>
result: /345678910/
op: like
---
name: <foreach> --define-counter
test: |
  <null:start 2>
  <null:end 9>
  <foreach --define-counter="i" --start-index=$start --end-index=$end 1 2 3 4 5 6 7 8 9 10><var $i></foreach>
result: /01234567/
op: like
---
name: <foreach> --counter-increment 
test: |
  <null:start 2>
  <null:end 9>
  <foreach --define-counter="i" --counter-increment=2 1 2 3 4 5 6 7 8 9 10><var $i></foreach>
result: /024681012141618/
op: like
---
name: <foreach> recordset
test: |
  <sink:foo --json>
  [
   {
    "id" : 1,
    "name" : "Larry"
   },
   {
    "id" : 2,
    "name" : "Moe"
   }
  ]
  </sink>
  <recordset:rs $foo>
  <foreach $rs><var $id>:<var $name>
  </foreach>
result: /1:Larry\n2:Moe/
op: like
---
name: <foreach --range=>
test: |-
  <foreach --range="1,9"><var $_></foreach>
result: 123456789
---
name: <foreach --range=> (invalid range)
test: |-
  <null:foo 0 1 2 3 4 5 6 7 8 9 ><foreach --range="1,10" $foo><var $_></foreach>
error: '/invalid range/'
