#! @PERL@
# -*- perl -*-
# @configure_input@

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

use strict;
use warnings;

# Fixup @INC so that all Perl mods needed by the prog can be found
# ___REPLACE_ME__BEGIN_BLOCK__CONFIGURED_PERL_INC___

BEGIN
{
  if ( open( FILE, 'perl.INC' ) ) {
    unshift @INC, <FILE>;
    close FILE;
    chomp @INC;
  }
}

use Carp;

use Bedrock;
use Bedrock::XML;
use Bedrock::Log qw/MSG_ABORT MSG_DEBUG MSG_INFO 
		    MSG_STATUS MSG_WARNING 
		    MSG_ERROR MSG_SYSERROR MSG_FATAL/;

use Apache::Bedrock;
use Apache::Request_cgi;

sub error {
  my $status = shift;
  my $status_name = shift;
  my $message = shift;

  print <<end_of_html;
Content-type: text/html
Status: $status

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>$status $status_name</title>
</head>
<body>
<h1>$status_name</h1>
<p>$message</p>
<hr>
<address>$ENV{SERVER_SIGNATURE}</address>
</body>
</html>
end_of_html
  exit -1;
}


$SIG{TERM} = \&confess;

# read configuration file, get LOGLEVEL
eval {
  my $tagx_xml = $ENV{CONFIG_PATH} . '/tagx.xml';

  unless ( -s $tagx_xml ) {
    $tagx_xml = $ENV{BEDROCK_CONFIG_PATH} . '/tagx.xml';
  }

  my $config = new Bedrock::XML( $tagx_xml );

  for ( $config->{LOGLEVEL} ) { 
    /MSG_ABORT/ && do {
      $Bedrock::Log::CutoffLevel = MSG_ABORT;
      $SIG{__WARN__} = \&Carp::cluck;
      last;
    };
    /MSG_DEBUG/ && do {
      $Bedrock::Log::CutoffLevel = MSG_DEBUG;
      $SIG{__WARN__} = \&Carp::cluck;
      last;
    };
    /MSG_INFO/ && do {
      $Bedrock::Log::CutoffLevel = MSG_INFO;
      last;
    };
    /MSG_STATUS/ && do {
      $Bedrock::Log::CutoffLevel = MSG_STATUS;
      last;
    };
    /MSG_WARNING/ && do {
      $Bedrock::Log::CutoffLevel = MSG_WARNING;
      last;
    };
    /MSG_ERROR/ && do {
      $Bedrock::Log::CutoffLevel = MSG_ERROR;
      last;
    };
    /MSG_SYSERROR/ && do {
      $Bedrock::Log::CutoffLevel = MSG_SYSERROR;
      last;
    };
    /MSG_FATAL/ && do {
      $Bedrock::Log::CutoffLevel = MSG_FATAL;
      last;
    };
    $Bedrock::Log::CutoffLevel = MSG_DEBUG;
  }
};


if ( $@ ) {
  my $message =<<end_of_html;

Possibly misconfigured Bedrock site:

<pre>$@</pre>
<pre>
CONFIG_PATH = $ENV{CONFIG_PATH}
BEDROCK_CONFIG_PATH = $ENV{BEDROCK_CONFIG_PATH}
</pre>
end_of_html
  
  error( 500, "Internal Server Error", $message);
}

my $code = &Apache::Bedrock::handler( Apache::Request_cgi->new );

if ($code == 404) {
  error( 404, 
	 "Not Found", 
	 "The requested URL $ENV{PATH_INFO} was not found on this <b>Bedrock Enabled</b> server."
       );
}
elsif ($code == 403) {
  error( 403,
	 "Forbidden",
	 "You don\'t have permission to access the requested object. It is either read-protected or not readable by the server."
       );
}
else {
 error( 500, "Internal Server Error", "Unknown Bedrock error: $code")
   if $code;
}

exit 0;

__END__


#
# ----------------------------------------------------------------------------
# Documentation
#
# The docs are in Perl's POD format, so you can run either the 'perldoc' or
# 'pod2man' programs on this file to produce a man page.
#
# To generate a man page for distribution (in a tarball, DEB, or RPM, for
# instance), you'll probably want to run pod2man something like this:
#
#     $ pod2man /path/to/this/file \
#               --center='Bedrock' \
#               --release='bedrock.cgi-1.6.6' \
#               --section='1' \
#               > /outputdir/bedrock.cgi.1
#
# To inspect the page formatting, etc., you can pipe the above 'pod2man'
# command to:
#     'man -l -'
# instead of redirecting the output to a file.
#
# ----------------------------------------------------------------------------

=pod

=head1 NAME

  bedrock.cgi - Apache Bedrock CGI handler


=head1 SYNOPSIS

  FIXME: finish documenting bedrock.cgi program

=head1 DESCRIPTION

C<bedrock.cgi> is part of the Bedrock project.

=head1 DIAGNOSTICS

Exits with zero on success, non-zero on error.


=head1 BUGS

None known. If you find any, please report them to the Signature
Inforamation Solutions, LLC Developers' mailing list:

  cjldev@signatureinfo.com

=head1 AUTHORS

Written by Jay Sridhar.

Contributions from:

=over 4

=item Rob Lauer <RLauer@signatureinfo.com>

=item Alan D. Salewski <ASalewski@signatureinfo.com>

=back


=head1 COPYRIGHT

Copyright 1999, 2000, 2001 Charles Jones, LLC
Copyright 2008 Signature Information Solutions, LLC

This is free software. You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

=cut

