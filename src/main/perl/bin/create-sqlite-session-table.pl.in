#!/usr/bin/env perl
# script to create a SQLite session table for Bedrock

use strict;
use warnings;

use Carp;
use Data::Dumper;
use DBI;
use English qw(-no_match_vars);
use File::ShareDir qw(dist_dir);
use Readonly;
use File::Path qw(make_path);

Readonly::Scalar our $EMPTY      => q{};
Readonly::Scalar our $TRUE       => 1;
Readonly::Scalar our $FALSE      => 0;
Readonly::Scalar our $SUCCESS    => 0;

Readonly::Scalar our $SQLITE_DSN => q{dbi:SQLite:dbname=%s};
Readonly::Scalar our $DEFAULT_DB_PATH => q{/var/lib/bedrock};
Readonly::Scalar our $DEFAULT_DB_NAME => q{bedrock};

########################################################################
sub open_db {
########################################################################
  my ($dbname) = @_;

  my $dsn = sprintf $SQLITE_DSN, $dbname;

  return DBI->connect( $dsn, $EMPTY, $EMPTY );
}

########################################################################
sub create_session_table {
########################################################################
  my ($dbname) = @_;

  my $sql_file = sprintf '%s/create-session-table.sql', dist_dir('BLM-Startup-SQLiteSession');

  local $RS = undef;

  open my $fh, '<', $sql_file
    or croak "ERROR: cannot open $sql_file for reading\n$OS_ERROR";

  my $sql = <$fh>;

  close $fh;

  my $dbh = open_db($dbname);

  my $retcode = $dbh->do($sql);

  return $SUCCESS;
}

########################################################################
sub main {
########################################################################
  my ($db_name, $db_path) = @ARGV;

  $db_name //= $DEFAULT_DB_NAME;
  $db_path //= $DEFAULT_DB_PATH;
  
  make_path $db_path;

  my $db = sprintf '%s/%s.db', $db_path, $db_name;

  return create_session_table($db);
}

exit main();

1;
