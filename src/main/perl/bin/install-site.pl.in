#!/usr/bin/env perl
# configure and install httpd-bedrock.conf file

package Bedrock::SiteInstall;

use strict;
use warnings;

BEGIN {
  use File::ShareDir qw(dist_dir);
  use English qw(-no_match_vars);

  if ( !$COMPILING ) {
    $ENV{BEDROCK_CONFIG_PATH} //= sprintf '%s/config', dist_dir('Bedrock');
  }
}

use Bedrock qw(slurp_file);
use HTML::Entities;
use Bedrock::BedrockConfig;
use Bedrock::Constants qw(:booleans :log_levels);
use Bedrock::Install;
use Bedrock::Template;
use Cwd;
use Data::Dumper;
use File::Basename qw(fileparse);
use File::Copy qw(cp);
use File::Temp qw(tempfile);
use Getopt::Long;
use List::Util qw(none);
use Readonly;

use Role::Tiny::With;
with 'Bedrock::Logger';

Readonly::Scalar our $HTTPD_CONF => 'bedrock.conf';

use parent qw(Bedrock::Application);

# File Description
# -----------------
#   bedrock-manifest.roc => Manifest of files to install (templated)
#   apache2x-env-debian  => Debian layout for Apache 2.2/2.4
#   apache2x-env-redhat  => RedHat layout for Apache 2.2/2.4
#   site-config.inc      => configuration assigned from environment files above

__PACKAGE__->main();

########################################################################
sub install_web_site {
########################################################################
  my ( $self, $manifest ) = @_;

  my $install = Bedrock::Install->new( %{ $self->get_options }, manifest => \$manifest, );

  $install->install();

  return;
}

########################################################################
sub add_env_vars {
########################################################################
  my ($self) = @_;

  my $file = $self->get_env;

  die "env file $file not found"
    if !-f $file;

  my @env = slurp_file $file;

  foreach (@env) {
    next if /^[#]/xsm;

    my ( $k, $v ) = split /\s*=\s*/xms;
    $ENV{$k} = $v;
  }

  return;
}

########################################################################
sub create_httpd_bedrock_conf {
########################################################################
  my ( $self, $conf ) = @_;

  my ( $fh, $filename ) = tempfile(
    UNLINK   => $TRUE,
    TEMPLATE => 'XXXXXX',
    SUFFIX   => '.roc',
    TMPDIR   => $TRUE,
  );

  die "could not open tempfile\n"
    if !$fh;

  print {$fh} $conf;

  close $fh;

  my ( $name, $path, $ext ) = fileparse( $filename, qr/[.][^.]+$/xsm );
  $path ||= cwd;

  return "$path$name$ext";
}

########################################################################
sub set_defaults {
########################################################################
  my ($self) = @_;

  my %options = (
    loglevel         => 'info',
    distdir          => dist_dir('Bedrock'),
    'apache-version' => '2.4',
    distro           => 'redhat',
  );

  $self->set_options( \%options );

  return $self;
}

########################################################################
sub help {
########################################################################
  print {*STDOUT} <<'END_OF_HELP';
install-site.pl options

Create a Bedrock enabled Apache web site.  Assumes you have already installed Apache.

See perldoc install-site.pl for more details.

Options
-------
--distro, -D          distribution (Redhat, Debian), default: Redhat
--env, -e             environment file if not using the distro files
--distdir, -d         location where Bedrock assets are installed
--apache-version, -v  Apache version (2.2, 2.4), default: 2.4
--loglevel, -l        Log:Log4perl log level (error, warn, info, debug, trac), default: info
--destdir             prefix for installation (used for testing installation)
--dryrun              dryrun mode
--help, -h            this
END_OF_HELP

  return;
}

########################################################################
sub main {
########################################################################
  my $app = Bedrock::SiteInstall->new(
    option_specs => [
      qw(
        distro|D=s
        env|e=s
        distdir|d=s
        apache-version|v=s
        loglevel=s
        destdir=s
        dryrun
        help|h
      )
    ]
  );

  if ( $app->get_help ) {
    $app->help();
    exit 0;
  }

  my $dist_dir = $app->get_distdir;

  my $config_dir = sprintf '%s/config', $dist_dir;

  my $config = eval { return Bedrock::Config->new( sprintf '%s/tagx.xml', $config_dir ); };

  if ( !$config || $EVAL_ERROR ) {
    print {*STDERR} sprintf "unable to read tagx.xml. Are your sure Bedrock is installed here: [%s]\n",
      $config_dir;
    exit 1;
  }

  if ( !$app->get_env ) {
    my $apache_version = $app->get_apache_version;

    $apache_version =~ s/\D//xsmg;

    die "Apache version ($apache_version) must be 2.2 or 2.4\n"
      if none { $apache_version eq $_ } qw(22 24);

    die "distro must be one of 'redhat' or 'debian'\n"
      if none { lc $app->get_distro eq $_ } qw(redhat debian);

    $app->set_env( sprintf '%s/apache%s-env-%s', $config_dir, $apache_version, lc $app->get_distro );
  }

  $app->add_env_vars();

  $config->{BEDROCK_INCLUDE_DIR} = $config_dir;
  $config->{BEDROCK_CONFIG_PATH} = $config_dir;
  $config->{DIST_DIR}            = $dist_dir;

  my $template = Bedrock::Template->new(
    { file  => ( sprintf '%s/%s.roc', $config_dir, $HTTPD_CONF ),
      param => {
        config => $config,
        env    => \%ENV,
      },
      INCLUDE_PATH => $config_dir,
    }
  );

  my $tmpfile = $app->create_httpd_bedrock_conf( $template->parse() );

  $config->{bedrock_conf} = sprintf '%s/%s', $config_dir, $HTTPD_CONF;
  cp $tmpfile, $config->{bedrock_conf};

  # create a site specific tagx.xml file
  $template->file('tagx.xml.roc');

  open my $fh, '>', sprintf '%s/tagx.xml', $config_dir
    or die 'could not open tagx.xml for writing';

  print {$fh} decode_entities( $template->parse() );

  close $fh;

  $template->file('bedrock-manifest');

  $app->install_web_site( $template->parse() );

  return 0;
}

1;

__END__

=pod

=head1 NAME

=head1 SYNOPSIS

=head1 DESCRIPTION

=head1 USAGE

=head1 AUTHOR

=head1 SEE ALSO

=cut
