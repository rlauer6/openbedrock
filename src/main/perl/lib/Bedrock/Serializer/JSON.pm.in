package Bedrock::Serializer::JSON;

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Copyright (C) 2001, Charles Jones, LLC.
#    Copyright (C) 2023, TBC Development Group, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

use Data::Dumper;

use Bedrock::BedrockJSON;

use parent qw(Bedrock::Serializer);

use Role::Tiny::With;
with 'Bedrock::Serializer';

########################################################################
sub deserialize {
########################################################################
  my ( $self, $data ) = @_;

  die qq{Can't use --json on an object.\n}
    if ref $data;

  return Bedrock::JSON::decode($data);
}

########################################################################
sub serialize {
########################################################################
  my ( $self, $data ) = @_;

  die qq{Can't use --json on a scalar object.\n}
    if !ref $data;

  return Bedrock::JSON::encode( $data, $self->options->{pretty} || 0 );
}

1;

__END__

## no critic (RequirePodSections)

=pod

=head1 NAME

Bedrock::Serializer::JSON

=head1 SYNOPSIS

 <var --json $foo>

=head1 DESCRIPTION

Serializer used internally by Bedrock to serialize/deserialize JSON
objects. Can also be used in Perl script or BLMs that need to
serialize Bedrock objects. This serializer will convert blessed
objects to Perl objects.

=head1 METHODS AND SUBROUTINES

=head2 serialize

  my $serializer = Bedrock::Searializer::JSON->new

  $serializer->serialize($obj);

=head2 deserialize

  my $serializer = Bedrock::Searializer::JSON->new

  $serializer->deserialize($obj);

=head1 AUTHOR

Rob Lauer - rlauer6@comcast.net

=head1 SEE ALSO

L<Bedrock::Serializer>

=cut
