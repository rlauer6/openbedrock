#!@PERL@ -w

package Bedrock::VERSION;


#
# Version number is composed as follows:
#    x.y.z
# where
#    x => Version identifier changes if major changes in TagX, like
#         design changes, changing how the parser works, etc.
#    y => Identifier changes if semi-major changes in TagX, like
#         addition of new tags, removal of existing tags, major
#         changes in options to tags, etc. Change in this number
#         may indicate that older scripts will break or may cause
#         inconsistent behavior.
#    z => This changes with each bug fix, small updates or enhancements,
#         changes which may not break existing scripts (though
#         nothing is guaranteed), etc.
#

$Bedrock::VERSION::ID         = '@VERSION@';
$Bedrock::VERSION::BUILD_DATE = '@BUILD_DATE@';

1;

#
# Revision 1.6  2011/09/15 16:05:32  eutl420
# - perl tidy
#
# Revision 1.5  2011/07/17 18:43:24  eutl420
# - somehow lost the automake variables @VERSION, @BUILD_DATE
#
# Revision 1.4  2011/07/17 16:56:08  eutl420
# - build .pm from .pm.in, added @PERL@
#
# Revision 1.3  2010/11/16 00:19:36  rlauer
# - added BUILD_DATE
#
# Revision 1.2  2009/12/26 15:38:39  rlauer
# remove BLM::OrderedObject, all objects now ordered
#
# Revision 1.1  2009/04/07 19:24:36  rlauer
# - add the 2.1.3-snapshot automake replacement token for generating the Bedrock version number
#
# Revision 1.10  2008/11/25 19:04:13  rlauer
# changes based on Bedrock 2.0 migration plan
#
# Revision 1.9  2001/02/15 14:19:20  sridhar
# Update to version 1.6.4: Had to rename the module in
# BLM::OrderedObject.
#
# Revision 1.8  2001/02/15 13:46:55  sridhar
# Updated version 1.6.4:
# 1. BLM::List moved to BLM::OrderedObject
# 2. Updated BLM::Startup::Forum
#
# Revision 1.7  2001/02/14 15:38:11  sridhar
# Added copyright notice and GPL licensing notice.
#
# Revision 1.6  2001/02/14 14:29:42  sridhar
# Version 1.6.3:
#
# General:
# 1. Bug fix in method invocation: invoking a method on an unblessed ARRAY
#    or HASH was returning a junk value due to falling off the end of the
#    function.
#
# Arrays:
# 1. Methods pop() and shift() take an optional argument which is the number of items
# to pop/shift from array. The elements removed are returned as an Array
# 2. Method splice() returns an array of elements removed.
#
# <exec>:
# No argument required for --expand-args. It is a flag which is turned on
# if present.
#
# BLM::Mail
# 1. added pod documentation
# 2. created methods for setting the mail properties
# 3. optional argument of 'message' to sendmail()
# 4. option setting of timeout in constructor
#
# BLM::Number
# - example had Bedrock.number instead of Bedrock.new
#
# BLM::Startup::Forum
# Massive restructuring -- Added moderation.
#
# Revision 1.5  2001/01/22 18:48:21  sridhar
# Version 1.6.2:
# General:
# 1. Logging response headers if level is MSG_DEBUG.
# 2. Maiden appearance of Bedrock shell.
#
# Objects:
# 1. Method `get()' can be invoked with multiple params -- caller gets an
#    array of corresponding values
#
# Arrays:
# 1. Array has an `iterator()' method which returns an iterator which
#    can be used for stepping forward and back in the array.
# 2. Fixed method `splice()' -- perl's splice function requires offset
#    and length to be passed explicitly and not as an array.
#
# <sqlselect>
# 1. An array can be specified with --bind. This array will be used to
#    fill up whatever bind variables are needed. The array can be empty
#    too if no bind variables are needed.
#
# BLM::Number
# 1. Added max(), min(), more documentation (rlauer)
#
# BLM::SIMPLEFTP
# 1. Documentation cleanup (rlauer)
#
# Startup::UserSession
# 1.1. Properly returning a value from default_prefs if the value not set
#      in the session prefs.
# 1.2. Writes default prefs in the database as the user prefs the first
#      time a user hits the page. On subsequent hits, these prefs are picked
#      up.
# 1.3. No more merging of user prefs after the user logs in.
#
# 2. Major changes
# 2.1. Using Digest::MD5 for the session identifier.
# 2.2. Supports login cookies
# 2.3. Setting expiry date, can be specified in the config file
# 2.4. Added `change_passwd()' and `remember_user()' methods.
#
# Revision 1.4  2001/01/18 20:46:40  sridhar
# Version 1.6.2:
# General:
# 1. Logging response headers if level is MSG_DEBUG.
# 2. Maiden appearance of Bedrock shell.
#
# Objects:
# 1. Method `get()' can be invoked with multiple params -- caller gets an
#    array of corresponding values
#
# Arrays:
# 1. Array has an `iterator()' method which returns an iterator which
#    can be used for stepping forward and back in the array.
# 2. Fixed method `splice()' -- perl's splice function requires offset
#    and length to be passed explicitly and not as an array.
#
# <sqlselect>
# 1. An array can be specified with --bind. This array will be used to
#    fill up whatever bind variables are needed. The array can be empty
#    too if no bind variables are needed.
#
# BLM::Number
# 1. Added max(), min(), more documentation (rlauer)
#
# BLM::SIMPLEFTP
# 1. Documentation cleanup (rlauer)
#
# Startup::UserSession
# 1.1. Properly returning a value from default_prefs if the value not set
#      in the session prefs.
# 1.2. Writes default prefs in the database as the user prefs the first
#      time a user hits the page. On subsequent hits, these prefs are picked
#      up.
# 1.3. No more merging of user prefs after the user logs in.
#
# 2. Major changes
# 2.1. Using Digest::MD5 for the session identifier.
# 2.2. Supports login cookies
# 2.3. Setting expiry date, can be specified in the config file
# 2.4. Added `change_passwd()' and `remember_user()' methods.
#
# Revision 1.3  2000/12/15 18:45:28  sridhar
# Fixed version numbers of modules.
#
# Revision 1.2  2000/12/15 18:43:42  sridhar
# Version 1.6.1:
# General:
# 1. Same handler now handles mod_perl requests and CGI requests
#    too. Have a class Request_cgi which mimicks Apache's request object
#    for CGI environment.
# 2. Creating a log file `bedrock.log' in LOGDIR
# 3. More error handling and reporting, illegal tag closing, etc.
#
# Objects:
# Method `delete()' returns the deleted value if a single item was
# deleted.
#
# Scalars:
# Added htmlencode() method.
#
# &lt;exec&gt;
# 1. Fixed bug in passing args to <exec> with buffer. The buffer was not
#    being removed from @argv before passing the args to the buffer.
# 2. Extension `.peb' is appended to the pebble name if not already there
#    to arrive at the pebble file name.
#
# &lt;null&gt;
# Proper checking for presence of any one of --define-var,
# --define-array or --create-object.
#
# &lt;sqlselect&gt;
# Bug fix for reporting error when using --need-rows: the script line
# number was not being reported correctly.
#
# BLM::List:
# Have a List object which remembers the order in which properties
# were specified. Useful for apps which need array like properties but
# also need to access properties by name
#
# BLM::Forum:
# Added a message board BLM
#
# Startup::Bedrock:
# 1.1 Using Bedrock::VERSION for version instead of Text::TagX::VERSION
# 1.2 Method `new()' can examine the specified class and create a new
#     object, array or handle as required.
# 1.3 Prefix `BLM::' is optional.
# 2.1 Defined FIRSTKEY() and NEXTKEY() methods.
# 2.2 Can specify `verbose' under `config' in config file
# 2.3 Added `BLMDoc()' method.
# 3. Fixed `require_version()' to handle previous single-period version
#    numbering and present double-period version numbering.
#
# Startup::Header:
# 1. Overrides FIRSTKEY() and NEXTKEY() so that we don't see no junk
#    when doing a trace
# 2. Property `input' stores input header, `config' stores module
#    configuration, and `output' stores output headers
# 3. Default mime can come from config file
# 4. Methods for common header operations: `no_cache()', `see_other()',
#    and `location()'
# 5. Removed `set()': moved the stuff to `STORE()'
#
# Startup::Modules:
# Kicked out this module since startup modules are being `require'd
# instead of `use'd.
#
# Startup::Output:
# Manipulate Local URIs
#
# Revision 1.1  2000/12/15 15:55:52  sridhar
# Moved VERSIONS to VERSION.pm and added Bedrock version numbering system
# mojo.
#
# Revision 1.1  2000/11/30 14:38:50  sridhar
# Version 1.6.0
#
# Expressions:
# 1. Better error trapping.
# 2. Fixed error messages so exceptions don't have perl source code
#    locations in them.
# 3. Cleaned up implementation of `--exists' operator.
#
# Parser:
# 1. Had a bug in string parsing: was parsing successfully even though
#    there was no string terminator.
#
# 2.1. Cleaner error handling.
# 2.2. Fixed error messages so exceptions don't have perl source code
#      locations in them.
#
# Scalars:
# 1. Added method `isEmpty()'
# 2. Added method `urlencode()' to scalars
#
# <exec>:
# 1.1. Support for pebbles -- file to be included is taken from a
#      directory which is configured as PEBBLE_DIR
# 1.2. No expanding of arguments by default. --expand-args must be
#      specified to expand any array arguments.
#
# 2.1. Parameters can now be passed to <exec>.
# 2.2. Exec is more like a subroutine call in that a stack frame is
#      created on invocation which goes away when the exec is done. Variables
#      are created in the current stack frame and do not clobber global or
#      variables from parent's stack frames.
#
# 3. Fixed error messages so location of error in perl source is not
#     visible.
#
# 4. Yuck! Previous commit had a syntax error
#
# 5. Croaking if arg to --file is a directory
#
# 6. Bug fix: characters following the closing '>' after <exec> and <include>
#    were being discarded due to $_ being clobbered when `output()' was
#    reinvoked with new file.
#
# <include>
# 1. If the filename has a `~' at the beginning, it is replaced with
#    DOCUMENT_ROOT environment variable.
#
# 2. Fixed error messages so exceptions don't have perl source code
#    locations in them.
#
# 3.1. Croak if file argument turns out to be a directory
# 3.2. Removed --access-time, etc.
#
# 4. Bug fix: characters following the closing '>' after <exec> and <include>
#    were being discarded due to $_ being clobbered when `output()' was
#    reinvoked with new file.
#
#
# <null>:
# 1.1. Added option --create-object which takes the arguments and makes it
#      the properties of a newly created object.
# 1.2. If the there are odd number of arguments, the first or last
#      argument is expanded if it is an array
# 1.3. Throws exception if the object cannot be created due to invalid
#      arguments.
#
# 2. Fixed error messages so exceptions don't have perl source code
#    locations in them.
#
# <sql>
# 1.1. Support for passing a database handle using the option --db.
# 1.2. --dbname option deprecated.
#
# 2.1. Fixed error messages so exceptions don't have perl source code
#      locations in them.
# 2.2. Explicitly catching error code from DBI routine to show suitable
#      error message.
# 2.3. Checking for Incorrect number of bind vars being specified with
#      statement.
#
# 3. Argument to --bind can be an array. The array is expanded and used with
#    the other bind arguments appropriately.
#
# <sqlconnect>
# 1. Database connection exported to the script if --dbname option is used.
# 2.1. Fixed error messages so exceptions don't have perl source code
#      locations in them.
# 2.2. RaiseError and PrintError turned off -- we will explicitly check
#      for return code and show a suitable error message
#
# <trace>
# 1. `compact' option is default.
#
# <sqlselect>
# 1.1. Support for passing a database handle using the option --db.
# 1.2. Error messages cleaned.
# 1.3. More error checks.
# 1.4. --dbname option deprecated.
#
# 2. Argument to --bind can be an array. The array is expanded and used with
#    the other bind arguments appropriately.
#
# <sink>
# 1.1. Added --define-var option to <sink> for defining a variable with the
#      contents if <sink></sink>.
# 1.2. Added --HTMLEncode and --HTMLDecode options to encoding and
#      decoding the contents of <sink></sink>
#
#

__DATA__

<h1>Bedrock Versions</h1>

<pre>

Revision 1.6  2011/09/15 16:05:32  eutl420
- perl tidy

Revision 1.5  2011/07/17 18:43:24  eutl420
- somehow lost the automake variables @VERSION, @BUILD_DATE

Revision 1.4  2011/07/17 16:56:08  eutl420
- build .pm from .pm.in, added @PERL@

Revision 1.3  2010/11/16 00:19:36  rlauer
- added BUILD_DATE

Revision 1.2  2009/12/26 15:38:39  rlauer
remove BLM::OrderedObject, all objects now ordered

Revision 1.1  2009/04/07 19:24:36  rlauer
- add the 2.1.3-snapshot automake replacement token for generating the Bedrock version number

Revision 1.10  2008/11/25 19:04:13  rlauer
changes based on Bedrock 2.0 migration plan

Revision 1.9  2001/02/15 14:19:20  sridhar
Update to version 1.6.4: Had to rename the module in
BLM::OrderedObject.

Revision 1.8  2001/02/15 13:46:55  sridhar
Updated version 1.6.4:
1. BLM::List moved to BLM::OrderedObject
2. Updated BLM::Startup::Forum

Revision 1.7  2001/02/14 15:38:11  sridhar
Added copyright notice and GPL licensing notice.

Revision 1.6  2001/02/14 14:29:42  sridhar
Version 1.6.3:

General:
1. Bug fix in method invocation: invoking a method on an unblessed ARRAY
   or HASH was returning a junk value due to falling off the end of the
   function.

Arrays:
1. Methods pop() and shift() take an optional argument which is the number of items
to pop/shift from array. The elements removed are returned as an Array
2. Method splice() returns an array of elements removed.

<exec>:
No argument required for --expand-args. It is a flag which is turned on
if present.

BLM::Mail
1. added pod documentation
2. created methods for setting the mail properties
3. optional argument of 'message' to sendmail()
4. option setting of timeout in constructor

BLM::Number
- example had Bedrock.number instead of Bedrock.new

BLM::Startup::Forum
Massive restructuring -- Added moderation.

Revision 1.5  2001/01/22 18:48:21  sridhar
Version 1.6.2:
General:
1. Logging response headers if level is MSG_DEBUG.
2. Maiden appearance of Bedrock shell.

Objects:
1. Method `get()' can be invoked with multiple params -- caller gets an
   array of corresponding values

Arrays:
1. Array has an `iterator()' method which returns an iterator which
   can be used for stepping forward and back in the array.
2. Fixed method `splice()' -- perl's splice function requires offset
   and length to be passed explicitly and not as an array.

<sqlselect>
1. An array can be specified with --bind. This array will be used to
   fill up whatever bind variables are needed. The array can be empty
   too if no bind variables are needed.

BLM::Number
1. Added max(), min(), more documentation (rlauer)

BLM::SIMPLEFTP
1. Documentation cleanup (rlauer)

Startup::UserSession
1.1. Properly returning a value from default_prefs if the value not set
     in the session prefs.
1.2. Writes default prefs in the database as the user prefs the first
     time a user hits the page. On subsequent hits, these prefs are picked
     up.
1.3. No more merging of user prefs after the user logs in.

2. Major changes
2.1. Using Digest::MD5 for the session identifier.
2.2. Supports login cookies
2.3. Setting expiry date, can be specified in the config file
2.4. Added `change_passwd()' and `remember_user()' methods.

Revision 1.4  2001/01/18 20:46:40  sridhar
Version 1.6.2:
General:
1. Logging response headers if level is MSG_DEBUG.
2. Maiden appearance of Bedrock shell.

Objects:
1. Method `get()' can be invoked with multiple params -- caller gets an
   array of corresponding values

Arrays:
1. Array has an `iterator()' method which returns an iterator which
   can be used for stepping forward and back in the array.
2. Fixed method `splice()' -- perl's splice function requires offset
   and length to be passed explicitly and not as an array.

<sqlselect>
1. An array can be specified with --bind. This array will be used to
   fill up whatever bind variables are needed. The array can be empty
   too if no bind variables are needed.

BLM::Number
1. Added max(), min(), more documentation (rlauer)

BLM::SIMPLEFTP
1. Documentation cleanup (rlauer)

Startup::UserSession
1.1. Properly returning a value from default_prefs if the value not set
     in the session prefs.
1.2. Writes default prefs in the database as the user prefs the first
     time a user hits the page. On subsequent hits, these prefs are picked
     up.
1.3. No more merging of user prefs after the user logs in.

2. Major changes
2.1. Using Digest::MD5 for the session identifier.
2.2. Supports login cookies
2.3. Setting expiry date, can be specified in the config file
2.4. Added `change_passwd()' and `remember_user()' methods.

Revision 1.3  2000/12/15 18:45:28  sridhar
Fixed version numbers of modules.

Revision 1.2  2000/12/15 18:43:42  sridhar
Version 1.6.1:
General:
1. Same handler now handles mod_perl requests and CGI requests
   too. Have a class Request_cgi which mimicks Apache's request object
   for CGI environment.
2. Creating a log file `bedrock.log' in LOGDIR
3. More error handling and reporting, illegal tag closing, etc.

Objects:
Method `delete()' returns the deleted value if a single item was
deleted.

Scalars:
Added htmlencode() method.

&lt;exec&gt;
1. Fixed bug in passing args to <exec> with buffer. The buffer was not
   being removed from @argv before passing the args to the buffer.
2. Extension `.peb' is appended to the pebble name if not already there
   to arrive at the pebble file name.

&lt;null&gt;
Proper checking for presence of any one of --define-var,
--define-array or --create-object.

&lt;sqlselect&gt;
Bug fix for reporting error when using --need-rows: the script line
number was not being reported correctly.

BLM::List:
Have a List object which remembers the order in which properties
were specified. Useful for apps which need array like properties but
also need to access properties by name

BLM::Forum:
Added a message board BLM

Startup::Bedrock:
1.1 Using Bedrock::VERSION for version instead of Text::TagX::VERSION
1.2 Method `new()' can examine the specified class and create a new
    object, array or handle as required.
1.3 Prefix `BLM::' is optional.
2.1 Defined FIRSTKEY() and NEXTKEY() methods.
2.2 Can specify `verbose' under `config' in config file
2.3 Added `BLMDoc()' method.
3. Fixed `require_version()' to handle previous single-period version
   numbering and present double-period version numbering.

Startup::Header:
1. Overrides FIRSTKEY() and NEXTKEY() so that we don't see no junk
   when doing a trace
2. Property `input' stores input header, `config' stores module
   configuration, and `output' stores output headers
3. Default mime can come from config file
4. Methods for common header operations: `no_cache()', `see_other()',
   and `location()'
5. Removed `set()': moved the stuff to `STORE()'

Startup::Modules:
Kicked out this module since startup modules are being `require'd
instead of `use'd.

Startup::Output:
Manipulate Local URIs


</pre>
