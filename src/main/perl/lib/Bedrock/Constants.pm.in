package Bedrock::Constants;

use strict;
use warnings;

BEGIN {
  use Config;
  use File::ShareDir qw(dist_dir);
  use English qw(-no_match_vars);
  # these really are defaults from build

  ## no critic (RequireInterpolationOfMetachars)
  our $DEFAULT_BEDROCK_CONFIG_PATH = '@configdir@';
  our $DEFAULT_BEDROCK_PERL5LIBDIR = '@pkglibdir@';
  our $DEFAULT_BEDROCK_CSSDIR      = '@cssdir@';
  our $DEFAULT_BEDROCK_INCLUDE_DIR = '@pkgincludedir@';
  our $DEFAULT_BEDROCK_PEBBLE_DIR  = '@pebblesdir@';

  if ( !$COMPILING ) {
    my $bedrock_path;

    foreach (@INC) {
      if ( -f "$_/Bedrock.pm" ) {
        $bedrock_path = $_;
        last;
      }
    }

    if ($bedrock_path) {
      $DEFAULT_BEDROCK_PERL5LIBDIR = $bedrock_path;
    }

    my $dist_path = eval { return dist_dir('Bedrock'); };

    if ( $dist_path && -d $dist_path ) {
      $DEFAULT_BEDROCK_CONFIG_PATH = "$dist_path/config";
      $DEFAULT_BEDROCK_CSSDIR      = "$dist_path/css";
      $DEFAULT_BEDROCK_INCLUDE_DIR = "$dist_path/include";
      $DEFAULT_BEDROCK_PEBBLE_DIR  = "$dist_path/pebbles";
    }
  }
}

use Log::Log4perl::Level;

our $VERSION = '@PACKAGE_VERSION@';  ## no critic (RequireInterpolationOfMetachars)

use Readonly;

# chars
Readonly our $AMPERSAND          => q{&};
Readonly our $ASTERISK           => q{*};
Readonly our $COLON              => q{:};
Readonly our $COMMA              => q{,};
Readonly our $DASH               => q{-};
Readonly our $DOUBLE_COLON       => q{::};
Readonly our $DOT                => q{.};
Readonly our $DOLLAR_SIGN        => q{$};
Readonly our $EMPTY              => q{};
Readonly our $EQUALS_SIGN        => q{=};
Readonly our $PERIOD             => q{.};
Readonly our $PERCENT            => q{%};
Readonly our $QUESTION_MARK      => q{?};
Readonly our $SLASH              => q{/};
Readonly our $SEMICOLON          => q{;};
Readonly our $SPACE              => q{ };
Readonly our $TEMPLATE_DELIMITER => q{@};
Readonly our $UNDERSCORE         => q{_};
Readonly our $PLUS_SIGN          => q{+};
Readonly our $MINUS_SIGN         => q{-};

# magic numbers
Readonly our $SECONDS_IN_A_DAY => 60 * 60 * 24;

# booleans
Readonly our $TRUE         => 1;
Readonly our $FALSE        => 0;
Readonly our $ON           => 1;
Readonly our $OFF          => 0;
Readonly our $BACKTICKS    => 1;
Readonly our $NO_BACKTICKS => 0;

# find flags
Readonly our $FIND_FUZZY => 0;
Readonly our $FIND_EXACT => 1;

# log levels
Readonly::Hash our %LOG4PERL_LOG_LEVELS => (
  trace => $TRACE,
  debug => $DEBUG,
  error => $ERROR,
  info  => $INFO,
  warn  => $WARN,
  fatal => $FATAL,
);

# Bedrock tag expressions
Readonly our $OPENTAG_EXPR =>
  '^(\#|\?|array|case|noexec|pebble|plugin|var|hash|include|sink|snippet|sql|sqlrollback|sqlcommit|sqlconnect|sqltable|trace|foreach|sqlselect|while|iif|if|unless|else?if|try|catch|raise|recordset|else|null|exec|open|pebbledef|flush)(?=\W)';

Readonly our $CLOSETAG_EXPR =>
  '^(/sink|/snippet|/sqlselect|/noexec|/pebbledef|/foreach|/while|/if|/unless|/try)>';

Readonly our $OPTIONS_EXPR => '^\s*(([^>\\\\]|\\\\.)*\/?)>';

## HTTP Codes

Readonly our $HTTP_OK                    => '200';
Readonly our $MOVED_PERMANENTLY          => '301';
Readonly our $HTTP_FOUND                 => '302';
Readonly our $HTTP_SEE_OTHER             => '303';
Readonly our $HTTP_NOT_MODIFIED          => '304';
Readonly our $HTTP_BAD_REQUEST           => '400';
Readonly our $HTTP_UNAUTHORIZED          => '401';
Readonly our $HTTP_FORBIDDEN             => '403';
Readonly our $HTTP_NOT_FOUND             => '404';
Readonly our $HTTP_INTERNAL_SERVER_ERROR => '500';
Readonly our $HTTP_SERVICE_UNAVAILABLE   => '503';

use parent qw(Exporter);

our @EXPORT_OK = ();

our %EXPORT_TAGS = (
  'booleans' => [
    qw(
      $TRUE
      $FALSE
      $ON
      $OFF
      $BACKTICKS
      $NO_BACKTICKS
    )
  ],
  'http' => [
    qw(
      $HTTP_OK
      $MOVED_PERMANENTLY
      $HTTP_FOUND
      $HTTP_SEE_OTHER
      $HTTP_BAD_REQUEST
      $HTTP_UNAUTHORIZED
      $HTTP_FORBIDDEN
      $HTTP_NOT_FOUND
      $HTTP_NOT_MODIFIED
      $HTTP_INTERNAL_SERVER_ERROR
      $HTTP_SERVICE_UNAVAILABLE
    )
  ],

  'log_levels' => [
    qw(
      %LOG4PERL_LOG_LEVELS
    )
  ],
  'chars' => [
    qw(
      $ASTERISK
      $AMPERSAND
      $COLON
      $COLOR
      $COMMA
      $DASH
      $DOLLAR_SIGN
      $DOUBLE_COLON
      $DOT
      $EMPTY
      $EQUALS_SIGN
      $PERIOD
      $PERCENT
      $PLUS_SIGN
      $MINUS_SIGN
      $QUESTION_MARK
      $SEMICOLON
      $SLASH
      $SPACE
      $TEMPLATE_DELIMITER
      $UNDERSCORE
    )
  ],
  'magic_numbers' => [
    qw(
      $SECONDS_IN_A_DAY
    )
  ],
  'find_flags' => [
    qw(
      $FIND_FUZZY
      $FIND_EXACT
    )
  ],
  'regexp' => [
    qw(
      $OPENTAG_EXPR
      $CLOSETAG_EXPR
      $OPTIONS_EXPR
    )
  ],
  'defaults' => [
    qw(
      $DEFAULT_BEDROCK_CONFIG_PATH
      $DEFAULT_BEDROCK_PERL5LIBDIR
      $DEFAULT_BEDROCK_CSSDIR
      $DEFAULT_BEDROCK_INCLUDE_DIR
      $DEFAULT_BEDROCK_PEBBLE_DIR
    )
  ],

);

foreach my $k ( keys %EXPORT_TAGS ) {
  push @EXPORT_OK, @{ $EXPORT_TAGS{$k} };
}

$EXPORT_TAGS{'all'} = [@EXPORT_OK];

1;

__END__
