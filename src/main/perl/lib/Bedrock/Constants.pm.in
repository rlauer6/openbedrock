package Bedrock::Constants;

use strict;
use warnings;

BEGIN {
  use Config;
  use File::ShareDir qw(dist_dir);
  use English qw(-no_match_vars);
  # these really are defaults from build

  ## no critic (RequireInterpolationOfMetachars)
  our $DEFAULT_BEDROCK_CONFIG_PATH = '@configdir@';
  our $DEFAULT_BEDROCK_PERL5LIBDIR = '@pkglibdir@';
  our $DEFAULT_BEDROCK_CSSDIR      = '@cssdir@';
  our $DEFAULT_BEDROCK_INCLUDE_DIR = '@pkgincludedir@';
  our $DEFAULT_BEDROCK_PEBBLE_DIR  = '@pebblesdir@';

  if ( !$COMPILING ) {
    my $bedrock_path;

    foreach (@INC) {
      if ( -f "$_/Bedrock.pm" ) {
        $bedrock_path = $_;
        last;
      }
    }

    if ($bedrock_path) {
      $DEFAULT_BEDROCK_PERL5LIBDIR = $bedrock_path;
    }

    my $dist_path = eval { return dist_dir('Bedrock'); };

    # these can exists w/o files!
    if ( $dist_path && -d $dist_path && -e "$dist_path/config/tagx.xml" ) {
      $DEFAULT_BEDROCK_CONFIG_PATH = "$dist_path/config";
      $DEFAULT_BEDROCK_CSSDIR      = "$dist_path/css";
      $DEFAULT_BEDROCK_INCLUDE_DIR = "$dist_path/include";
      $DEFAULT_BEDROCK_PEBBLE_DIR  = "$dist_path/pebbles";
    }
  }
}

use Log::Log4perl::Level;

our $VERSION = '@PACKAGE_VERSION@';  ## no critic (RequireInterpolationOfMetachars)

use Readonly;

# chars
Readonly our $AMPERSAND          => q{&};
Readonly our $ASTERISK           => q{*};
Readonly our $COLON              => q{:};
Readonly our $COMMA              => q{,};
Readonly our $DASH               => q{-};
Readonly our $DOUBLE_COLON       => q{::};
Readonly our $DOT                => q{.};
Readonly our $DOLLAR_SIGN        => q{$};
Readonly our $EMPTY              => q{};
Readonly our $EQUALS_SIGN        => q{=};
Readonly our $PERIOD             => q{.};
Readonly our $PERCENT            => q{%};
Readonly our $QUESTION_MARK      => q{?};
Readonly our $SLASH              => q{/};
Readonly our $SEMICOLON          => q{;};
Readonly our $SPACE              => q{ };
Readonly our $TEMPLATE_DELIMITER => q{@};
Readonly our $UNDERSCORE         => q{_};
Readonly our $PLUS_SIGN          => q{+};
Readonly our $MINUS_SIGN         => q{-};

# magic numbers
Readonly our $SECONDS_IN_A_DAY => 60 * 60 * 24;

# booleans
Readonly our $TRUE         => 1;
Readonly our $FALSE        => 0;
Readonly our $ON           => 1;
Readonly our $OFF          => 0;
Readonly our $BACKTICKS    => 1;
Readonly our $NO_BACKTICKS => 0;

# find flags
Readonly our $FIND_FUZZY => 0;
Readonly our $FIND_EXACT => 1;

# log levels
Readonly::Hash our %LOG4PERL_LOG_LEVELS => (
  trace => $TRACE,
  debug => $DEBUG,
  error => $ERROR,
  info  => $INFO,
  warn  => $WARN,
  fatal => $FATAL,
);

# not a constant because we might add to these
our %DEFAULT_MIME_TYPES = (
  '.css'   => 'text/css',
  '.csv'   => 'text/csv',
  '.doc'   => 'application/msword',
  '.docx'  => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
  '.gif'   => 'image/gif',
  '.htm'   => 'text/html',
  '.html'  => 'text/html',
  '.jpeg'  => 'image/jpeg',
  '.jpg'   => 'image/jpeg',
  '.jroc'  => 'application/json',
  '.jrock' => 'application/json',
  '.mp3'   => 'audio/mpeg',
  '.mp4'   => 'video/mp4',
  '.mpeg'  => 'video/mpeg',
  '.ods'   => 'application/vnd.oasis.opendocument.spreadsheet',
  '.odt'   => 'application/vnd.oasis.opendocument.text',
  '.pdf'   => 'application/pdf',
  '.png'   => 'image/png',
  '.roc'   => 'text/html',
  '.rock'  => 'text/html',
  '.tif'   => 'image/tiff',
  '.txt'   => 'text/plain',
  '.xls'   => 'application/vnd.ms-excel',
  '.xlsx'  => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
  '.xml'   => 'text/xml',
  '.zip'   => 'application/zip',
);

Readonly our $OPENTAG_EXPR =>
  '^(\#|\?|array|case|noexec|pebble|plugin|var|hash|include|sink|snippet|sql|sqlrollback|sqlcommit|sqlconnect|sqltable|trace|foreach|sqlselect|while|iif|if|unless|else?if|try|catch|raise|recordset|else|null|exec|open|pebbledef|flush)(?=\W)';

Readonly our $CLOSETAG_EXPR =>
  '^(/sink|/snippet|/sqlselect|/noexec|/pebbledef|/foreach|/while|/if|/unless|/try)(-)?>';

Readonly our $OPTIONS_EXPR => '^\s*(([^>\\\\]|\\\\.)*?\/?)\s*(-)?>';

## HTTP Codes

# 1xx Informational
Readonly our $HTTP_CONTINUE            => '100';
Readonly our $HTTP_SWITCHING_PROTOCOLS => '101';
Readonly our $HTTP_PROCESSING          => '102';
Readonly our $HTTP_EARLY_HINTS         => '103';

# 2xx Success
Readonly our $HTTP_OK                            => '200';
Readonly our $HTTP_CREATED                       => '201';
Readonly our $HTTP_ACCEPTED                      => '202';
Readonly our $HTTP_NON_AUTHORITATIVE_INFORMATION => '203';
Readonly our $HTTP_NO_CONTENT                    => '204';
Readonly our $HTTP_RESET_CONTENT                 => '205';
Readonly our $HTTP_PARTIAL_CONTENT               => '206';
Readonly our $HTTP_MULTI_STATUS                  => '207';
Readonly our $HTTP_ALREADY_REPORTED              => '208';
Readonly our $HTTP_IM_USED                       => '226';

# 3xx Redirection
Readonly our $HTTP_MULTIPLE_CHOICES   => '300';
Readonly our $HTTP_MOVED_PERMANENTLY  => '301';
Readonly our $HTTP_FOUND              => '302';
Readonly our $HTTP_SEE_OTHER          => '303';
Readonly our $HTTP_NOT_MODIFIED       => '304';
Readonly our $HTTP_USE_PROXY          => '305';
Readonly our $HTTP_SWITCH_PROXY       => '306';
Readonly our $HTTP_TEMPORARY_REDIRECT => '307';
Readonly our $HTTP_PERMANENT_REDIRECT => '308';

# 4xx Client Errors
Readonly our $HTTP_BAD_REQUEST                     => '400';
Readonly our $HTTP_UNAUTHORIZED                    => '401';
Readonly our $HTTP_PAYMENT_REQUIRED                => '402';
Readonly our $HTTP_FORBIDDEN                       => '403';
Readonly our $HTTP_NOT_FOUND                       => '404';
Readonly our $HTTP_METHOD_NOT_ALLOWED              => '405';
Readonly our $HTTP_NOT_ACCEPTABLE                  => '406';
Readonly our $HTTP_PROXY_AUTHENTICATION_REQUIRED   => '407';
Readonly our $HTTP_REQUEST_TIMEOUT                 => '408';
Readonly our $HTTP_CONFLICT                        => '409';
Readonly our $HTTP_GONE                            => '410';
Readonly our $HTTP_LENGTH_REQUIRED                 => '411';
Readonly our $HTTP_PRECONDITION_FAILED             => '412';
Readonly our $HTTP_PAYLOAD_TOO_LARGE               => '413';
Readonly our $HTTP_URI_TOO_LONG                    => '414';
Readonly our $HTTP_UNSUPPORTED_MEDIA_TYPE          => '415';
Readonly our $HTTP_RANGE_NOT_SATISFIABLE           => '416';
Readonly our $HTTP_EXPECTATION_FAILED              => '417';
Readonly our $HTTP_IM_A_TEAPOT                     => '418';
Readonly our $HTTP_MISDIRECTED_REQUEST             => '421';
Readonly our $HTTP_UNPROCESSABLE_ENTITY            => '422';
Readonly our $HTTP_LOCKED                          => '423';
Readonly our $HTTP_FAILED_DEPENDENCY               => '424';
Readonly our $HTTP_TOO_EARLY                       => '425';
Readonly our $HTTP_UPGRADE_REQUIRED                => '426';
Readonly our $HTTP_PRECONDITION_REQUIRED           => '428';
Readonly our $HTTP_TOO_MANY_REQUESTS               => '429';
Readonly our $HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE => '431';
Readonly our $HTTP_UNAVAILABLE_FOR_LEGAL_REASONS   => '451';

# 5xx Server Errors
Readonly our $HTTP_INTERNAL_SERVER_ERROR           => '500';
Readonly our $HTTP_NOT_IMPLEMENTED                 => '501';
Readonly our $HTTP_BAD_GATEWAY                     => '502';
Readonly our $HTTP_SERVICE_UNAVAILABLE             => '503';
Readonly our $HTTP_GATEWAY_TIMEOUT                 => '504';
Readonly our $HTTP_HTTP_VERSION_NOT_SUPPORTED      => '505';
Readonly our $HTTP_VARIANT_ALSO_NEGOTIATES         => '506';
Readonly our $HTTP_INSUFFICIENT_STORAGE            => '507';
Readonly our $HTTP_LOOP_DETECTED                   => '508';
Readonly our $HTTP_NOT_EXTENDED                    => '510';
Readonly our $HTTP_NETWORK_AUTHENTICATION_REQUIRED => '511';

Readonly::Hash our %HTTP_ERRORS => (
  '400' => 'BAD REQUEST',
  '401' => 'UNAUTHORIZED',
  '402' => 'PAYMENT REQUIRED',
  '403' => 'FORBIDDEN',
  '404' => 'NOT FOUND',
  '405' => 'METHOD NOT ALLOWED',
  '406' => 'NOT ACCEPTABLE',
  '407' => 'PROXY AUTHENTICATION REQUIRED',
  '408' => 'REQUEST TIMEOUT',
  '409' => 'CONFLICT',
  '410' => 'GONE',
  '411' => 'LENGTH REQUIRED',
  '412' => 'PRECONDITION FAILED',
  '413' => 'PAYLOAD TOO LARGE',
  '414' => 'URI TOO LONG',
  '415' => 'UNSUPPORTED MEDIA TYPE',
  '416' => 'RANGE NOT SATISFIABLE',
  '417' => 'EXPECTATION FAILED',
  '418' => 'I\'M A TEAPOT',
  '421' => 'MISDIRECTED REQUEST',
  '422' => 'UNPROCESSABLE ENTITY',
  '423' => 'LOCKED',
  '424' => 'FAILED DEPENDENCY',
  '425' => 'TOO EARLY',
  '426' => 'UPGRADE REQUIRED',
  '428' => 'PRECONDITION REQUIRED',
  '429' => 'TOO MANY REQUESTS',
  '431' => 'REQUEST HEADER FIELDS TOO LARGE',
  '451' => 'UNAVAILABLE FOR LEGAL REASONS',

  '500' => 'INTERNAL SERVER ERROR',
  '501' => 'NOT IMPLEMENTED',
  '502' => 'BAD GATEWAY',
  '503' => 'SERVICE UNAVAILABLE',
  '504' => 'GATEWAY TIMEOUT',
  '505' => 'HTTP VERSION NOT SUPPORTED',
  '506' => 'VARIANT ALSO NEGOTIATES',
  '507' => 'INSUFFICIENT STORAGE',
  '508' => 'LOOP DETECTED',
  '510' => 'NOT EXTENDED',
  '511' => 'NETWORK AUTHENTICATION REQUIRED',
);

use parent qw(Exporter);

our @EXPORT_OK = ();

our %EXPORT_TAGS = (
  'booleans' => [
    qw(
      $TRUE
      $FALSE
      $ON
      $OFF
      $BACKTICKS
      $NO_BACKTICKS
    )
  ],
  'http_errors' => ['%HTTP_ERRORS'],
  'http'        => [
    qw(
      $HTTP_OK
      $MOVED_PERMANENTLY
      $HTTP_FOUND
      $HTTP_SEE_OTHER
      $HTTP_BAD_REQUEST
      $HTTP_UNAUTHORIZED
      $HTTP_FORBIDDEN
      $HTTP_NOT_FOUND
      $HTTP_NOT_MODIFIED
      $HTTP_INTERNAL_SERVER_ERROR
      $HTTP_SERVICE_UNAVAILABLE
    )
  ],
  'log_levels' => [
    qw(
      %LOG4PERL_LOG_LEVELS
    )
  ],
  'chars' => [
    qw(
      $ASTERISK
      $AMPERSAND
      $COLON
      $COLOR
      $COMMA
      $DASH
      $DOLLAR_SIGN
      $DOUBLE_COLON
      $DOT
      $EMPTY
      $EQUALS_SIGN
      $PERIOD
      $PERCENT
      $PLUS_SIGN
      $MINUS_SIGN
      $QUESTION_MARK
      $SEMICOLON
      $SLASH
      $SPACE
      $TEMPLATE_DELIMITER
      $UNDERSCORE
    )
  ],
  'magic_numbers' => [
    qw(
      $SECONDS_IN_A_DAY
    )
  ],
  'find_flags' => [
    qw(
      $FIND_FUZZY
      $FIND_EXACT
    )
  ],
  'regexp' => [
    qw(
      $OPENTAG_EXPR
      $CLOSETAG_EXPR
      $OPTIONS_EXPR
    )
  ],
  'defaults' => [
    qw(
      $DEFAULT_BEDROCK_CONFIG_PATH
      $DEFAULT_BEDROCK_PERL5LIBDIR
      $DEFAULT_BEDROCK_CSSDIR
      $DEFAULT_BEDROCK_INCLUDE_DIR
      $DEFAULT_BEDROCK_PEBBLE_DIR
    )
  ],
  'mime-types' => [
    qw(
      %DEFAULT_MIME_TYPES
    )
  ],
);

foreach my $k ( keys %EXPORT_TAGS ) {
  push @EXPORT_OK, @{ $EXPORT_TAGS{$k} };
}

$EXPORT_TAGS{'all'} = [@EXPORT_OK];

1;

__END__
