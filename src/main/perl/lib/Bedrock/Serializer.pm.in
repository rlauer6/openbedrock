package Bedrock::Serializer;

use strict;
use warnings;

use Role::Tiny;
use Data::Dumper;

sub new {
  my $class = shift;
  my $config = shift;
  my $self = bless {}, ref($class) || $class;

  $self->{_config} =  $config || {};

  return $self;
}

sub config {
  return $_[0]->{_config};
}

sub options {
  my $self = shift;
  my $config = shift;
  my $options = shift;

  if ( $config ) {
    if ( $options ) {
      $self->{_options} = $options;
    }
    elsif ( ref($self->config) && $self->config->{$config}) {
      if ( $self->config->{$config}->can('devolve')) {
	$self->{_options} = $self->config->{$config}->devolve;
      }
      else {
	$self->{_options} = $self->config->{$config};
      }
    }
    else {
      $self->{_options} = {};
    }
  }

  $self->{_options};
}

before serialize => sub { 
  my $orig = shift;
  my $data = shift;
  $orig->options('in', shift);
};

before deserialize => sub { 
  my $orig = shift;
  my $data = shift;
  $orig->options('out', shift);
};

1;
