package Bedrock::Object;
#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
use strict;
use warnings;

use Scalar::Util qw/reftype blessed/;
use Bedrock qw{:booleans};

use Bedrock::Hash;
use Bedrock::Array;

use parent qw{Exporter};

our @EXPORT_OK = qw{ create_object };

########################################################################
sub create_object {
########################################################################
  my ($obj) = @_;

  # scalars are scalars
  return $obj
    if !ref $obj;

  # blessed already? leave alone
  return $obj
    if blessed $obj;  # why did you use Bedrock::Object

  # turn arrays into Bedrock::Array
  return bless $obj, 'Bedrock::Array'
    if is_array($obj);

  return bless $obj, 'Bedrock::Hash'
    if is_hash($obj);

  # no idea what this is?
  return $obj;
}

1;

__END__

## no critic (RequirePodSections)

=pod

=head1 PUBLIC

Bedrock::Object - turn an ordinary Perl object into a Bedrock object.

=head1 SYNOPSIS

 use Bedrock::Object qw{create_object};

 my $bedrock_hash = create_object({});

=head1 DESCRIPTION

=head1 METHODS AND SUBROUTINES

=head2 create_object

 create_object(ref)

Returns a new Bedrock object.

=head1 AUTHOR

Rob Lauer - <rlauer6@comcast.net>

=head1 SEE ALSO

L<Bedrock::Hash>, L<Bedrock::Array>

=cut
