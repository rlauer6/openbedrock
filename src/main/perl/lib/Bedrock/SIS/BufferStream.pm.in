#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package SIS::BufferStream;

use strict;
use Symbol;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
    @ISA	= qw(Exporter);
}

sub new
{
    my $class = shift;
    my $self = gensym;
    tie *{$self}, $class, @_;
    bless $self, $class;
    $self;
}

sub TIEHANDLE
{
    my $class = shift;
    my $data = shift;
    my $self = bless {}, $class;
    $self->{'data'} = $data;
    $self->{'pos'} = 0;
    $self;
}

sub READLINE
{
    my $self = shift;
    my $endpos = index($self->{'data'}, "\n", $self->{'pos'});
    if ( $endpos < 0 ) { $endpos = length($self->{'data'}) }
    elsif ( $endpos < length($self->{'data'}) ) { $endpos++ }
    my $data = substr($self->{'data'}, $self->{'pos'}, $endpos - $self->{'pos'});
    $self->{'pos'} = $endpos;
    return length($data) > 0 ? $data : undef;
}

sub CLOSE
{
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2000/09/18 14:20:26  sridhar
# Moved some generally useful modules under Perl/SIS to Perl/Bedrock/SIS.
#
# Revision 1.1  2000/08/17 17:20:49  sridhar
# SIS::BufferStream class makes a data buffer appear like a file
# handle. However right now only reading using <$fh> type of operations
# have been implemented, and close($fh) does nothing.
#
#
