#!@PERL@ -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package Bedrock::Application::Plugin;

use vars qw(@ISA);
use strict;

use Bedrock::Hash;

@ISA = qw(Bedrock::Hash);

=pod

=head1 PUBLIC

Bedrock::Plugin

=head1 SYNOPSIS

  package BLM::Startup::Foo;

  use Bedrock::Plugin;

  use vars qw(@ISA);

  @ISA = qw( Bedrock::Application::Plugin );

  1;

=head1 DESCRIPTION

C<Bedrock::Application::Plugin> is a base class that can be used to provide all of
the plumbing for your typical Bedrock Application Plugin.

 package BLM::Startup::Foo;

 use Bedrock::Application::Plugin;

 @ISA = qw(Bedrock::Application::Plugin);

 sub hello_world {
   return "Hello World!";
 }
 
 1;

Create a Bedrock XML file that defines your Application Plugin and
drop this file in the C<$ENV{CONFIG_PATH}/config.d/startup> directory.

 <object> 
   <scalar name="binding">foo</scalar> 
   <scalar name="module">BLM::Startup::Foo</scalar> 
     <object name="config">
       <scalar name="data_source">dbi:mysql:bedrock</scalar>
       <scalar name="username">fred</scalar>
       <scalar name="password">flintstone</scalar>
     </object>
 </object> 

Then in your page...

 <var $foo.hello_world()>

=cut

sub TIEHASH
{
    my ($class, $ctx, $config) = @_;

    my $self = bless {}, $class;
    $self->{ctx} = $ctx;
    $self->{config} = $config;

    $self;
}

sub config {
  return $_[0]->{config};
}

=pod

=head1 METHODS

=head1 config

Returns the configuration object form your Plugin definition file.

=pod

=head1 AUTHOR

Rob Lauer - rlauer@signatureinfo.com

=head1 SEE ALSO

C<Bedrock::Plugin>

=cut

# $Log$
# Revision 1.3  2011/07/17 16:43:21  eutl420
# - @PERL@
#
# Revision 1.2  2011/07/13 18:16:05  eutl420
# - added a config() method to return the module config object
# - updated pod, etc to reflect name change from BLM/AppPLUGIN to Bedrock/Application/Plugin
#

1;
