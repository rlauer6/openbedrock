#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package Apache::Request_cgi;

use SIS::Log;

sub log_error
{
    my $self = shift;
    unshift @_, MSG_ERROR;
    goto &LOG_MESSAGE;
}

sub warn
{
    my $self = shift;
    unshift @_, MSG_WARNING;
    goto &LOG_MESSAGE;
}

sub content_type
{
    'text/html';
}

sub filename
{
    $ENV{PATH_TRANSLATED};
}

sub finfo
{
    $ENV{PATH_TRANSLATED};
}

sub uri
{
    $ENV{PATH_INFO};
}

sub args
{
    my $self = shift;
    my $q = $ENV{'QUERY_STRING'};
    my @args;
    for (split('&', $q)) {
	my ($key, $value) = split '=';
	&Text::URLEncode::decode($value);
	push @args, $key, $value;
    }
    @args;
}

sub content
{
    my $self = shift;
    return unless defined($ENV{'CONTENT_LENGTH'});
    my $q;
    read(STDIN, $q, $ENV{'CONTENT_LENGTH'}) if $ENV{'CONTENT_LENGTH'} > 0;
    my @args;
    for (split('&', $q)) {
	my ($key, $value) = split '=';
	&Text::URLEncode::decode($value);
	push @args, $key, $value;
    }
    @args;
}

sub headers_in
{
    ();
}

sub cgi_header_out
{
    my $self = shift;
    my ($header, $value) = @_;
    $self->{'headers'} .= "$header: $value\r\n";
}

sub send_http_header
{
    my $self = shift;
    &LOG_MESSAGE( MSG_DEBUG, "Headers are\n$self->{'headers'}");
    print $self->{'headers'}, "\r\n";
}

sub close
{
    close STDOUT;
}

sub print
{
    my $self = shift;
    print @_;
}

sub new
{
    my $class = shift;
    bless {}, $class;
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.4  2001/02/14 15:35:43  sridhar
# Added copyright and GPL notice
#
# Revision 1.3  2001/01/09 20:11:34  sridhar
# Logging the headers just before they are sent out.
#
# Revision 1.2  2000/12/15 16:23:25  sridhar
# Method `headers_in()' returns an empty list to eliminate bogus warning
# in Header.
#
# Revision 1.1  2000/12/12 18:59:52  sridhar
# A module which mimicks the Apache request object for the CGI
# environment.
#
#

