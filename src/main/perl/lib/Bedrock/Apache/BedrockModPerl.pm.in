#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package Apache::BedrockModPerl;

use strict;
use warnings;

BEGIN {
  if ( $ENV{MOD_PERL} ) {
    require Apache2::compat;
  }
}

use Bedrock::Apache::Constants qw(:http);

use Bedrock;
use Bedrock::BedrockConfig;
use Bedrock::Handler;

use Data::Dumper;
use English qw(-no_match_vars);

use File::Basename;
use File::Temp;

use Time::HiRes qw(gettimeofday);

########################################################################
sub output {
########################################################################
  my ( $r, $content ) = @_;

  $r->send_http_header;

  return print $content;
}

########################################################################
sub get_loglevel {
########################################################################
  my ($r) = @_;

  if ( $ENV{MOD_PERL} ) {
    return $r->server->loglevel();
  }
  else {
    return $r->get_loglevel();
  }
}

# +------------------------------+
# | mod_perl HANDLER STARTS HERE |
# +------------------------------+

########################################################################
sub handler {
########################################################################
  my ($r) = @_;

  my ( $start_seconds, $start_microseconds );
  # start HiRes timer

  if ( get_loglevel($r) eq 'debug' ) {
    ( $start_seconds, $start_microseconds ) = gettimeofday();
  }

  my $bedrock_handler = eval { return Bedrock::Handler->new($r); };

  return $SERVER_ERROR
    if !$bedrock_handler || $EVAL_ERROR;

  # do something....

  my $config = $bedrock_handler->get_config;

  $config->{BEDROCK_IMAGE_URL} //= $config->{IMAGE_URL};

  $r->content_type('text/html');

  my $env = Dumper \%ENV;

  my $html = <<"END_OF_HTML";
<html>
  <body>
    <pre>$env</pre>
  </body>
</html>
END_OF_HTML

  output( $r, $html );

  return $OK;
}

1;

## no critic (RequirePodSections)

__END__

=pod

=head1 NAME

Apache::BedrockModPerl - template for creating mod_perl handlers

=head1 SYNOPSIS

 package Apache::BedrockMyApp

 use Bedrock::Apache::Constants qw(:http);

 use parent qw(Apache::BedrockModPerl);

 sub handler {
   my ($r) = @_;

   my $bedrock_handler = Bedrock::Handler->new($r);

   output($r, 'Hello World!');

   return $OK;
 1;

 <Directory /var/www/html/my-app/>
   AcceptPathInfo On
   Options -Indexes
   AllowOverride None

  <IfModule mod_perl.c>
    SetHandler perl-script 
    PerlHandler Apache::BedrockMyApp
  </IfModule>

=head1 DESCRIPTION

Template for creating mod_perl handlers that have access to Bedrock's
configuration and logging facility.

=head1 METHODS AND SUBROUTINES

=head1 handler

 handler($r)

Handler that you provide. You should at least return an HTTP status
code (like $OK).

=head1 output

 output($r, 'Hello World!');

Convenience routined that outputs the HTTP headers and finalized content.

=head1 get_log_level

=head1 AUTHOR

Rob Lauer - bigfoot@cpan.org

=head1 SEE ALSO

L<Bedrock::Apache::HandlerUtils>, L<Bedrock::Handler>

=cut
