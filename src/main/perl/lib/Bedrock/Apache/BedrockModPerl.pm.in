#!@PERL@ -w
#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package Apache::BedrockModPerl;

use strict;

use warnings;

BEGIN {
  require Apache2::compat if $ENV{MOD_PERL};
}

use Apache2::Const -compile =>
qw( HTTP_UNAUTHORIZED NOT_FOUND OK SERVER_ERROR FORBIDDEN DECLINED REDIRECT :log);
use Apache2::Log;
use APR::Const -compile => qw(:error SUCCESS);

#
# Define the following mod_perl constants since we could be using
# this module both as a mod_perl module and in a CGI
#
use constant NOT_FOUND    => Apache2::Const::NOT_FOUND;
use constant SERVER_ERROR => Apache2::Const::SERVER_ERROR;
use constant FORBIDDEN    => Apache2::Const::FORBIDDEN;
use constant OK           => Apache2::Const::OK;
use constant DECLINED     => Apache2::Const::DECLINED;
use constant REDIRECT     => Apache2::Const::REDIRECT;

use Bedrock;
use Bedrock::BedrockConfig;
use Bedrock::Handler;
use Bedrock::VERSION;

use Data::Dumper;
use File::Basename;
use File::Temp;
use Time::HiRes qw/gettimeofday/;

use bedrock_handler_common;

sub output {
  my ($r, $content) = @_;

  $r->send_http_header;

  print $content;
}

# +------------------------------+
# | mod_perl HANDLER STARTS HERE |
# +------------------------------+

sub handler {
  my $r = shift;

  # start HiRes timer
  my ($start_seconds, $start_microseconds) = gettimeofday()
    if get_loglevel( $r ) eq 'debug';

  my $bedrock_handler = init_bedrock_handler( $r );

  return OK
    unless $bedrock_handler;

  my $conf = $bedrock_handler->get_config;
  $conf->{BEDROCK_IMAGE_URL} = $conf->{IMAGE_URL} || $conf->{BEDROCK_IMAGE_URL};
    
  $r->content_type('text/html');

  $r && $r->log->debug(
		       sprintf( "[%s]: test: [%s]",
				(caller(0))[3],
				$ENV{SCRIPT_NAME} )
		      );

  my $uri = $r->uri;

  my $env = Dumper \%ENV;

  my $html =<<eot;
<html>
<body>
<pre>
$env
</pre>
</body>
</html>
eot

  if ( $html ) {
    output( $r, $html );

    return OK;
  }
  else {
    return SERVER_ERROR;
  }
}


1;

# $Log$
