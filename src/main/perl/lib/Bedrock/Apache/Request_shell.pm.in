#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package Apache::Request_shell;

use File::Basename;
use Getopt::Long;

sub log_error
{
    my $self = shift;
    die "@_";
}

sub warn
{
    my $self = shift;
    warn "@_";
}

sub content_type
{
    'text/html';
}

sub filename
{
    my $self = shift;
    $self->{'input'};
}

sub finfo
{
    my $self = shift;
    $self->{'input'};
}

sub uri
{
    my $self = shift;
    $self->{'input'};
}

sub args
{
    my $self = shift;
    @{$self->{'argv'}};
}

sub content
{
    ();
}

sub headers_in
{
    ();
}

sub cgi_header_out
{
}

sub send_http_header
{
}

sub close
{
}

sub print
{
    my $self = shift;
    print @_;
}

sub usage
{
    my $self = shift;
    my $prog = basename($0);
    die "Usage: $prog [options] <File> [ {varname value} ..]
OPTIONS
  --config <ConfigDir>
      Look for configuration file(s) in <ConfigDir>.
      (default: $self->{'options'}->{'config'})
";
}

sub new
{
    my $class = shift;
    my $self = bless {}, $class;

    $self->{'options'} = {'config'	=> '/usr/local/bedrock/config'};
    my $result = GetOptions ($self->{'options'},
			     'config=s',
			     'help');
    $self->usage if $self->{'options'}->{'help'} or not $result;

    # Export config path into environment
    $ENV{'CONFIG_PATH'} = $self->{'options'}->{'config'};
    $ENV{'DOCUMENT_ROOT'} = $self->{'options'}->{'config'};

    # Handling input
    $self->{'input'} = shift @ARGV;
    die "Input file not specified.\n" unless $self->{'input'};
    die "Unable to open input file `$self->{'input'}'\n" unless -f $self->{'input'};

    $self->{'argv'} = \@ARGV;
    $self;
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2001/01/18 18:37:29  sridhar
# Initial version of Apache::Request_shell, a module which mimicks the
# Apache request object for the shell environment.
#
#
