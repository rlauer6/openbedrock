package Bedrock::Apache::Constants;

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Copyright (C) 2024, TBC Development Group, LLC.
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

our $VERSION = '@PACKAGE_VERSION@';

use parent qw(Exporter);

use Apache2::Log;

use Apache2::Const -compile => qw(
  DECLINED
  FORBIDDEN
  HTTP_BAD_REQUEST
  HTTP_NOT_MODIFIED
  HTTP_OK
  HTTP_UNAUTHORIZED
  HTTP_UNSUPPORTED_MEDIA_TYPE
  HTTP_PARTIAL_CONTENT
  NOT_FOUND
  OK
  REDIRECT
  SERVER_ERROR
  :log
);

use Readonly;

Readonly::Hash our %APACHE_LOG_LEVELS => (
  DEBUG => Apache2::Const::LOG_DEBUG,
  INFO  => Apache2::Const::LOG_INFO,
  ERROR => Apache2::Const::LOG_ERR,
  WARN  => Apache2::Const::LOG_WARNING,
);

Readonly our $HTTP_UNSUPPORTED_MEDIA_TYPE => Apache2::Const::HTTP_UNSUPPORTED_MEDIA_TYPE;
Readonly our $HTTP_BAD_REQUEST            => Apache2::Const::HTTP_BAD_REQUEST;
Readonly our $HTTP_UNAUTHORIZED           => Apache2::Const::HTTP_UNAUTHORIZED;
Readonly our $HTTP_NOT_MODIFIED           => Apache2::Const::HTTP_NOT_MODIFIED;
Readonly our $HTTP_PARTIAL_CONTENT        => Apache2::Const::HTTP_PARTIAL_CONTENT;
Readonly our $HTTP_OK                     => Apache2::Const::HTTP_OK;
Readonly our $NOT_FOUND                   => Apache2::Const::NOT_FOUND;
Readonly our $OK                          => Apache2::Const::OK;
Readonly our $SERVER_ERROR                => Apache2::Const::SERVER_ERROR;
Readonly our $NOT_MODIFIED                => Apache2::Const::HTTP_NOT_MODIFIED;
Readonly our $FORBIDDEN                   => Apache2::Const::FORBIDDEN;
Readonly our $DECLINED                    => Apache2::Const::DECLINED;
Readonly our $REDIRECT                    => Apache2::Const::REDIRECT;

Readonly our $UNSUPPORTED => Apache2::Const::HTTP_UNSUPPORTED_MEDIA_TYPE;

our @EXPORT_OK = qw(
  $DECLINED
  $FORBIDDEN
  $HTTP_BAD_REQUEST
  $HTTP_OK
  $HTTP_NOT_MODIFIED
  $HTTP_UNAUTHORIZED
  $HTTP_PARTIAL_CONTENT
  $HTTP_UNSUPPORTED_MEDIA_TYPE
  $NOT_FOUND
  $NOT_MODIFIED
  $OK
  $REDIRECT
  $SERVER_ERROR
  $UNSUPPORTED
  %APACHE_LOG_LEVELS
);

our %EXPORT_TAGS = (
  'log_levels' => [
    qw(%APACHE_LOG_LEVELS)

  ],
  'http' => [
    qw(
      $DECLINED
      $FORBIDDEN
      $HTTP_BAD_REQUEST
      $HTTP_OK
      $HTTP_NOT_MODIFIED
      $HTTP_UNAUTHORIZED
      $HTTP_UNSUPPORTED_MEDIA_TYPE
      $HTTP_PARTIAL_CONTENT
      $NOT_FOUND
      $NOT_MODIFIED
      $OK
      $REDIRECT
      $SERVER_ERROR
      $UNSUPPORTED
    )
  ],

);

foreach my $k ( keys %EXPORT_TAGS ) {
  push @EXPORT_OK, @{ $EXPORT_TAGS{$k} };
}

$EXPORT_TAGS{'all'} = [@EXPORT_OK];

1;

__END__
