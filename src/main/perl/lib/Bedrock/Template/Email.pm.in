package Bedrock::Template::Email;

use strict;
use warnings;

use parent qw/Bedrock::Template/;
  
use MIME::Lite;

=pod

=head2 email_message

 email_message( message, options) 

Send an HTML/Bedrock template message.

=over 5

=item message

=item options

=over 5

=item * email | to

Email address of recipient. Defaults to: C<support@treasurersbriefcase.com>

=item * from

Email sender. Defaults to: C<do-not-reply@treasurersbriefcase.com>

=item * cc

CC list

=item * template

Name of a template to read instead of using the C<message> parameter.

=item * subject

Message subject

=item * parms

Hash ref of template parameters.

=back

=back

=cut

sub email_message {
  my $self = shift;
  
  my $message = shift;
  my %options = @_;

  my $to = $options{email} || $options{to};

  unless ( $to ) {
    die "no recipients\n";
  }

  unless ( $options{from} ) {
    die "no from address\n";
  }

  unless ( $options{subject} ) {
    die "no subject\n";
  }

  my $mime_type = $options{mime_type} || 'text/html';
  my $smtp_host = $options{smtp_host} || 'localhost';
			  
  if ( $options{template} ) {
    open MESSAGE, "<" . $options{template}
      or die "could not open email template: [" . $options{template} . "]";
    {
      local $/;
      $message = <MESSAGE>;
    }
    
    close MESSAGE;
  }

   my $msg = MIME::Lite->new(
                             From     => $options{from},
                             Cc       => $options{cc},
                             $options{bcc} ? (Bcc => $options{bcc}) : (),
                             To       => $to,
                             Subject  => $options{subject},
                             Type     => $mime_type,
                             Data     => $self->parse($message, %{$options{parms}})
                            );
  
  $msg->send( 'smtp', $smtp_host);
}

1;
