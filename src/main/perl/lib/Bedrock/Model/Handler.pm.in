package Bedrock::Model::Handler;
#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

use parent qw(BLM::IndexedTableHandler);

# --------------------------------------------------------------------
# NOTE:
#
# The two modules below are not directly used in this module. They
# should however, be included so that other modules that subclass this
# module in order to create and manage tables from Bedrock::Model do
# not need to include them.
# --------------------------------------------------------------------
use Bedrock::Hash;
use Bedrock::Model::Field;
# --------------------------------------------------------------------

use List::Util qw(pairs);

use Role::Tiny::With;
with 'Bedrock::Model::Role';

########################################################################
sub new {
########################################################################
  my ( $class, @args ) = @_;

  $class = ref($class) || $class;

  my $model = $class->_model_def;

  die "class must define a model definition\n"
    if !$model;

  return $class->SUPER::new(@args);
}

########################################################################
sub _set {
########################################################################
  my ( $self, @args ) = @_;

  my $model = $self->_model_def;

  foreach my $p ( pairs @args ) {
    my ( $f, $v ) = @{$p};

    if ( exists $model->{$f}->{set} ) {
      $self->{$f} = $model->{$f}->{set}->( $f, $v );
    }
    else {
      $self->SUPER::_set( $f, $v );
    }
  }

  return;
}

########################################################################
sub _get {
########################################################################
  my ( $self, $f ) = @_;

  my $v = $self->{$f};

  my $model = $self->_model_def;

  if ( exists $model->{$f}->{get} ) {
    return $model->{$f}->{get}->( $f, $v );
  }
  else {
    return $self->SUPER::_get($f);
  }
}

1;

## no critic (RequirePodSection)

__END__

=pod

=head1 NAME

Bedrock::Model::Handler

=head1 SYNOPSIS

 package MyApp::Some_Table;

 use parent qw/Bedrock::Model::Handler/;

 our $MODEL = new Bedrock::Hash(
    id => new Bedrock::Model::Field(
           { 
            field => 'id',
            type  => 'int',
            extra => 'auto_increment',
            key  => 'pri'
           },
    foo => new Bedrock::Model::Field(
           { 
            field => 'foo',
            type  => 'varchar(32)',
            null  => 'no',
            default => 'bar'
           }
  );

 1;

 MyApp::Some_Table->_create_model($dbi);

 my $some_table = new MyApp::Some_Table($dbi);
 my $id = $some_table->save();
 my $new_record = $some_table->new($dbi, $id);

=head1 DESCRIPTION

Implements an ORM based on C<BLM::IndexedTableHandler> for MySQL
tables.  Extends C<BLM::IndexedTableHandler> to encapsulate the table
definition and maintain consistency between the class that I<handles>
table operations and the database (via migrations).

This class is designed to be the parent class for your table classes.

See C<BLM::IndexedTableHandler> for details regarding the capabilities
of the ORM.

See C<Bedrock::Model> for details on how to create tables and
migrations.

=head1 METHODS AND SUBROUTINES

=head2 new

=head1 AUTHOR

Rob Lauer - <rlauer6@comcast.net>

=head1 SEE OTHER

L<BLM::IndexedTableHandler>, L<Bedrock::Model>, L<Bedrock::Model::Field>

=cut
