#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::Func;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION    = do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
    @ISA	= qw (Exporter);
}

use TagX::Log 1.01;

my $Verbose;

sub new
{
    my $class = shift;
    my $self = bless [], $class;
    @{$self} = @_;
    $self;
}

sub verbose
{
    my $self = shift;
    if ( @_ ) {
	$Verbose = shift;
    }
    $Verbose;
}

sub eval
{
    my $self = shift;
    &log_message( undef, "$self: begin eval with @{[scalar(@{$self})]} items: (@{$self})" )
	if $Verbose;

    my ($var, $func) = @{$self}[0,1];
    my $value = $var->eval( @_ );
    my $ref = ref( $value );
    if ( $ref eq 'HASH' ) {
	&log_message( undef, "$self: unsupported function ($func)" );
    } elsif ( $ref eq 'ARRAY' ) {
	&log_message( undef, "$self: unsupported function ($func)" );
    } else {
	my $funcref = $value->can( $func );
	&log_message( undef, "$self: unsupported function ($func)" )
	    unless $funcref;
	my @args = @{$self};
	shift @args; shift @args;
	for (@args) {
	    $_ = $_->eval( @_ );
	}
	return $funcref->(@args);
    }
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2000/06/01 18:38:10  sridhar
# Adding support for invocation of object methods.
#
# Revision 1.7  2000/05/31 14:31:52  sridhar
# Yuck! compilation error for not declaring @ISA
#
# Revision 1.6  2000/05/31 14:26:23  sridhar
# Rigorous version numbering and usage
#
# Revision 1.5  2000/05/31 13:37:06  sridhar
# 1. Removed `--verbose' option to expressions
# 2. Added a `verbose' method which is invoked with an on or off flag
# when the expression is being finalized
# 3. More verbose message logging
#
# Revision 1.4  2000/05/25 18:30:21  sridhar
# Support for concatenation of strings.
#
# Revision 1.3  2000/05/18 13:47:18  sridhar
# 1. Added possibility of debugging with --verbose option to
# expressions.
# 2. More logging to go with it.
#
# Revision 1.2  2000/05/02 12:48:33  sridhar
# Fixed invocation of Expr->new().
#
# Revision 1.1  2000/04/13 15:12:25  sridhar
# Adding TagX::Expr -- class for processing expressions
#
#
