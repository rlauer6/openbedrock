#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::Term::Var;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION    = do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
    @ISA	= qw (Exporter);
}

use TagX::Term 1.06;

@ISA = qw (TagX::Term);

sub eval
{
    my $self = shift;
    $self->resolve_var ( $$self, @_ );
}

sub exists
{
    my $self = shift;
    $self->var_exists( $$self, @_ );
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.3  2000/11/16 19:21:50  sridhar
# Have a method `exists' for checking whether a variable exists.
#
# Revision 1.2  2000/05/31 14:23:14  sridhar
# Rigorous version numbering and usage
#
# Revision 1.1  2000/04/13 15:14:44  sridhar
# Adding TagX::Term::Var -- class to handle variable parts of an
# expression.
#
#
