#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::TAG::NoBody::SQLConnect;

use strict;

BEGIN
{
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use Getopt::Long;
use DBI;

use TagX::TAG::NoBody;

@ISA = qw (TagX::TAG::NoBody);

sub finalize
{
    my ($self, $tx, @context) = @_;

    local (@ARGV) = @{$self->{'argv'}};
    my %valid = ('AutoCommit'	=> 1,
		 'PrintError'	=> 1,
		 'RaiseError'	=> 0,
		 'ChopBlanks'	=> 0);
    &GetOptions(\%valid,
		'verbose',
		'dbname=s',
		'data-source=s',
		'AutoCommit=i',
		'PrintError=i',
		'RaiseError=i',
		'ChopBlanks=i',
		'username=s',
		'password=s');

    my $verbose = delete $valid{'verbose'};

    if ( $verbose ) {
	my ($key, $value);
	my $str = "$self: Options are\n";
	while (($key, $value) = each %valid) {
	    $str .= "\t$key .. ($value)\n";
	}
	$tx->log_message( MSG_DEBUG => $str );
    }

    my $dbh = DBI->connect ( @valid{qw (data-source username password)},
			     {'AutoCommit' => $valid{'AutoCommit'},
			      'PrintError' => $valid{'PrintError'},
			      'RaiseError' => $valid{'RaiseError'},
			      'ChopBlanks' => $valid{'ChopBlanks'}} );

    $tx->log_message ( MSG_DEBUG => "$self: Connected to database, handle = <$dbh>")
	if $verbose;

    $tx->{'DB'} = {} unless exists $tx->{'DB'};
    my $name = $valid{'dbname'} || '_anonymous_';
    if ( exists $tx->{'DB'}->{$name} ) {
	$tx->log_message ( MSG_DEBUG => "Disconnecting previous DB connection named ($name)")
	    if $verbose;
	$tx->{'DB'}->{$name}->disconnect;
    }
    $tx->{'DB'}->{$name} = $dbh;
}

#
# Name of Release: $Name$
# $Log$
# Revision 1.3  2000/03/06 18:32:00  sridhar
# Replaced all ad-hoc message logging with message logging only on demand
# -- via --verbose flag specified as a tag option
#
# Revision 1.2  2000/02/08 15:37:45  sridhar
# Added support for being able to use Exporter version numbers
#
# Revision 1.1  2000/02/08 15:25:00  sridhar
# Added TagX
#
#

1;
