#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::TAG::WithBody::Hush;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION    = do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::TAG::WithBody;

@ISA = qw (TagX::TAG::WithBody);

sub finalize
{
    my ($self, $tx, @context) = @_;

    my %options = ();
    my @argv = $self->parse_options (\%options, @context);
    my $verbose = $self->verbose;
    if ( $verbose ) {
	my ($key, $value);
	my $str = "$self: Options are\n";
	while (($key, $value) = each %options) {
	    $str .= "\t$key .. ($value)\n";
	}
	$str .= "Arguments ..(@argv)";
	&log_message( $self, $str );
    }

    # Create a frame for output. Note very carefully that we assign the frame
    # to a lexical variable. Hence the destructor for the frame is not invoked
    # When the lexical variable goes out of scope, the frame is destructed,
    # and since we didn't invoke $frame->end_frame, the contents of the frame
    # are discarded.
    my $frame = $tx->out_handle->create_frame;
    &log_message( $self, "Entering <HUSH> block .." ) if $verbose;
    $self->SUPER::finalize ( $tx, @context );
    &log_message( $self, "Exited <HUSH> block .. discarding output" ) if $verbose;

    # at this point, since we didn't end the frame, the contents should be
    # discarded as soon as we leave here.
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2000/10/18 18:15:14  sridhar
# Adding Hush, the mother of all those that are dumb.
#
#
