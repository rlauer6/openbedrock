#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package TagX::TAG::WithBody::Sink;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION    = do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::TAG::WithBody;

@ISA = qw (TagX::TAG::WithBody);

sub closure
{
    '/sink';
}

sub finalize
{
    my ($self, $tx, @context) = @_;

    my %options = ('define-var=s' => undef,
		   'htmlencode'	=> undef,
		   'htmldecode'	=> undef);
    my @argv = $self->parse_options (\%options, @context);
    my $verbose = $self->verbose;
    if ( $verbose ) {
	my ($key, $value);
	my $str = "$self: Options are\n";
	while (($key, $value) = each %options) {
	    $str .= "\t$key .. ($value)\n";
	}
	$str .= "Arguments ..(@argv)";
	&log_message( $self, $str );
    }

    die "Use only one of --HTMLEncode or --HTMLDecode here.\n"
	if $options{'htmlencode'} and $options{'htmldecode'};

    # Create a frame for output. Note very carefully that we assign the frame
    # to a lexical variable. Hence the destructor for the frame is not invoked
    # When the lexical variable goes out of scope, the frame is destructed,
    # and since we didn't invoke $frame->end_frame, the contents of the frame
    # are discarded.
    my $frame = $tx->out_handle->create_frame;
    &log_message( $self, "Entering <SINK> block .." ) if $verbose;
    $self->SUPER::finalize ( $tx, @context );
    &log_message( $self, "Exited <SINK> block" ) if $verbose;

    my $data = $tx->out_handle->frame_data;
    if ( $options{'htmlencode'} ) {
	$data =~ s/\x26/\&amp;/g;
	$data =~ s/\x3c/\&lt;/g;
	$data =~ s/\x3e/\&gt;/g;
	&log_message ( $self, "HTMLEncoded to <$data>" ) if $verbose > 1;
    } elsif ( $options{'htmldecode'} ) {
	$data =~ s/\x26amp;/\x26/g;
	$data =~ s/\x26lt;/\x3c/g;
	$data =~ s/\x26gt;/\x3e/g;
	&log_message ( $self, "HTMLDecoded to <$data>" ) if $verbose > 1;
    }

    if ( exists $options{'define-var'} ) {
	&log_message( $self, "Assigning contents of <SINK> to $options{'define-var'}" ) if $verbose;
	$tx->param( $options{'define-var'} => $data );
    }

    # Expect a single argument which should be a handle to which we print
    # the frame contents to
    if ( @argv == 1 ) {
	my $fd = shift @argv;
	print $fd $data;
	close($fd);
    }

    # at this point, since we didn't end the frame, the contents should be
    # discarded as soon as we leave here.
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.6  2008/02/28 18:14:43  rlauer
# Applying Rob's patches to make Bedrock work on Apache 2.x
# (plus a few other obvious bug fixes).
#
# Revision 1.5  2002/02/13 17:56:56  sridhar
# File handle arg is not closed.
#
# Revision 1.4  2001/02/14 15:35:50  sridhar
# Added copyright and GPL notice
#
# Revision 1.3  2000/12/15 14:30:20  sridhar
# Subclass overrides method `closure()' to report the correct way for
# closing the tag.
#
# Revision 1.2  2000/11/21 19:18:05  sridhar
# 1. Added --define-var option to <sink> for defining a variable with the
# contents if <sink></sink>.
# 2. Added --HTMLEncode and --HTMLDecode options to encoding and
# decoding the contents of <sink></sink>
#
# Revision 1.1  2000/10/19 20:57:18  sridhar
# Moved Hush.pm to Sink.pm and added capability for passing an argument
# to <sink> tag which should be a handle to which the output of the body
# of <sink> can be written
#
#
