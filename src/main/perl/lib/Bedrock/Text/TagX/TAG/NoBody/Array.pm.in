#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#) $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package TagX::TAG::NoBody::Array;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA @INC);
    $VERSION    = 1.01;
    @ISA	= qw (Exporter);
}

use TagX::Log 1.01;
use TagX::TAG::NoBody 1.03;
use Symbol;
use SIS::Array;

@ISA = qw (TagX::TAG::NoBody);

sub finalize
{
    my ($self, $tx, @context) = @_;

    my %options = ('ordered' => undef
		   );

    my @argv = $self->parse_options (\%options, @context);
    my $verbose = $self->verbose;

    if ( $verbose ) {
	my ($key, $value);
	my $str = "$self: Options are\n";
	while (($key, $value) = each %options) {
	    $str .= "\t$key .. ($value)\n";
	}
	&log_message( $self, "$str\n" );
    }

   
    my $name = shift @argv;
    $name =~s/^:+(.*?)$/$1/;

    my $obj =SIS::Array->new(@argv);

    $tx->{'VARS'}->{$name} = $obj;

    return $obj;
}


=head1 TAG array

=head1 PURPOSE

Create a Bedrock Array.

=head1 SYNTAX

 <array:[array name] list>

=back

=head1 EXAMPLE

=cut

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2009/12/15 13:10:21  rlauer
# first check-in
#
# $Revision $

1;
