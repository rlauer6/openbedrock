#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package TagX::TAG::WithBody::PebbleDef;

use strict;
use warnings;

use parent qw{Exporter};

use TagX::TAG::WithBody;
use Data::Dumper;

use parent qw{Exporter TagX::TAG::WithBody};

use Role::Tiny::With;
with 'Bedrock::Logger';

sub closure {
  return '/pebbledef';
}

sub define_options {
  return ( 'define-pebble=s' => undef );

}

sub finalize {
  my ( $self, $tx, @context ) = @_;

  my %options = $self->define_options;

  my @argv = $self->parse_options( \%options, @context );

  $self->dump_options( \%options, @argv );

  my $tag_opts = $self->parse_tag_name( $argv[0] );

  if ( $tag_opts->{name} ) {
    shift @argv;
    $options{'define-pebble'} = $tag_opts->{name};
  }

  my $pebble = $self->{subobjs}->[0];
  $pebble =~ s/^\n//;
  $tx->define_pebble( $options{'define-pebble'} => $pebble );

  return;
}

1;

=pod

=head1 TAG - C<E<lt>pebble-defE<gt>>

=head1 PURPOSE

Defines a pebble that is available in the current page only.

=head1 SYNTAX

 <pebbledef[:name] [options]>
 ...
 </pebbledef>

=head1 DESCRIPTION

Pebbles can be created by placing the Bedrock statements to process
with the body of the E<lt>pebbledefE<gt>E<lt>/pebbledefE<gt> tag.

See the documentation for E<lt>pebbleE<gt> for more details.

=head1 OPTIONS

 --define-pebble = "var-name"

=over 5

=item --define-pebble

Name of the pebble.

=back

=head1 EXAMPLES

 <pebbledef:ul-list>
 <ul><foreach $ARGV>
   <li><var $_></li></foreach>
 </ul>
 </pebbledef>

=head1 SEE OTHER

C<E<lt>pebbleE<gt>>

=cut

# Revision 1.3  2012/04/13 21:20:07  eutl420
# - added pod
#
# Revision 1.2  2011/09/15 16:05:33  eutl420
# - perl tidy
#
# Revision 1.1  2011/09/14 18:44:55  eutl420
# - first check-in
#
