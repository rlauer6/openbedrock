#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::TAG::WithBody::Foreach;

use strict;

BEGIN
{
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use Getopt::Long;

use TagX::TAG::WithBody;

@ISA = qw (TagX::TAG::WithBody);

sub finalize
{
    my ($self, $tx, @context) = @_;

    local (@ARGV) = @{$self->{'argv'}};
    my %valid;
    &GetOptions(\%valid,
		'name=s',
		'define-index=s',
		'start-index=i',
		'end-index=i',
		'max-items=i',);
    return unless exists $valid{'name'};
    my $data = $self->resolve_name ( $valid{'name'}, @context );
    return unless $data and ref( $data ) eq 'ARRAY';

    my @children = @{$self->{'subobjs'}};
    my $nItems = scalar( @{$data} );

    my $start = 0;
    if ( exists $valid{'start-index'} ) {
	$start = $valid{'start-index'};
	$start = 0 if $start < 0;
    }

    my $end = $nItems - 1;
    if ( exists $valid{'end-index'} ) {
	$end = $valid{'end-index'};
	$end = $nItems - 1 if $end >= $nItems;
    }

    if ( exists $valid{'max-items'} ) {
	$end = $start + $valid{'max-items'} - 1;
	$end = $nItems - 1 if $end >= $nItems;
    }

    my $define_index = $valid{'define-index'} if exists $valid{'define-index'};
    for (my $i = $start ; $i <= $end ; $i++ ) {
	my $loop_data = $data->[$i];

	if ( defined( $define_index ) ) {
	    my %hash = %{$loop_data};
	    $hash{$define_index} = $i;
	    $loop_data = \%hash;
	}

	for my $child (@children) {
	    next unless $child;
	    if ( ref ($child) ) {
		$child->finalize ( $tx, $loop_data, @context );
	    } else {
		$tx->{'output'}->print( $child );
	    }
	}
    }
}

#
# Name of Release: $Name$
# $Log$
# Revision 1.2  2000/02/08 15:37:45  sridhar
# Added support for being able to use Exporter version numbers
#
# Revision 1.1  2000/02/08 15:25:01  sridhar
# Added TagX
#
#

1;
