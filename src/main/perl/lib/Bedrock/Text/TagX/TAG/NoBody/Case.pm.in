#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package TagX::TAG::NoBody::Case;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION    = 1.00;
}

use Data::Dumper;

use TagX::Log 1.01;
use TagX::TAG::NoBody 1.03;

@ISA = qw (TagX::TAG::NoBody);

sub finalize
{
    my ($self, $tx, @context) = @_;

    my %options = ();
    my @argv = $self->parse_options (\%options, @context);

    my $verbose = $self->verbose;
    if ( $verbose ) {
	my ($key, $value);
	my $str = "Options are\n";
	while (($key, $value) = each %options) {
	    $str .= "\t$key .. ($value)\n";
	}
	$str .= "Arguments ..(@argv)";
	&log_message( $self, $str );
    }


    $argv[0] =~/^:([^:]*):?(.*?)$/;
    &log_message($self, sprintf("ARGV[0] => [%s], 1 =>  [%s], 2 => [%s]", $argv[0], $1, $2));

    if ($1) {
      $argv[0] = $tx->{'VARS'}->{$1};
     }

    my $value = shift @argv;

    &log_message($self, Dumper($value, @argv));

    # <case:foo this>            => return this if foo
    # <case:foo this that>       => return that if foo eq this, else return ''
    # <case:foo this that $foo>  => return that if foo eq this, else $foo

    if (@argv == 1) {
      $value = $argv[0] if $value;
    }
    else {
      my %decode_values = @argv;
      my $default_value = (@argv % 2)  ? pop @argv : '';
      $value = exists $decode_values{$value} ? $decode_values{$value} : $default_value;
    }

    $tx->out_handle->print($value);
}

1;

=head1 TAG case

=head1 PURPOSE


=head1 SYNTAX


=head1 OPTIONS

=cut

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2009/12/28 13:04:35  rlauer
# src/main/perl/lib/Bedrock/Text/TagX/TAG/NoBody/Case.pm
#
