#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::TAG::WithBody;

use strict;

BEGIN
{
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::TAG;

@ISA = qw (TagX::TAG);

sub finalize_children
{
    my $self = shift;
    return unless @{$self->{'subobjs'}} > 0;
    my $tx = @_ > 0 ? shift : $self->{'TagX'};
    my @context = @_ > 0 ? @_ : ($tx->{'VARS'});
    while (my $child = shift @{$self->{'subobjs'}}) {
	next unless $child;
	if ( ref ($child) ) {
	    $child->finalize ( $tx, @context );
	} else {
	    $tx->{'output'}->print( $child );
	}
    } continue {
	$self->{'nobjs'}--;
    }
}

sub options
{
    my $self = shift;
    $self->SUPER::options ( @_ );
    $self;
}

sub new_child
{
    my $self = shift;
    my $child = shift;
    push @{$self->{'subobjs'}}, $child;
    $self->{'nobjs'}++;
    $child->parent ($self);
    $child;
}

sub end_child
{
    my $self = shift;
    my $parent = $self->{'parent'};
    return $parent if $parent;
    $self->finalize ( $self, $self->{'VARS'} );
    $self;
}

sub text
{
    my $self = shift;
    my $text = shift;
    return unless defined( $text );

    if ( $self->parent ) {
	my $aref = $self->{'subobjs'};
	my $last = $self->{'nobjs'} - 1;
	if ( $last < 0 ) {
	    $self->{'nobjs'}++;
	    push @$aref, $text;
	    return;
	}
	if ( ref ($aref->[$last]) ) {
	    $self->{'nobjs'}++;
	    push @$aref, $text;
	} else {
	    $aref->[$last] .= $text;
	}
	return;
    } else {
	$self->finalize_children;
	$self->{'TagX'}->{'output'}->print( $text );
    }
}

sub finalize
{
    my $self = shift;
    $self->finalize_children ( @_ );
}

#
# Name of Release: $Name$
# $Log$
# Revision 1.2  2000/02/08 15:37:44  sridhar
# Added support for being able to use Exporter version numbers
#
# Revision 1.1  2000/02/08 15:24:58  sridhar
# Added TagX
#
#

1;
