#!/usr/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package TagX::TAG::NoBody::Raise;

use strict;

BEGIN
{
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::TAG::NoBody;

@ISA = qw (TagX::TAG::NoBody);

sub finalize
{
    my ($self, $tx, @context) = @_;

    my %options;
    my @argv = $self->parse_options (\%options, @context);
    my $verbose = $self->verbose;

    if ( $verbose ) {
	my ($key, $value);
	my $str = "$self: Options are\n";
	while (($key, $value) = each %options) {
	    $str .= "\t$key .. ($value)\n";
	}
	$str .= "$self: Arguments are\n@argv";
	$tx->log_message( MSG_DEBUG => $str );
    }

    die "@argv\n";
}

#
# Name of Release: $Name$
# $Log$
# Revision 1.2  2000/04/13 15:20:36  sridhar
# Using new parse_options method with support for expressions
#
# Revision 1.1  2000/03/09 14:17:44  sridhar
# Added new class Raise.pm for handling <raise>, which is a way of
# raising program exceptions.
#
#

1;
