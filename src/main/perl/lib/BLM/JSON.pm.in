package BLM::JSON;

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2024, TBC Development Group, LLC
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

use parent qw(BLM::Plugin);

# <plugin:JSON [--pretty] [--encode] [--decode] value>

########################################################################
sub init_plugin {
########################################################################
  my ( $self, @args ) = @_;

  $self->custom_options(qw(decode encode pretty));

  $self->SUPER::init_plugin(@args);

  my ($value) = $self->argv;

  return $self->decode($value)
    if $self->options('decode');

  return $self->encode($value)
    if $self->options('encode');

  return 1;
}

########################################################################
sub pretty {
########################################################################
  my ( $self, $pretty ) = @_;

  return $self->options->{pretty} = $pretty // 0;
}

########################################################################
sub decode {
########################################################################
  my ( $self, $value ) = @_;

  return JSON->new->decode($value);
}

########################################################################
sub encode {
########################################################################
  my ( $self, $value ) = @_;

  my $pretty = $self->options('pretty') ? 1 : 0;

  return JSON->new->pretty($pretty)->allow_blessed->convert_blessed->encode($value);
}

1;

__END__

=pod

=head1 PUBLIC

BLM::JSON - a simple JSON serializer based on L<JSON>

=head1 SYNOPSIS

 <plugin:JSON --define-var="foo" --pretty --encode $boo>

 <null:boo $JSON.encode($foo)>

 <var $JSON.decode($boo)>

=head1 DESCRIPTION

Plugin for encoding and decoding JSON strings.

=head1 METHODS AND SUBROUTINES

=head1 decode

=head1 encode

=head1 pretty

=head1 SEE ALSO

L<BLM::Plugin>, L<JSON>

=head1 AUTHOR

BIGFOOT - <bigfoot@cpan.org>

=cut
