package BLM::Stat;

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2024, TBC Development Group, LLC
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

use Bedrock::Constants qw(:booleans);
use English            qw(-no_match_vars);

use parent qw( BLM::Plugin );

__PACKAGE__->follow_best_practice;
__PACKAGE__->mk_accessors(qw(attrs));

########################################################################
sub new {
########################################################################
  my ( $class, $file ) = @_;

  my $self = $class->SUPER::new;

  my @attributes = qw( dev ino mode nlink uid gid rdev size atime mtime ctime blksize blocks);

  $self->mk_accessors( @attributes, qw(file attrs) );

  $self->set_file($file);

  $self->set_attrs( \@attributes );

  return $self;
}

########################################################################
sub stat {  ## no critic (ProhibitBuiltinHomonyms)
########################################################################
  my ( $self, $file ) = @_;

  $file //= $self->get_file;

  my @file_stat = CORE::stat $file;

  my $i = 0;

  foreach ( @{ $self->get_attrs } ) {
    $self->set( $_, $file_stat[ $i++ ] );
  }

  return \@file_stat;
}

########################################################################
sub mk_accessors {
########################################################################
  my ( $self, @args ) = @_;

  if ( ref $args[0] ) {
    my $options = $args[0];

    foreach ( keys %{$options} ) {
      $self->SUPER::mk_accessors($_);
      $self->set( $_, $options->{$_} );
    }
  }
  else {
    $self->SUPER::mk_accessors(@args);
  }

  return;
}

########################################################################
sub export {
########################################################################
  my ($self) = @_;

  return $TRUE
    if $self->options('no-export');

  for my $var ( grep { $_ !~ /file|attrs/xsm } @{ $self->get_attrs } ) {
    $self->SUPER::export( $var, $self->get($var) );
  }

  return $TRUE;
}

########################################################################
sub init_plugin {
########################################################################
  my ( $self, @args ) = @_;

  $self->custom_options('no-export');

  $self->SUPER::init_plugin(@args);

  if ( $self->get_file ) {
    $self->stat;
  }

  return $self->export;
}

1;

## no critic (RequirePodSections)

__END__


=pod

=head1 PUBLIC

BLM::Stat - Return info about a file.

=head1 SYNOPSIS

 <plugin:Stat $file>

 <var $Stat.size>
 <var $size>

 <null:file_stats $Stat.stat($file)>

=head1 DESCRIPTION

Returns a 13 element hash of file information. See C<perldoc -f stat>.

Also exports the property names below as scalars. You can access the
values in the page as shown below:

 <var $size>
 <var $Stat.size>

=head1 PROPERTIES

=over 5

=item * dev      

device number of filesystem

=item * ino

inode number

=item * mode

file mode  (type and permissions)

=item * nlink

number of (hard) links to the file

=item * uid

numeric user ID of file's owner

=item * gid

numeric group ID of file's owner

=item * rdev

the device identifier (special files only)

=item * size

total size of file, in bytes

=item * atime

last access time in seconds since the epoch

=item * mtime

last modify time in seconds since the epoch

=item * ctime

inode change time in seconds since the epoch (*)

=item * blksize  

preferred block size for file system I/O

=item * blocks

actual number of blocks allocated

=back

=head1 METHODS AND SUBROUTINES

=head1 stat

 stat(file)

Returns the 13 element array described above. Also exports all
elements as scalars unless the C<--no-export> is enabled.

=head1 AUTHOR

J. Sridhar

BIGFOOT - <bigfoot@cpan.org>

=cut
