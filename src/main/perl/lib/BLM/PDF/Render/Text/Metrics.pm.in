# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package BLM::PDF::Render::Text::Metrics;

# This package needs to be installed 'proper', for now use dirty deed personal installation
use BLM::PDF::Log;
use BLM::PDF::Font::AFM;
use strict;

my %afm_mapping =
(
   'Courier'			=> 'com_____',
   'Courier-Bold'		=> 'cob_____',
   'Courier-Oblique'		=> 'coo_____',
   'Courier-BoldOblique'	=> 'cobo____',
   'Helvetica'			=> 'hv______',
   'Helvetica-Bold'		=> 'hvb_____',
   'Helvetica-Oblique'		=> 'hvo_____',
   'Helvetica-BoldOblique'	=> 'hvbo____',
   'Symbol'			=> 'sy______',
   'Times-Roman'		=> 'tir_____',
   'Times-Bold'			=> 'tib_____',
   'Times-Italic'		=> 'tii_____',
   'Times-BoldItalic'		=> 'tibi____',
   'ZapfDingbats'		=> 'zd______',
);

my %afm_cache = ();

sub new
{
   my $class = shift;

   my $this = 
     {
        'properties'	=> shift,
        'font'		=> shift,
     };
   bless $this, $class;
} # sub new

sub stringWidth
{
   my $this 		= shift;
   my $text		= shift;
   my $properties 	= $$this{'properties'};
   my $font		= $$this{'font'};
   #my $fontpeer		= $font->getPeer();
   my $fontpeer		= $font;
   my $fontname		= $fontpeer->getFontName();

   die "Unsupported font name: '$fontname'" 
      unless exists $afm_mapping{$fontname};

   my $afm 		= $afm_cache{$fontname};

   unless( ref $afm )
   {
      my $filename	= $afm_mapping{$fontname} . ".afm";
      $afm		= Font::AFM->new($filename);
      $afm_cache{$fontname} = $afm;
   }

   $afm->stringwidth($text, $properties->getFontSize());
} # sub stringWidth

1;
# TextMetrics.pm

#
# Name of Release: $Name$
# $Log$
# Revision 1.3  2001/02/14 15:35:45  sridhar
# Added copyright and GPL notice
#
# Revision 1.2  2001/02/14 15:24:47  sridhar
# added CVS headers and trailers
#
#
