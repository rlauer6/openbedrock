# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package BLM::PDF::Render::Document;

BEGIN
{
   use vars qw(@ISA);
}

use BLM::PDF::Log;
use BLM::PDF::Constants;
use BLM::PDF::Document::Document;
use BLM::PDF::Render::Object::Registry;
use BLM::PDF::Render::Outline;
use BLM::PDF::Render::Page;
use BLM::PDF::Render::Pages;
use BLM::PDF::Render::PDFObject;

@ISA = qw(BLM::PDF::Render::PDFObject);

use strict;

my $PDFEOF = '%%EOF';

sub new
{
   my ($class, $registry, $peer) = @_;

   my $this =  
      { 'registry'	=> $registry,
	'peer'		=> $peer,
	'pages'		=> [],
	'pdf_file'	=> '',
      };

   my $newOb = 
      sub { BLM::PDF::Render::PDFObject->new($registry); };
  
   my $catalog = $newOb->();
   $catalog->insertName('Type', 'Catalog');
   $registry->setObject('document_catalog', $catalog);

   return bless $this, $class;
} # sub new

sub render
{
   my $this 	= shift;
   my $registry = $this->getRegistry();
   my $peer 	= $this->getPeer();

   my $pages = BLM::PDF::Render::Pages->new($registry, [$peer->getPages()]);
   $pages->render();

   if( $peer->getUseOutlines() )
   {
      my $outline = BLM::PDF::Render::Outline->new($registry, $peer);
      $outline->render();
   }
   my @xref_table = ();
 
   $$this{'pdf_file'} = "\%PDF-${BLM::PDF::Constants::PDFVersion}\n";
   my $offset = length $$this{'pdf_file'};
 
   # Sort the object by object number. This is
   # necessary so that the cross reference table
   # is correct as it is generated in ascending order
   my @objects = @{$registry->getObject('objects')};
 
   # During a pass of the objects, calling render may create
   # more objects. We must make as many passes as it takes to
   # render all objects
   my $pass = 1;
   my $size = scalar @objects;
   my $untouched_objects = $size;

   while( $untouched_objects )
   {
      @objects = 
	sort { $a->getObjectNumber() <=> $b->getObjectNumber } @objects;

      #print STDERR "PASS $pass\n";
      foreach my $obj (@objects)
      {
	  next if $obj->getRendered();

          #print STDERR "RENDERING: $obj $$obj{'object'}\n";
          my $text = $obj->render() . "\n";

          push(@xref_table, sprintf("%-10.10d %-5.5d n\n",
    		             length($$this{'pdf_file'}), 0));

          $offset += length $text;
   
          $$this{'pdf_file'} .= $text;
      }

      @objects = @{$registry->getObject('objects')};
      $untouched_objects = @objects - $size;
      #print STDERR "ADDITIONAL ", @objects-$size, " objects added\n";
      $size = scalar @objects;
      $pass++;
      #die if $pass > 3;
   } 

   # Add the file trailer
   my $trailer = new BLM::PDF::Render::Dictionary;
   my $catalog = $registry->getObject('document_catalog');
   $trailer->insertNumber('Size', $registry->getNextObjectNumber());
   $trailer->insertIndirectObject('Root', $catalog);
 
   # Now add the cross reference table
   my $xref_offset = length($$this{'pdf_file'});
 
   $$this{'pdf_file'} .= "xref\n" .
                         "0 ".(scalar(@xref_table)+1)."\n".
                         "0000000000 65535 f\n".
    	                 join("", @xref_table);
 
   $$this{'pdf_file'} .= "\ntrailer\n". $trailer->render();
   # Add the startxref and the eof
   return $$this{'pdf_file'} .= qq(\nstartxref\n$xref_offset\n$PDFEOF);
} # render

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.8  2001/02/14 15:35:45  sridhar
# Added copyright and GPL notice
#
# Revision 1.7  2001/02/14 15:24:46  sridhar
# added CVS headers and trailers
#
#
