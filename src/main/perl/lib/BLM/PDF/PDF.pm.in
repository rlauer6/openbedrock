# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package BLM::PDF::PDF;

@ISA = qw(BLM::PDF::Log);

use BLM::PDF::Log;
use BLM::PDF::Document::Document;
use BLM::PDF::Render::Document;
use BLM::PDF::Render::Page;

use strict;

BEGIN
{
    use Exporter ();
    use vars    qw ($VERSION @ISA);
    $VERSION    = do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::Log 1.01;
use SIS::Hash 1.01;

@ISA = qw(SIS::Hash);

#
# new
#
sub TIEHASH
{
    bless SIS::Hash->new(), shift;
} # sub TIEHASH

sub FETCH
{
    my $self = shift;

    my $what = shift;

    $self->{$what};
} # sub FETCH

sub new
{
   my $class = shift;
   my $this = {'document'   => undef,
	      };
   bless $this, $class;
} # sub new

sub newDocument
{
   new BLM::PDF::Document::Document;
} # newDocument

sub render
{
   my ($this, $doc) = @_;
   my $registry     = new BLM::PDF::Render::Object::Registry;
   my $render       = BLM::PDF::Render::Document->new($registry, $doc);
   $render->render();
} # sub render

1;

# PDF.pm

__END__

=pod

=head1 Synopsis

   use BLM::PDF::PDF

   Create a PDF object. PDF objects are used to create
   and render instances of BLM::PDF::Document::Document.
   The text returned by the renderer is compliant to the
   PDF 1.3 specification.

=over 4

=item *
Subroutine

B<Name:>           new

B<Synopsis:>       Constructor

B<Arguments:>      None.

B<Example:>

   my $pdf = BLM::PDF::PDF->new();

=item *
Subroutine

B<Name:>           newDocument

B<Synopsis:>       Creates a document object.

B<Arguments:>      None.

B<Returns:>        A reference to a BLM::PDF::Document::Document .

B<Example:>

   my $document = $pdf->newDocument();

=item *
Subroutine

B<Name:>           render

B<Synopsis:>       Output a pdf file for a document

B<Arguments:>      A reference to a BLM::PDF::Document::Document.

B<Returns:>        The PDF file representing the given document.

B<Example:>

   print $pdf->render($document);

=item *
Sample file

#!/usr/local/bin/perl 

use lib '/usr/lib/perl5/site_perl/5.005/Bedrock';
use lib '/usr/lib/perl5/site_perl/5.005/Bedrock/Text';
use lib '/usr/lib/perl5/site_perl/5.005/Bedrock/BLM/PDF';
use BLM::PDF::PDF;
use strict;

my $pdf = new BLM::PDF::PDF;
my $document = $pdf->newDocument;
$document->setUseOutlines(1);

my $page_properties = $document->getPageProperties();
$page_properties->setLeftHeader("Left Header");
$page_properties->setCenterHeader("%t");
$page_properties->setRightHeader("%n/%N");
$page_properties->setLeftFooter("Left Footer");
$page_properties->setCenterFooter("%t");
$page_properties->setRightFooter("%n/%N");
$page_properties->setLeftMargin(0.5);
$page_properties->setRightMargin(2);
$page_properties->setTopMargin(0.5);
$page_properties->setBottomMargin(2);
$page_properties->setVerticalPad(10);
$page_properties->setDiscardLeadingSpace(0);
$page_properties->setSize('executive');
$document->setPageProperties($page_properties);

my $pageone = $document->newPage;

my $properties = $pageone->getTextProperties();
$pageone->setOutlineText('First subheading');
$properties->setFontSize(18);
$properties->setTreatSpecialsAsWords(1);
$pageone->setTextProperties($properties);

my $sentence = "The quick brown fox jumped over the lazy dog\n";
my @names = ('Courier', 'Helvetica', 'Times-Roman', 'Courier-Oblique');

for( my ($i, $j) = (3, 0); $i; $i-- )
{
   foreach my $fontname (@names)
   {
      $properties->setColor(("#008888", "#888800")[$j%2]);
      my $font = new BLM::PDF::Text::Font;
      $font->setFontName($fontname);
      $properties->setFont($font);
      $properties->setFontSize(20 + int rand(11));
      $pageone->setTextProperties($properties);
      $pageone->addText($sentence);
      $j++;
   }
}

print $pdf->render();

= back

=cut

#
# Name of Release: $Name$
# $Log$
# Revision 1.9  2001/02/14 15:35:44  sridhar
# Added copyright and GPL notice
#
# Revision 1.8  2001/02/14 15:24:41  sridhar
# added CVS headers and trailers
#
#
