package BLM::PDF::Text::Font;

require 5.005;
use strict;


my $fontnum = 1;

sub new
{
   my $ref = shift;

   my $this = { 'name'		=> 'Courier',
		'encoding'	=> 'WinAnsi',
	        'handle'	=> 'F'.$fontnum++,
              };

   bless $this, $ref;
} # sub new

sub copy
{
   my $template = shift;
   my $this     = {};
   %$this       = %$template;
   bless $this, ref($template);
} # sub copy

sub setFontName
{
   my $this = shift;
   my ($name, $subtype) = @_;

   $$this{'name'} = $name if defined($name) && length($name);
} # sub setFontName

sub getFontName   { ${_[0]}->{'name'}; }
sub getFontHandle { ${_[0]}->{'handle'}; }

1;

# Font.pm

__END__

=pod

=head1 Synopsis

   Encapsulates information that identifies a font.
   Currently, all fonts are WinAnsi encoded.

=over 4

=item *
Subroutine

B<Name:>           new

B<Synopsis:>       Constructor

B<Arguments:>      None

B<Example:>

   my $font = BLM::PDF::Text::Font->new();

=item *
Subroutine

B<Name:>           setFontName

B<Synopsis:>       Sets the logical name of the font.


B<Arguments:>      The following case-sensitive values are valid:

       Courier  Courier-Bold  Courier-Oblique  Courier-BoldOblique
       Helvetica  Helvetica-Bold  Helvetica-Oblique  
       Helvetica-BoldOblique Times-Roman  Times-Bold  Times-Italic 
       Times-BoldItalic Symbol ZapfDingbats

B<Default:>         Courier

B<Example:>

   my $font = new BLM::PDF::Text::Font;
   $font->setName('Courier-Oblique');

=item *
Subroutine

B<Name:>           getFontName

B<Synopsis:>       Returns the logical name of the font

B<Arguments:>      None

B<Example:>

   my $font_name = $font->getFontName();

=item *
Subroutine

B<Name:>           copy

B<Synopsis:>       Returns a copy of an instance

B<Arguments:>      None

B<Example:>

   my $copy = $font->copy();

=back

=cut
