package BLM::PDF::Text::Properties;

require 5.005;
use BLM::PDF::Text::Font;
use strict;

my ($FILL, $STROKE, $FILL_STROKE) = (0..2);

sub new
{
   my $class = shift;

   my $this = {'font'  		=> new BLM::PDF::Text::Font,
	       'size'		=> 12,
	       'align'		=> undef,
	       'valign'		=> undef,
               'render_mode'	=> $FILL,
	       'color'		=> '000000',
	       'treat_specials_as_words' => 0,
              };

   bless $this, $class;
} # sub new

sub copy
{
   my $template = shift;
   my $this = {};
   %$this = %$template;
   $$this{'font'} = $$this{'font'}->copy();
   bless $this, ref($template);
} # sub copy

sub setFont
{
   my $this = shift;
   my $font = shift;
   $$this{'font'} = $font if ref $font ;
} # sub setFont

sub setFontSize
{
   my $this = shift;
   $$this{'size'} = shift;
} # sub setFontSize

sub getFontSize
{
   my $this = shift;
   $$this{'size'};
} # sub getFontSize

sub getFont 
{ 
   my $this = shift;
   $$this{'font'};
} # sub getFont

sub fill
{
   my $this = shift;
   $$this{'render_mode'} = $FILL;
} # sub fill

sub stroke
{
   my $this = shift;
   $$this{'render_mode'} = $STROKE;
} # sub stroke

sub fillAndStroke
{
   my $this = shift;
   $$this{'render_mode'} = $FILL_STROKE;
} # sub fillAndStroke

sub setAlign
{
   my $this = shift;
   my $align = shift;
   $align = lc $align if defined $align;
   $$this{'align'} = $align if ($align =~ /^left$|^center$|^right$/) ||
				         !defined($align);
} # sub setAlign

sub getAlign
{ 
   my $this = shift;
   $$this{'align'};
} # sub getAlign

sub setVAlign
{
   my $this = shift;
   my $align = shift ;
   $align = lc $align if defined $align;
   $$this{'valign'} = $align if ($align =~ /^top$|^center$|^bottom$/) ||
			        !defined($align);
} # sub setVAlign

sub getVAlign
{ 
   my $this = shift;
   $$this{'valign'};
} # sub getVAlign

sub getRenderMode
{ 
   my $this = shift;
   $$this{'render_mode'};
} # sub getRenderMode

sub setColor
{
   my $this = shift;
   $$this{'color'} = shift;
} # sub setStroke

sub getColor
{ 
   my $this = shift;
   $$this{'color'};
} # sub getColor

sub setTreatSpecialsAsWords { ${_[0]}->{'treat_specials_as_words'} = ${_[1]}; }
sub getTreatSpecialsAsWords { ${_[0]}->{'treat_specials_as_words'}; }

1;
