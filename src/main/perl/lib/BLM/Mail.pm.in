#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#) $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package BLM::Mail;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use SIS::Hash 1.01;
use Net::SMTP;    
@ISA = qw(SIS::Hash);

sub TIEHASH
{
    my $class = shift;
    my $server = shift;

    my $self = bless {}, $class;

# set some intelligent ? defaults
    $self->{'smtp_server'} = $server;
    $self->{'content-type'} = "text/plain";
    $self->{'encoding'} = "7bit";
    $self->{'timeout'} = 60;

    $self;
}

sub to { my $self = shift; $self->{to} = shift; }
sub cc { my $self = shift; $self->{cc} = shift; }
sub from { my $self = shift; $self->{from} = shift; }
sub subject { my $self = shift; $self->{subject} = shift; }
sub message { my $self = shift; $self->{message} = shift; }
sub timeout { my $self = shift; $self->{timeout} = shift; }
sub content_type { my $self = shift; $self->{'content-type'} = shift;}
sub encoding { my $self = shift; $self->{encoding} = shift;}

sub sendmail
{
    my $self = shift;

    die "TO ERROR" unless $self->{'to'};
    $self->{message} = shift if (@_ == 1);

    die "NO MESSAGE" unless $self->{'message'};

    my $smtp = Net::SMTP->new($self->{'smtp_server'}, 
			      Timeout => $self->{'timeout'});

    die "SMTP CONNECT ERROR" unless $smtp;

    die "FROM ERROR" unless $self->{'from'};

    $smtp->mail($self->{'from'});
    my @email = split /;/, $self->{'to'};
    push @email, split /;/, $self->{'cc'};
 
    foreach my $to (@email) { 
	if (!$smtp->to($to)) {
	    die "SEND ERROR";
	}
    }

    $smtp->data();
    $smtp->datasend("To: $self->{'to'}\n");
    $smtp->datasend("From: $self->{'from'}\n");
    $smtp->datasend("CC: $self->{'cc'}\n") if $self->{'cc'};
    $smtp->datasend("Subject: $self->{'subject'}\n");
    $smtp->datasend("Content-type: $self->{'content-type'}\n");
    $smtp->datasend("Content-Transfer-Encoding: $self->{'encoding'}\n\n");
    $smtp->datasend($self->{'message'});
    $smtp->dataend();
    $smtp->quit;

# reset vars
    $self->{'to'} = undef;
    $self->{'from'} = undef;
    $self->{'message'} = undef;
    $self->{'subject'} = undef;
    $self->{'cc'} = undef;
}

=head1 NAME

C<BLM::Mail> - An interface to Net::SMTP

=head1 DESCRIPTION

Allows Bedrock pages to send mail through an SMTP server.

=head1 OVERVIEW

C<BLM::Mail> allows the Bedrock scripter to send mail messages through an SMTP server.  
Messages of arbritrary content may sent using this facility.  You can send plain text or HTML for example
by altering the content header sent with the message.


=head1 SYNOPSIS

   <null --define-var = "mail" $Bedrock.new("BLM::Mail", "localhost", 60)>
   <null $mail.to("joe@palooka.net")>
   <null $mail.from("vinnie@gumbahtz.org")>
   <null $mail.cc("john@doe.com;jane@doe.com")>
   <null $mail.subject("family meeting")>
   <sink --define-var = "message">
     Meet at midnight. At the docks. Come alone.
   </sink>
   <null $mail.sendmail($message)>

=head1 CONSTRUCTOR

  <null --define-var = "mail" $Bedrock.new("BLM::Mail", host, [timeout])>

If C<timeout> is not provided, the C<timeout> value will default to 60 seconds.

=head1 METHODS

=head2 $mail.to( recipient )

Set the 'To' address for the mail message.

=head2 $mail.from( address )

Set the 'From' address for the mail message.

=head2 $mail.cc( address )

Set the 'CC' address.  This can be a ';' delimited list of email addresses.

=head2 $mail.subject( subject )

Set the 'Subject' field of the mail header.

=head2 $mail.sendmail( [message] )

Send the mail message.  The message can be passed as an argument or the BLM
will look to the C<message> property. The BLM will connect to the SMTP server and deliver
the message if possible.  Note that the connection to the server is made
when you invokde this method.  All of the properties ('to', 'from', etc.)
of the message are reset after the send is complete.

=head2 $mail.encoding( encoding )

Sets the 'Content-Transfer-Encoding' field of the mail header. Normally you don't
need to worry about this.  The default is '7bit'.

=head2 $mail.content_type( type )

Sets the 'Content-type' field of the mail header.  The default is 'text/plain'.
To send HTML in your email message use 'text/html'.

Example:

  <null --define-var = "mail" $Bedrock.new("BLM::SMTP", localhost)>
  <null $mail.to("me@here.com")>
  <null $mail.from("me@here.com")>
  <null $mail.subject("html mojo")>
  <null $mail.content_type("text/html")>
  <sink --define-var = "message">
    <font color=red>You've got mojo!</font><br>
  </sink>
  <null $mail.sendmail($message)>

=head2 $mail.timeout ( timeout) 

Sets the timeout value (in seconds) for connecting to the SMTP server.  The 
default is 60 seconds.  The BLM will throw an exception if a timeout occurs.

=head2 $mail.message ( message )

Sets the message content.

=head1 CHANGELOG

  $Log$
  Revision 1.4  2008/02/28 18:14:35  rlauer
  Applying Rob's patches to make Bedrock work on Apache 2.x
  (plus a few other obvious bug fixes).

  Revision 1.3  2001/02/14 15:35:43  sridhar
  Added copyright and GPL notice

  Revision 1.2  2001/02/07 17:34:38  rlauer
  - added pod documentation
  - created methods for setting the mail properties
  - optional argument of 'message' to sendmail()
  - option setting of timeout in constructor


=head1 AUTHOR

Rob Lauer - rlauer@cji.com

=head1 CREDITS

Just a wrapper on C<Net::Mail>.  Credit to that author.

=cut


1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.4  2008/02/28 18:14:35  rlauer
# Applying Rob's patches to make Bedrock work on Apache 2.x
# (plus a few other obvious bug fixes).
#
# Revision 1.3  2001/02/14 15:35:43  sridhar
# Added copyright and GPL notice
#
# Revision 1.2  2001/02/07 17:34:38  rlauer
# - added pod documentation
# - created methods for setting the mail properties
# - optional argument of 'message' to sendmail()
# - option setting of timeout in constructor
#
# Revision 1.1  2000/09/18 18:30:13  sridhar
# Moving some general purpose BLMs from Perl/BLM to Perl/Bedrock/BLM
#
# Revision 1.1  2000/06/22 14:30:53  rlauer
# Initial checkin.
#
#
