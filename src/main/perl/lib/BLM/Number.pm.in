#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package BLM::Number;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::Log 1.01;
use SIS::Hash 1.01;

@ISA = qw(SIS::Hash);

#
# new(number)
#
sub TIEHASH
{
    my $class = shift;
    my $val = shift;

    my $self = bless {}, $class;
    $self->{'value'} = $val;

    $self;
}

sub FETCH 
{
    my $self = shift;

    my $what = shift;

    return $self->{$what};
}


sub add
{
    my $self = shift;

    my $val = $self->{'value'};
    
    my $addthis = shift;

    $val += $addthis;

    return $val;
}

sub minus
{
    my $self = shift;

    my $val = $self->{'value'};
    $val -= shift;

    return $val;
}

sub times
{
    my $self = shift;

    my $val = $self->{'value'};
    $val *= shift;

    return $val;
}

sub divide
{
    my $self = shift;

    my $val = $self->{'value'};
    $val /= shift;

    return $val;
}

sub printf
{
    my $self = shift;

    my $str = shift;
    
    $str = sprintf($str, $self->{'value'});

    return $str;
}

sub gt
{
    my $self = shift;
    my $value = shift;

    $self->{'value'} > $value ? 1 : 0;
}

sub lt
{
    my $self = shift;
    my $value = shift;

    $self->{'value'} < $value ? 1 : 0;
}

sub eq
{
    my $self = shift;
    my $value = shift;

    $self->{'value'} == $value ? 1 : 0;
}

sub ge
{
    my $self = shift;
    my $value = shift;

    $self->{'value'} >= $value ? 1 : 0;
}

sub le
{
    my $self = shift;
    my $value = shift;

    $self->{'value'} <= $value ? 1 : 0;
}


sub nmod
{
    my $self = shift;

    my $n = shift;
    my $m = $self->{'value'};
    $m = ($m - 1)/$n;
    $m = int($m) + 1;
    
    return $m;
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.4  2000/11/30 14:26:07  sridhar
# Added CVS headers
#
#
