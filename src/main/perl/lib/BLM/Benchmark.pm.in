#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package BLM::Benchmark;

use strict;
use Carp;
use constant ANON_BENCHMARK		=> '__anon_benchmark__';
use Benchmark;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use SIS::Hash;

@ISA = qw( SIS::Hash );

sub TIEHASH
{
    my $class = shift;
    my $self = SIS::Hash->new;
    bless $self, $class;
}

sub FETCH
{
    my $self = shift;
    my $name = shift;
    die "$self: Unknown benchmark named `$name'\n" unless exists $self->{$name};
    $self->{$name} = [Benchmark->new, $self->{$name}] unless ref($self->{$name}) eq 'ARRAY';
    return timestr(timediff( @{$self->{$name}} ));
}

sub start
{
    my $self = shift;
    my $name = $_[0] || ANON_BENCHMARK;
    my $start = Benchmark->new;
    $self->{$name} = $start;
    return $start;
}

sub stop
{
    &Carp::cluck( "In stop(@_)" );
    my $self = shift;
    if ( @_ > 0 ) {
	return $self->{$_[0]};
    } else {
	my $name = ANON_BENCHMARK;
	my $value = $self->{$name};
	delete $self->{$name};
	return $value;
    }
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2000/09/25 20:13:20  sridhar
# Benchmarking module
#
#
