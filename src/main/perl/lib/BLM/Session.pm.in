package BLM::Session;

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2024, TBC Development Group, LLC.
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

use parent qw(BLM::IndexedTableHandler);

1;

## no critic (RequirePodSections)

__END__

=pod

=head1 PUBLIC

BLM::Session - plugin access to the session table

=head1 SYNOPSIS

<null $env.set('DBI_USER', 'fred',
               'DBI_PASS', 'flintstone',
               'DBI_DSN',  'dbi:mysql:bedrock',
               'DBI_HOST', '127.0.0.1')>
               
 <sqlconnect:dbi>

 <plugin::Session $dbi>

 <trace --output $Session.select()>

This BLM is actually just an example of how you can quickly setup an
ORM for a MySQL table.

The class for this BLM looks like this:

 package BLM::Session;
 
 use parent qw(IndexedTableHandler);

 1;

=head1 DESCRIPTION

Provides access to the session table if one exists. This BLM is really
just an example of how one might create a quick & dirty plugin to
access the methods of L<BLM::IndexedTableHandler> for I<any> table you
might have.

=head1 METHODS AND SUBROUTINES

See L<BLM::IndexedTableHandler>

=head1 AUTHOR

Rob Lauer - rclauer@gmail.com

=head1 SEE ALSO

L<BLM::Startup::UserSession>, L<BLM::IndexedTableHandler>, L<BLM::DBHandler>

=cut
