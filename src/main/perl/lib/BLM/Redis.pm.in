package BLM::Redis;

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.net
#    Copyright (C) 2001, Charles Jones, LLC.
#    Copyright (C) 2024, TBC Development Group, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

use strict;
use warnings;

use Role::Tiny::With;
with 'Bedrock::RedisClient';

use English qw(-no_match_vars);
use Bedrock::XML;
use JSON;

use parent qw( Bedrock::Hash );

########################################################################
sub TIEHASH {
########################################################################
  my ( $class, @args ) = @_;

  $class = ref($class) || $class;

  my $self = bless {}, $class;

  $self->init_blm;

  return $self;
}

########################################################################
sub init_blm {
########################################################################
  my ( $self, @args ) = @_;

  my $redis_config = $self->config( redis_config() );

  my $handle = $self->handle( redis_connect($redis_config) );

  return $handle;
}

########################################################################
sub handle {
########################################################################
  my ( $self, @args ) = @_;

  return $self->{_handle}
    if !@args;

  return $self->{_handle} = $args[0];
}

########################################################################
sub config {
########################################################################
  my ( $self, @args ) = @_;

  return $self->{_config}
    if !@args;

  return $self->{_config} = $args[0];
}

########################################################################
sub set_key {
########################################################################
  my ( $self, $key, $value ) = @_;

  if ( ref $value ) {
    $value = JSON->new->encode($value);
  }

  return $self->handle->set( $key, $value );
}

########################################################################
sub get_key {
########################################################################
  my ( $self, $key, $options ) = @_;

  my $value = $self->handle->get($key);

  if ( $options && !ref $options ) {
    $options = { $options => 1 };
  }

  if ( $options && ref $options ) {
    return JSON->new->decode($value)
      if $options->{json};

    return Bedrock::XML->newFromString($value)
      if $options->{xml};

    return $value;
  }

  return $value;
}

1;

## no critic (RequirePodSections)

__END__

=pod

=head1 PUBLIC

BLM::Redis - Interface to a Redis server

=head1 SYNOPSIS

 <plugin:Redis>

 <null:handle $Redis.handle()>
 <null $handle.set('foo', 'bar');

 <null $handle.get('foo')>

=head1 DESCRIPTION

=head1 METHODS AND SUBROUTINES

=head1 AUTHOR

BIGFOOT - <bigfoot@cpan.org>

=cut
