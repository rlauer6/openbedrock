#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

#
#    This file is a part of Bedrock, a server-side web scripting tool.
#    Check out http://www.openbedrock.org
#    Copyright (C) 2001, Charles Jones, LLC.
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#

package BLM::Startup::Cookie;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= 1.03;
}

use TagX::Log 1.01;
use SIS::Hash 1.01;
@ISA = qw(SIS::Hash);

=pod

=head1 NAME

BLM::Startup::Cookie

=head1 SYNOPSIS

  <null $cookie.send_cookie("pecan", "value", "1", "expires", 3600)>

  <var $cookie.pecan>

=head1 DESCRIPTION

Retrieve or set HTTP cookies.

=head1 METHODS

=cut


sub TIEHASH
{
    my ($class, $ctx, $config) = @_;

    my $self = bless {}, $class;
    for my $name ($ctx->getCookieValue) {
	$self->{$name} = $ctx->getCookieValue ($name);
    }

    $self->{ctx} = $ctx;
    $self;
}

=pod

=head2 send_cookie

=cut

sub send_cookie {
  my $self = shift;
  my $ctx = $self->{ctx};

  my $name = shift;

  my $cref;
  if (ref($_[0])) {
    $cref = shift;
  }
  else {
   $cref = {@_};
  }
 
  my $header = $name . '=' . $cref->{'value'} . '; ';
  
  $header .= 'path=' . ($cref->{'path'} || '/') . '; ';
  
  $header .= 'domain=' . $cref->{domain} . '; ' if length( $cref->{domain} );
  
  if ( exists $cref->{'expires'} ) {
	    my $expiry = POSIX::strftime("%a, %d-%b-%Y %T GMT", gmtime(time + $cref->{'expires'}));
	    $header .= 'expires=' . $expiry . '; ';
	  }
  
  $self->{'ctx'}->cgi_header_out('Set-Cookie', $header);
}

=pod

=head1 AUTHOR

Jay Sridhar

=cut


1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.4  2008/12/03 14:01:19  alans
# We now use a hard-coded value for module $VERSION rather than a munged
# version of the expansion of the CVS 'Revision' keyword; the module API
# version number is orthogonal to the identifyer in the source control
# system.
#
# This change makes it safe to import the Bedrock codebase into another
# source repository (even CVS!) without breaking the code. We hit this
# issue when we first released the libbedrock-perl .deb package, for which
# we imported the release tarball sources into the 'bedrock-deb' CVS project.
#
# Revision 1.3  2008/11/25 19:04:13  rlauer
# changes based on Bedrock 2.0 migration plan
#
# Revision 1.2  2001/02/14 15:35:46  sridhar
# Added copyright and GPL notice
#
# Revision 1.1  2000/06/07 18:48:47  sridhar
# Added cookie module for unpacking cookies.
#
#
