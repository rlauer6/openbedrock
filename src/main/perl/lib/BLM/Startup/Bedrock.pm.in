#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package BLM::Startup::Bedrock;

use strict;
use Symbol;
use File::Basename;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::Log 1.01;
use SIS::Hash;
@ISA = qw(SIS::Hash);

sub TIEHASH
{
    my $class = shift;
    my $self = bless {}, $class;
    $self->{'version'} = $Text::TagX::VERSION;

    if ( exists $ENV{'HTTP_HOST'} ) {
	if ( $ENV{'MOD_PERL'} ) {
	    $self->{'script_fullpath'} = $ENV{'SCRIPT_FILENAME'};
	} else {
	    $self->{'script_fullpath'} = $ENV{'PATH_TRANSLATED'};
	}
	$self->{'script_file'} = basename($self->{'script_fullpath'});
	$self->{'script_dir'} = dirname($self->{'script_fullpath'});
	$self->{'script_relative_uri'} = $ENV{'SCRIPT_NAME'} || $ENV{'REQUEST_URI'} || $ENV{'SCRIPT_URL'};
	my $proto = $ENV{'HTTPS'} eq 'on' ? 'https' : 'http';
	$self->{'script_absolute_uri'} = $proto . '://' . $ENV{'HTTP_HOST'} . $self->{'script_relative_uri'};
    }

    $self;
}

sub require_version
{
    my $self = shift;
    my $version = shift;
    die "Require version $version. This version is only $Text::TagX::VERSION\n"
	unless $Text::TagX::VERSION >= $version;
}

sub makeHash
{
    goto &new;
}

sub makeArray
{
    goto &newArray;
}

sub new
{
    my $self = shift;
    my $class = shift;
    &log_message( undef, "$self: creating an object of class $class" );
    $self->loadModule( $class );
    my $href = {};
    tie %{$href}, $class, @_;
    bless $href, $class;
}

sub newArray
{
    my $self = shift;
    my $class = shift;
    $self->loadModule( $class );
    my $aref = [];
    tie @{$aref}, $class, @_;
    bless $aref, $class;
}

sub newHandle
{
    my $self = shift;
    my $class = shift;
    $self->loadModule( $class );
    my $fd = gensym;
    tie *{$fd}, $class, @_;
    bless $fd, $class;
    $fd;
}

sub loadModule
{
    my $self = shift;
    my @mods = @_;

    for my $class (@mods) {
	$class =~ s!::!/!g;
	$class =~ s!$!.pm! unless $class =~ /\.pm$/;
	next if $INC{$class};
	require $class;
	&log_message( undef, "$class loaded successfully" );
    }
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.8  2000/10/16 13:57:04  sridhar
# Changes to accomodate Bedrock shell.
#
# Revision 1.7  2000/08/21 21:00:59  sridhar
# Recomputation of script_* properties of bedrock object.
#
# Revision 1.6  2000/08/18 19:27:36  sridhar
# Added properties 'script_(file|dir|(absolute|relative)_uri)' to
# bedrock object.
#
# Revision 1.5  2000/08/17 16:59:43  sridhar
# 1. Added method `newHandle()' for creating a new handle
# 2. Removed method `reloadModule()'
#
# Revision 1.4  2000/06/26 14:00:09  sridhar
# 1. Added methods loadModule() and reloadModule() for loading modules
# on the fly.
# 2. Replaced FETCH with TIEHASH which initialized needed variables
# during construction
#
# Revision 1.3  2000/06/14 13:59:45  sridhar
# Added new() and newArray() as synonyms for makeHash() and makeArray().
#
# Revision 1.2  2000/06/07 18:35:21  sridhar
# Removed a debug log message
#
# Revision 1.1  2000/06/06 20:42:08  sridhar
# Bedrock loadable modules for startup
#
#
