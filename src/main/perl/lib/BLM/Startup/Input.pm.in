#!/usr/local/bin/perl -w

# ident "@(#) $Header$"
# ident "@(#)        $Name$"

package BLM::Startup::Input;

use strict;

BEGIN
{
    use Exporter ();
    use vars	qw ($VERSION @ISA);
    $VERSION	= do { my @r = (q$Revision$ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
}

use TagX::Log 1.01;
use SIS::Hash 1.01;
@ISA = qw(SIS::Hash);

sub TIEHASH
{
    my ($class, $ctx) = @_;
    bless SIS::Hash->new('*ctx*' => \$ctx), $class;
}

sub ctx
{
    ${$_[0]->{'*ctx*'}};
}

sub FETCH
{
    my ($self, $key) = @_;
    $self->{$key} = $self->ctx->getInputValue($key) unless exists $self->{$key};
    $self->{$key};
}

sub FIRSTKEY
{
    my $self = shift;
    my @keys = $self->ctx->getInputValue;
    @{$self}{@keys} = $self->ctx->getInputValue(@keys);
    each %{$self};
}

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.2  2000/10/16 13:55:56  sridhar
# Streamlining to accomodate Bedrock shell:
# 1. Module doesn't do anything about input until asked for.
# 2. Stores the context object as a private value for later unpacking of
# the CGI vars
#
# Revision 1.1  2000/06/06 20:42:08  sridhar
# Bedrock loadable modules for startup
#
#
