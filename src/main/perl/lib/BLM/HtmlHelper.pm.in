package BLM::HtmlHelper;

use BLM::IndexedTableHandler::Common qw(create_xhtml_element create_xhtml_element_header);

BEGIN {
  use strict;
  use vars qw(@ISA);
  use BLM::PLUGIN;
  @ISA = qw(BLM::PLUGIN);
}

sub new {
  my $class = shift;
  $class = ref($class) || $class;

  die "<plugin:HtmlHelper $input>" unless
    ref($_[0]) =~/BLM::Startup::Input/;
  my $input = shift;

  my $self = $class->SUPER::new;
  bless $self, $class;

  %attributes = @_;
  $self->{attributes} = \%attributes;
  $self->{input} = $input;

  return $self;
}

sub select {
  my $self = shift;
  my $menu = shift;
  my %attributes = @_;

  die "<var \$HtmlHelper.select(hash, ...)>" unless
    UNIVERSAL::isa($menu, 'HASH');

  # merge help attributes?
  foreach (keys %{$self->{attributes}}) {
    $attributes{$_} = $self->{attributes}->{$_};
  }

  my $name = $attributes{name} if exists $attributes{name};
  my $selected_value = $self->{input}->{$name} if $name;

  my @options;

  foreach (keys %$menu) {
    my %option_attributes;
    $option_attributes{value} = $_;
    if ($name && ($_ eq $selected_value)) {
	$option_attributes{selected} = "selected";
      }
    push @options, {text => $menu->{$_}, attributes => \%option_attributes};
  }

  return create_xhtml_element('select', join('', map { create_xhtml_element('option', $_->{text}, %{$_->{attributes}}) } @options), %attributes);
}

1;

=pod

=head1 NAME

 C<BLM::HtmlHelper>

=head1 SYNOPSIS


=head1 DESCRIPTION

=head1 NOTES

=head1 AUTHOR

Rob Lauer - rlauer@signatureinfo.com

=cut

1;

#
# Name of Release: $Name$
# $Log$
# Revision 1.1  2009/12/28 13:12:39  rlauer
# a plugin for generating HTML
#
