#-*- mode: makefile; -*-
postamble ::

BEDROCK_TESTS = \
    t/00-var.yml \
    t/01-multi-line.yml \
    t/02-null.yml \
    t/03-if.yml \
    t/04-foreach.yml \
    t/05-iif.yml \
    t/06-open.yml \
    t/07-plugin.yml \
    t/08-reftype.yml \
    t/09-sink.yml \
    t/10-try.yml \
    t/11-snippet.yml \
    t/14-flush.yml \
    t/15-include.yml \
    t/16-case.yml \
    t/17-array.yml \
    t/18-hash.yml \
    t/19-pebble.yml \
    t/20-benchmark.yml \
    t/22-include.yml

BEDROCK_MAIL_TESTS = \
    t/23-mail.yml

BEDROCK_SQL_TESTS = \
    t/12-sqlconnect.yml \
    t/13-sql.yml \
    t/21-sqlselect.yml

# NOTE:
#
# Each test is represented by a .yml (YAML) file. We create a symbolic
# link for each .yml file of the form t/test.t to the generic
# `test.tag.pl`.  This script figures out which test to run based on
# the basename of the test being executed.  Accordingly because we
# create the symbolic links to a test directory so we are only saving
# the .yml files to the project
#
# See `perldoc lib/Test/Bedrock.pm` for more information about
# creating Bedrock tests.

test:: $(BEDROCK_TESTS)
	if test -z "$$DBI_SOCKET"; then \
	  if test -e '/tmp/mysqld/mysqld.sock'; then \
	     DBI_SOCKET=/tmp/mysqld/mysqld.sock; \
	  fi; \
	fi; \
	TESTS=$$TESTS; \
	if test -z "$$TESTS"; then \
	  TESTS="$(BEDROCK_TESTS)"; \
	elif [ "$$TESTS" = "all" ]; then \
	  TESTS="$(BEDROCK_TESTS) $(BEDROCK_SQL_TESTS) $(BEDROCK_MAIL_TESTS)"; \
	elif [ "$$TESTS" = "mail" ]; then \
	  TESTS="$(BEDROCK_MAIL_TESTS)"; \
	elif [ "$$TESTS" = "sql" ]; then \
	  TESTS="$(BEDROCK_SQL_TESTS)"; \
	else \
	  echo "TESTS: $$TESTS"; \
	  if ! test -e "$TESTS"; then \
	    set -x; \
	    TEST_LIST=$$TESTS; \
	    TESTS=""; \
	    for a in $$TEST_LIST; do \
	      echo "a = $$a"; \
	      T=$$(find t/ -name "*$${a}.yml" -print -quit 2>/dev/null); \
	      test -n "$$T" && TESTS="$$TESTS $$T"; \
	    done; \
	    if test -z "$$TESTS"; then \
	      >&2 echo "no such test"; \
	      exit 1; \
	    fi; \
	  fi; \
	fi; \
	test_dir=$$(mktemp -d); \
	mkdir $$test_dir/t; \
	for a in $$TESTS; do \
	  test_file=$$(basename $$a .yml); \
	  ln -s $$(pwd)/test-tag.pl $$test_dir/t/$$test_file.t; \
	  echo ln -s $$(pwd)/test-tag.pl $$test_dir/t/$$test_file.t; \
	done; \
	DBI_SOCKET="$$DBI_SOCKET" CONFIG_PATH=$$(pwd) prove -v -I lib/ -I lib/Bedrock -I lib/Bedrock/Text $$test_dir/t; \
	test -n "$$test_dir" && rm -rf "$$test_dir"
	rm -f foo.roc foo.inc foo.csv

install::
	for a in bedrock bedrock-cache bedrock-site-install bedrock-plugin dnky-config; do \
	  ln -sf $(INSTALLSITEBIN)/$$a.pl $(INSTALLSITEBIN)/$$a; \
	done
	sharedir=$$(perl -MFile::ShareDir -e 'print File::ShareDir::dist_dir(q{Bedrock});');
	@echo "+-------------------------------------------------+"
	@echo "|             Welcome to Bedrock!                 |"
	@echo "|                Yabba Dabba...                   |"
	@echo "| try: echo '<trace --output \$$env>' | bedrock.pl  |"
	@echo "+-------------------------------------------------+"
