#!/bin/bash

# $Id$
# 
# Build the Bedrock RPM
#

build_rpm() {
    if autoreconf -i --force; then 
	./configure --prefix=/usr && make dist
	
 # get last tar ball built
	bedrock=$(ls -1t bedrock-*.tar.gz | head -n 1)

 # build RPM
	rpmbuild -tb $bedrock
    else
	echo "Build failed: $@" > 2
	return -1

    fi

    return 0
}


update_release() {
    version=$(perl -n -e '/^ac_init(.*?)(\d\.\d\.\d+)/i && print "$2\n";' configure.ac)
    echo "bedrock-$version-$BEDROCK_RELEASE"
    echo "$BEDROCK_RELEASE" > bedrock-build
}

help() {
    echo "build-bedrock-rpm [option]"
    echo ""
    echo "  Options:"
    echo "           help     -> this"
    echo "           reset    -> reset release to 0"
    echo "           bump     -> bump release"
    echo "           release  -> build RPM from last tagged version"
    echo "                    -> build RPM from cwd"

    return 0
}


[ ! -e bedrock-build ] && echo "0" > bedrock-build

BEDROCK_RELEASE=$(cat bedrock-build)

case "$1" in
    help)
	help
	;;

    ?)
	help
	;;

    reset) 
	BEDROCK_RELEASE="0"
	update_release
	;;
    
    bump)
	BEDROCK_RELEASE=$(expr 1 + $BEDROCK_RELEASE)
	update_release
	;;
    
    release)
	pwd=$(pwd)
	echo $pwd

	if [ ! -e "configure.ac" ]; then
	    echo "no configure.ac"
	    exit -1
	fi

	last_tag=$(cvs status -v configure.ac | grep  -A 1 "Existing Tags:" | tail -1 | awk '{print $1}')
	cd /tmp

	rm -rf /tmp/openbedrock

        cvs export -r $last_tag openbedrock

	cd openbedrock

	build_rpm

	cd ${pwd}
	;;

    *)
	build_rpm
	;;
esac
