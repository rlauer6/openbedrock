<object >

  <!-- Log options -->
  <scalar name="LOGFILE">@logfile@</scalar>
  <scalar name="LOGLEVEL">MSG_DEBUG</scalar>
  <scalar name="HTML_LOGSPOOLER"></scalar>
  <scalar name="HTML_LOGFILE">@html_logfile@</scalar>
  <scalar name="HTML_LOGMAXSIZE">200000</scalar>

  <object name="LOGCONFIG">
    <scalar name="log4perl.rootLogger">INFO, LOGFILE</scalar>
    <scalar name="log4perl.appender.LOGFILE">Log::Log4perl::Appender::File</scalar>
    <scalar name="log4perl.appender.LOGFILE.filename">bedrock.log</scalar>
    <scalar name="log4perl.appender.LOGFILE.mode">append</scalar>
    <scalar name="log4perl.appender.LOGFILE.layout">PatternLayout</scalar>
    <scalar name="log4perl.appender.LOGFILE.layout.ConversionPattern">%%d [%%r] - %%m%%n</scalar>
  </object>
  
  <!-- Directories -->
  <scalar name="HTML_LOGDIR">/var/www/log/html</scalar>
  <scalar name="LOGDIR">/var/www/log</scalar>
  <scalar name="PEBBLE_DIR">/var/www/pebbles</scalar>
  <scalar name="SESSION_DIR">/var/www/session</scalar>
  <scalar name="INCLUDE_DIR">/var/www/include</scalar>

  <!-- Configuration file path -->
  <scalar name="BEDROCK_CONFIG_PATH">/usr/lib/bedrock/config</scalar>
  <scalar name="APP_CONFIG">tagx_apps.xml</scalar>

  <!-- Resources --> 
  <scalar name="BEDROCK_IMAGE_DIR">/usr/share/bedrock/img/</scalar>
  <scalar name="BEDROCK_PEBBLE_DIR">/usr/share/bedrock/pebbles</scalar>
  <scalar name="BEDROCK_ERROR_LOCATION">/usr/share/bedrock/htdocs/error.roc</scalar>
  <scalar name="BEDROCK_LOGO">bedrock.gif</scalar>
  <scalar name="BEDROCK_ERROR_LOGO">bedbug.jpg</scalar>

  <!-- URLS -->
  <scalar name="BEDROCK_POD_CSS_URL">/bedrock/css/pod.css"</scalar>
  <scalar name="BEDROCK_SOURCE_CSS_URL">/bedrock/css/source.css"</scalar>
  <scalar name="BEDROCK_IMAGE_URL">/bedrock/img</scalar>

  <!-- Options -->
  <scalar name="RELOAD">yes</scalar>
  <scalar name="ALLOW_BEDROCK_INFO">yes</scalar>
  <scalar name="ALLOW_BEDROCK_CONFIG_INFO">no</scalar>
  <scalar name="ALLOW_BEDROCK_ENV_INFO">no</scalar>
  <scalar name="ALLOW_SNIPPET_TAG">no</scalar>
  <scalar name="REPLACE_CONFIG">no</scalar>

  <!-- XML Options -->
  <object name="XML">
    <scalar name="handler">Bedrock::Serializer::XML</scalar>
    <object name="out">
      <scalar name="NoAttr">1</scalar>
      <scalar name="KeepRoot">0</scalar>
      <scalar name="RootName">response</scalar>
      <scalar name="NoSort">1</scalar>
      <array name="KeyAttr"></array>
      <scalar name="XMLDecl">1</scalar>
      <scalar name="NoEscape">1</scalar>
    </object>
    <object name="in">
      <scalar name="NoAttr">0</scalar>
      <scalar name="KeepRoot">1</scalar>
      <array name="KeyAttr"></array>
    </object>
  </object>

  <!-- Modules -->
  <!--
      Startup module details: This should have the following structure.
      The startup modules item `MODULES' should be an array with one item
      for each startup module. The item for each module should be an object
      with the following properties defined.

      1. `binding' [ required ]
      Name of the variable which is available to Bedrock pages.

      2. `module' [ required ]
      Perl module implementing the class

      3. `type' [ optional, defaults to `object', allowed types are
      `object', `array' and `handle' ]
      The type of the binding, determines what type of object is
      created. 

      4. `header' [ required to be defined in at least one module ]
      Indicate that the current module is a header module. One of the
      startup modules MUST have this defined.

      5. `config' [ required if the module requires it ]
      Object containing the configuration for this module. Passed to
      the class constructor if this is defined.
    -->

  <array name="MODULES">

    <!-- Expose configuration, both bedrock and application -->
    <object>
      <scalar name="binding">config</scalar>
      <scalar name="module">BLM::Startup::Config</scalar>
    </object>

    <!-- Cookies access -->
    <object>
      <scalar name="binding">cookie</scalar>
      <scalar name="module">BLM::Startup::Cookie</scalar>
    </object>

    <!-- Expose the application environment -->
    <object>
      <scalar name="binding">env</scalar>
      <scalar name="module">BLM::Startup::Env</scalar>
    </object>

    <!-- HTTP Header access and manipulation -->
    <object>
      <scalar name="binding">header</scalar>
      <scalar name="module">BLM::Startup::Header</scalar>
      <scalar name="header">yes</scalar>
    </object>

    <!-- Form input access -->
    <object>
      <scalar name="binding">input</scalar>
      <scalar name="module">BLM::Startup::Input</scalar>
    </object>

    <!-- End of object MODULES -->
  </array>
</object>
