services:
  localstack:
    profiles:
      - localstack
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    hostname: s3
    networks:
      default:
        aliases:
          - s3.localhost.localstack.cloud
    ports:
      - "127.0.0.1:4510-4530:4510-4530"
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    environment:
      - SERVICES=s3,ssm,secretsmanager,kms,sqs,events,sts
      - DEBUG=${DEBUG-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  redis:
    profiles:
      - redis
    image: redis/redis-stack-server:latest
    ports: 
      - '6379:6379'
    expose:
      - 6379
  db:
    image: mysql:8.4
    command:
      --bind-address=0.0.0.0
    restart: 'no'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    expose:
      - 3306
    volumes:
      - my-db:/var/lib/mysql
      - /tmp/mysqld:/var/run/mysqld
      - ./log4perl.conf:/var/www/bedrock/config/log4perl.conf
      - ./data-sources.xml:/var/www/bedrock/config/data-sources.xml
      - ./redis.xml:/var/www/bedrock/config/redis.xml
      - ./redis-session.xml:/var/www/bedrock/config.startup/redis-session.xml
      - ./mysql-session.xml:/var/www/bedrock/config.startup/mysql-session.xml

  web:
    read_only: false
    build:
      context: ${PWD}
      dockerfile: ${PWD}/${DOCKERFILE}
    image: "${DOCKERIMAGE}"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    tty: true
    stdin_open: true
    ports:
      - '80:80'
    expose:
      - 80
    volumes:
      - ./mysql-session.xml:/var/www/bedrock/config.d/startup/mysql-session.xml
      - ./data-sources.xml:/var/www/bedrock/config/data-sources.xml
      - ./apache2.conf:/etc/apache2/apache2.conf
  datadog:
    profiles:
      - datadog
    image: datadog/agent:latest
    container_name: datadog-agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE_LOGS=name:datadog-agent
      - DD_SITE=us5.datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_DOGSTATSD_STATS_ENABLE=true
      - DD_APM_ENABLED=true
      - DD_DOGSTATSD_PORT=8125
      - DD_AGENT_HOST=datadog-agent
      - DD_DOGSTATSD_ORIGIN_DETECTION_CLIENT=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_METRICS_STATS_ENABLE=true
    ports:
      - '8126:8126'
      - '8125:8125/udp'
    expose:
      - 8126
      - 8125
    volumes:
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default

volumes:
  my-db:

