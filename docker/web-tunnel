#!/usr/bin/env bash
#-*- mode: sh; -*-

function usage() {
cat <<EOF
usage: $0 [options] command

Options
-------
-u remote user
-b bastion host
-i remote host ip address
-I identity file (default: ~/.ssh/id_rsa)
-p remote port, default: 80
-l localport, default: 8080

Command
-------
up   - bring the ssh tunnel up
down - bring the ssh tunnel down

EOF
}

########################################################################
function verify_or_exit() {
########################################################################
    verify_message="$1"
    
    test -n "$verify_message" && echo -e "\033[1m${verify_message}\033[0m"
    echo -e "\033[1mContinue (y/n)?\033[0m"
    
    read -n 1 -s ans
    if ! test "$ans" = "y"; then
	exit 1
    fi
}


# +-------------------------+
# | MAIN SCRIPT STARTS HERE |
# +-------------------------+

OPTS=$(getopt -o hl:p:u:b:H:i:I: -- "$@")

if [ $? -ne 0 ]; then
    echo "could not parse options"
    exit $?
fi

eval set -- "$OPTS"

while [ $# -gt 0 ]; do
    case "$1" in
	-h)
	    usage;
	    exit;
	    ;;
        -p)
            shift;
            REMOTE_PORT="$1";
            shift;
            ;;
        -l)
            shift;
            LOCAL_PORT="$1";
            shift;
            ;;

        -u)
            shift;
            REMOTE_USER="$1"
            shift;
            ;;

        -I)
            shift;
            IDENTITY="$1"
            shift;
            ;;

        -i)
            shift;
            REMOTE_HOST="$1"
            shift;
            ;;

        -b)
            shift;
            REMOTE_BASTION="$1"
            shift;
            ;;
            
	--)
	    break;
	    ;;

	*)
	    break;
	    ;;
    esac
done

shift;

command="$1"

LOCAL_PORT=${LOCAL_PORT:-8080}

REMOTE_PORT=${REMOTE_PORT:-80}

IDENTITY=${IDENTITY:-~/.ssh/id_rsa}

if test -z "$REMOTE_USER"; then
    echo "ERROR: not REMOTE_USER set"
    usage;
    exit;
fi

if test -z "$REMOTE_HOST"; then
    echo "ERROR: not REMOTE_HOST set"
    usage;
    exit;
fi

if test -z "$REMOTE_BASTION"; then
    echo "ERROR: not REMOTE_BASTION set"
    usage;
    exit;
fi

case "$command" in
    up)
	echo ssh -i $IDENTITY -f -N -L $LOCAL_PORT:$REMOTE_HOST:$REMOTE_PORT $REMOTE_USER@$REMOTE_BASTION -v ;
	;;

   down)
       exit 1;
       ;;

    *)
	echo "unknown command $command"
	exit 1;
	;;
esac

exit 0

