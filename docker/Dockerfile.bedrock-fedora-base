FROM fedora:latest as httpd-mod-perl-fedora

RUN dnf install -y httpd httpd-devel apr apr-util \
    perl-core less gcc make awk libpng libpng-devel
RUN dnf install -y curl --allowerasing

RUN curl -L https://cpanmin.us | perl - App::cpanminus
RUN cpanm -n -v Apache::Test ExtUtils::XSBuilder
RUN cpanm -n -v Module::CoreList

RUN curl -LO https://archive.apache.org/dist/perl/mod_perl-2.0.13.tar.gz && \
   tar xvzf mod_perl-2.0.13.tar.gz && \
   cd mod_perl-2.0.13 && \
   perl Makefile.PL  && \
   make && make install

RUN rm -rf /mod_perl-2.0.13*

RUN curl -O https://dlcdn.apache.org//httpd/libapreq/libapreq2-2.17.tar.gz
RUN tar xfvz libapreq2-2.17.tar.gz
RUN cd /libapreq2-2.17 &&  \
    ./configure --with-apache2-apxs=/usr/bin/apxs  && \
    make && make install
RUN cd /libapreq2-2.17 && \
    perl Makefile.PL --with-apache2-apxs=/usr/bin/apxs && \
    make && make install

RUN rm -rf /libapreq2-2.17

FROM httpd-mod-perl-fedora AS bedrock-base-fedora

RUN curl -L  https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm  -O
RUN dnf install -y mysql80-community-release-el9-1.noarch.rpm
RUN rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2023

RUN dnf install -y mysql-community-client mysql-community-devel sqlite
RUN cpanm -n -v DBD::mysql DBD::SQLite Crypt::CBC

RUN ccflags=$(perl -MConfig -e 'print qq{$Config{ccflags} -Wno-implicit-function-declaration};'); \
    cpanm -n -v --configure-args="ccflags='$ccflags'" Crypt::DES

# TODO: these should come from the Bedrock distribution itself
# - create build rule for requires and test-requires using this:
#
#cpanm $(jq -r '
#  .prereqs
#  | to_entries[]
#  | select(.key == "runtime" or .key == "build" or .key == "test")
#  | .value.requires
#  | to_entries[]
#  | "\(.key)~\(.value)"
#' META.json | sed 's/~/>=/')

COPY requires requires
COPY test-requires test-requires

RUN for a in $(perl -ne '($m,$v) = split /\s+/; $v ? "\@$v": ""; printf q{%s%s}, "\n", $m, $v;' requires); do \
      cpanm -n -v $a; \
    done
RUN for a in $(perl -ne '($m,$v) = split /\s+/; $v ? "\@$v" : ""; printf q{%s%s},"\n", $m, $v;' test-requires); do \
      cpanm -n -v $a; \
    done

RUN dnf clean all && rm -rf /var/cache/yum
